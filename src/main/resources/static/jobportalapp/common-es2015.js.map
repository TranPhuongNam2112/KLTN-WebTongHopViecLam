{"version":3,"sources":["./src/app/_services/candidate/all-joblist.service.ts","./src/app/_services/employer/search-jobtype.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AllJoblistService {\r\n  private gettAllJobListURL = 'http://localhost:8080/home/alljobposts';\r\n  private deleteurl='http://localhost:8080/candidate/savedjobposts';\r\n  private getsaveJobPosturl = 'http://localhost:8080/candidate/savedjobposts';\r\n  private test = 'http://localhost:8080/candidate/savedjobposts';\r\n  private savejobpostURL='http://localhost:8080/candidate/savejobpost';\r\n  private getRecommendJobPostURL = 'http://localhost:8080/candidate/recommendedjobposts';\r\n  private getRecommendJobPostNoPageURL = 'http://localhost:8080/candidate/recommendedjobposts';\r\n  private getTopViewedJobpostsURL = 'http://localhost:8080/home/topviewedjobposts';\r\n  private getHotCrawledJobpostURL = 'http://localhost:8080/home/hotjobposts';\r\n  constructor(private http: HttpClient) { }\r\n \r\n  getHotCrawledJobpost(pageNo: number): Observable<any> {\r\n    return this.http.get(`${this.getHotCrawledJobpostURL}`+'?pageNo='+pageNo);\r\n  }\r\n  getTopViewedJobposts ()\r\n  {\r\n   return this.http.get(`${this.getTopViewedJobpostsURL}`);  \r\n  }\r\n  getRecommendJobPost (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.getRecommendJobPostURL}`+'?pageNo='+pageNo);  \r\n  }\r\n  getRecommendJobPostNoPage ()\r\n  {\r\n   return this.http.get(`${this.getRecommendJobPostNoPageURL}`);  \r\n  }\r\n  getSaveJobPost (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.getsaveJobPosturl}`+'?pageNo='+pageNo);  \r\n  }\r\n  getSaveJobPostTest ()\r\n  {\r\n   return this.http.get(this.test);  \r\n  }\r\n  gettAllJobList (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.gettAllJobListURL}`+'?pageNo='+pageNo);  \r\n  }\r\n  saveJobPost(id: number): Observable<any> {\r\n    return this.http.post(`${this.savejobpostURL}/${id}`,id, { responseType: 'text' });\r\n  }\r\n  deleteSaveJobPost(id: number): Observable<any> {\r\n    return this.http.delete(`${this.deleteurl}/${id}`, { responseType: 'text' });\r\n  }\r\n   \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchJobtypeService {\r\n  private searchJobTypeURL = 'http://localhost:8080/home';\r\n  private searchIndustryURL = 'http://localhost:8080/home/searchIndustryByName';\r\n  constructor(private http: HttpClient) { }\r\n  searchJobByJobType(jobtype: string): Observable<any> {\r\n    return this.http.get(`${this.searchJobTypeURL}/${jobtype}`);\r\n  }\r\n  searchIndustry(industry: string): Observable<any> {\r\n    return this.http.get(`${this.searchIndustryURL}/${industry}`);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}