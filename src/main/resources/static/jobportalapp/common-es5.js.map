{"version":3,"sources":["webpack:///src/app/_services/candidate/all-joblist.service.ts","webpack:///src/app/_services/employer/search-jobtype.service.ts"],"names":["AllJoblistService","http","gettAllJobListURL","deleteurl","getsaveJobPosturl","test","savejobpostURL","getRecommendJobPostURL","getRecommendJobPostNoPageURL","getTopViewedJobpostsURL","getHotCrawledJobpostURL","pageNo","get","id","post","responseType","providedIn","SearchJobtypeService","searchJobTypeURL","searchIndustryURL","jobtype","industry"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AllJoblistService {\r\n  private gettAllJobListURL = 'http://localhost:8080/home/alljobposts';\r\n  private deleteurl='http://localhost:8080/candidate/savedjobposts';\r\n  private getsaveJobPosturl = 'http://localhost:8080/candidate/savedjobposts';\r\n  private test = 'http://localhost:8080/candidate/savedjobposts';\r\n  private savejobpostURL='http://localhost:8080/candidate/savejobpost';\r\n  private getRecommendJobPostURL = 'http://localhost:8080/candidate/recommendedjobposts';\r\n  private getRecommendJobPostNoPageURL = 'http://localhost:8080/candidate/recommendedjobposts';\r\n  private getTopViewedJobpostsURL = 'http://localhost:8080/home/topviewedjobposts';\r\n  private getHotCrawledJobpostURL = 'http://localhost:8080/home/hotjobposts';\r\n  constructor(private http: HttpClient) { }\r\n \r\n  getHotCrawledJobpost(pageNo: number): Observable<any> {\r\n    return this.http.get(`${this.getHotCrawledJobpostURL}`+'?pageNo='+pageNo);\r\n  }\r\n  getTopViewedJobposts ()\r\n  {\r\n   return this.http.get(`${this.getTopViewedJobpostsURL}`);  \r\n  }\r\n  getRecommendJobPost (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.getRecommendJobPostURL}`+'?pageNo='+pageNo);  \r\n  }\r\n  getRecommendJobPostNoPage ()\r\n  {\r\n   return this.http.get(`${this.getRecommendJobPostNoPageURL}`);  \r\n  }\r\n  getSaveJobPost (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.getsaveJobPosturl}`+'?pageNo='+pageNo);  \r\n  }\r\n  getSaveJobPostTest ()\r\n  {\r\n   return this.http.get(this.test);  \r\n  }\r\n  gettAllJobList (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.gettAllJobListURL}`+'?pageNo='+pageNo);  \r\n  }\r\n  saveJobPost(id: number): Observable<any> {\r\n    return this.http.post(`${this.savejobpostURL}/${id}`,id, { responseType: 'text' });\r\n  }\r\n  deleteSaveJobPost(id: number): Observable<any> {\r\n    return this.http.delete(`${this.deleteurl}/${id}`, { responseType: 'text' });\r\n  }\r\n   \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchJobtypeService {\r\n  private searchJobTypeURL = 'http://localhost:8080/home';\r\n  private searchIndustryURL = 'http://localhost:8080/home/searchIndustryByName';\r\n  constructor(private http: HttpClient) { }\r\n  searchJobByJobType(jobtype: string): Observable<any> {\r\n    return this.http.get(`${this.searchJobTypeURL}/${jobtype}`);\r\n  }\r\n  searchIndustry(industry: string): Observable<any> {\r\n    return this.http.get(`${this.searchIndustryURL}/${industry}`);\r\n  }\r\n\r\n}\r\n"]}