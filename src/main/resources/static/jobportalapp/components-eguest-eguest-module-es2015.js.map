{"version":3,"sources":["./src/app/components/eguest/eforgot-pass/eforgot-pass.component.ts","./src/app/components/eguest/eforgot-pass/eforgot-pass.component.html","./src/app/components/eguest/eguest-dashboard/eguest-dashboard.component.ts","./src/app/components/eguest/eguest-dashboard/eguest-dashboard.component.html","./src/app/components/eguest/eguest-routing.module.ts","./src/app/components/eguest/eguest.component.ts","./src/app/components/eguest/eguest.component.html","./src/app/components/eguest/eguest.module.ts","./src/app/components/eguest/evalidate-acc/evalidate-acc.component.ts","./src/app/components/eguest/evalidate-acc/evalidate-acc.component.html","./src/app/components/employer/e-login/e-login.component.ts","./src/app/components/employer/e-login/e-login.component.html","./src/app/components/employer/e-register/e-register.component.ts","./src/app/components/employer/e-register/e-register.component.html","./src/app/shared/components/header-for-eguest/header-for-eguest.component.ts","./src/app/shared/components/header-for-eguest/header-for-eguest.component.html"],"names":[],"mappings":"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","file":"components-eguest-eguest-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-eforgot-pass',\r\n  templateUrl: './eforgot-pass.component.html',\r\n  styleUrls: ['./eforgot-pass.component.scss']\r\n})\r\nexport class EforgotPassComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header-for-eguest></app-header-for-eguest>\r\n<main>\r\n    <forgot-pass></forgot-pass>\r\n</main>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-eguest-dashboard',\r\n  templateUrl: './eguest-dashboard.component.html',\r\n  styleUrls: ['./eguest-dashboard.component.scss']\r\n})\r\nexport class EguestDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <app-header-for-eguest></app-header-for-eguest> -->\r\n<section>\r\n    <!-- Full Page Intro -->\r\n    <div class=\"view jarallax\"\r\n        style=\"background-image: url('./assets/images/candidate/login.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;\">\r\n        <!-- Mask & flexbox options-->\r\n        <div class=\"mask rgba-black-light d-flex justify-content-center align-items-center\">\r\n            <!-- Content -->\r\n            <div class=\"container\">\r\n                <!--Grid row-->\r\n                <div class=\"row\">\r\n                    <!--Grid column-->\r\n                    <div class=\"col-md-12 mb-4 white-text text-center\">\r\n                        <h5 class=\"display-3  white-text mb-0 mt-5 pt-md-5 pt-5\">Helping Your Business Move Up</h5>\r\n\r\n                        <h4 class=\"subtext-header text-light mt-2 mb-4\">get your job matched with the right candidate\r\n                        </h4>\r\n                        <br />\r\n                        <br />\r\n                        <a [routerLink]=\"['/guest/login']\" mdbBtn color=\"primary\" rounded=\"true\" mdbWavesEffect>\r\n                            <mdb-icon fas icon=\"user\" class=\"left\"></mdb-icon><strong>Sign in now!</strong>\r\n                        </a>\r\n                        <hr class=\"hr-light my-4 wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n                        <br />\r\n                    </div>\r\n                    <!--Grid column-->\r\n                </div>\r\n\r\n                <!--Grid row-->\r\n            </div>\r\n            <!-- Content -->\r\n        </div>\r\n        <!-- Mask & flexbox options-->\r\n    </div>\r\n\r\n\r\n    <!-- container suitable product -->\r\n    <div class=\"container\">\r\n        <!-- Section: Testimonials v.1 -->\r\n        <section class=\"text-center my-5\">\r\n            <!-- Section heading -->\r\n            <h5 class=\"display-4 dark-grey-text mt-5  mb-5\"><strong>Our Suitable Product</strong></h5>\r\n            <!-- Section description -->\r\n            <!-- Grid row -->\r\n            <div class=\"row\">\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 mb-3 \">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"bg-function\">\r\n                        <mdb-card-body>\r\n                            <h6 class=\"white-text\">\r\n                                <mdb-icon fas icon=\"pen\" class=\"pr-2\"></mdb-icon><strong>POST A JOB</strong>\r\n                            </h6>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 mb-3\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"bg-function\">\r\n                        <mdb-card-body>\r\n                            <h6 class=\"white-text\">\r\n                                <mdb-icon fas icon=\"search\" class=\"pr-2\"></mdb-icon><strong>SEARCH RESUME</strong>\r\n                            </h6>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 mb-3\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"bg-function\">\r\n                        <mdb-card-body>\r\n                            <h6 class=\"white-text\">\r\n                                <mdb-icon fas icon=\"cogs\" class=\"pr-2\"></mdb-icon><strong>MANAGE JOBS</strong>\r\n                            </h6>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 mb-3\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"bg-function\">\r\n                        <mdb-card-body>\r\n                            <h6 class=\"white-text\">\r\n                                <mdb-icon fas icon=\"user-friends\" class=\"pr-2\"></mdb-icon><strong>MANAGE PROFILE</strong>\r\n                            </h6>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n\r\n            </div>\r\n            <!-- Grid row -->\r\n\r\n        </section>\r\n        <!-- Section: Testimonials v.1 -->\r\n    </div>\r\n    <!-- container suitable product -->\r\n\r\n\r\n\r\n\r\n\r\n    <!-- container satisfy company -->\r\n    <div class=\"container\">\r\n        <!-- Section: Testimonials v.1 -->\r\n        <section class=\"text-center my-5\">\r\n           \r\n            <!-- Section heading -->\r\n            <h5 class=\"display-4  dark-grey-text mt-5 pt-4  mb-5\"><strong>Our Clients Are Satisfied</strong></h5>\r\n\r\n            <!-- Section description -->\r\n\r\n\r\n            <!-- Grid row -->\r\n            <div class=\"row\">\r\n\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-12 mb-lg-0 mb-4 \">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"testimonial-card\">\r\n                        <!--Background color-->\r\n                        <div class=\"card-up blue-gradient\">\r\n                        </div>\r\n                        <!--Avatar-->\r\n                        <div class=\"avatar mx-auto white mt-5\">\r\n                            <img src=\"./assets/images/employer/nash.png\" alt=\"fjsjk\" class=\"rounded img-fluid\">\r\n                        </div>\r\n                        <mdb-card-body>\r\n                            <!--Name-->\r\n                         \r\n                            <hr>\r\n                            <!--Quotation-->\r\n                            <p class=\"dark-grey-text mt-4 font-italic\">\r\n                                <mdb-icon fas icon=\"quote-left\" class=\"pr-2\"></mdb-icon>Sự quan tâm tận tình của\r\n                                easyJobs thật sự rất khác biệt\r\n                            </p>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 mb-md-0 mb-4\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"testimonial-card\">\r\n                        <!--Background color-->\r\n                        <div class=\"card-up blue-gradient\">\r\n                        </div>\r\n                        <!--Avatar-->\r\n                        <div class=\"avatar mx-auto white mt-5\">\r\n                            <img src=\"./assets/images/employer/cmc.jpg\" class=\" rounded img-fluid\">\r\n                        </div>\r\n                        <mdb-card-body>\r\n                            <!--Name-->\r\n                           \r\n                            <hr>\r\n                            <!--Quotation-->\r\n                            <p class=\"dark-grey-text mt-4 font-italic\">\r\n                                <mdb-icon fas icon=\"quote-left\" class=\"pr-2\"></mdb-icon>Sự hài hòng làm chúng tôi tin easyJobs nhiều hơn\r\n                            </p>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 mb-md-0 mb-4\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"testimonial-card\">\r\n                        <!--Background color-->\r\n                        <div class=\"card-up blue-gradient\">\r\n                        </div>\r\n                        <!--Avatar-->\r\n                        <div class=\"avatar mx-auto white mt-5\">\r\n                            <img src=\"./assets/images/employer/misa.jpg\" class=\" rounded img-fluid\">\r\n                        </div>\r\n                        <mdb-card-body>\r\n                            <!--Name-->\r\n                         \r\n                            <hr>\r\n                            <!--Quotation-->\r\n                            <p class=\"dark-grey-text mt-4 font-italic\">\r\n                                <mdb-icon fas icon=\"quote-left\" class=\"pr-2\"></mdb-icon>Chúng tôi đã tuyển\r\n                                được những chuyên gia giỏi nhất\r\n                            </p>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"testimonial-card\">\r\n                        <!--Background color-->\r\n                        <div class=\"card-up indigo\"></div>\r\n                        <!--Avatar-->\r\n                        <div class=\"avatar mx-auto white mt-5\">\r\n                            <img src=\"./assets/images/employer/fpt.png\" class=\"rounded img-fluid\">\r\n                        </div>\r\n                        <mdb-card-body>\r\n                          \r\n                            <hr>\r\n                            <!--Quotation-->\r\n                            <p class=\"dark-grey-text mt-4 font-italic\">\r\n                                <mdb-icon fas icon=\"quote-left\" class=\"pr-2\"></mdb-icon>easyJobs tư vấn rất chu đáo,\r\n                                nhiệt tình và đáng tin cậy\r\n                            </p>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n\r\n            </div>\r\n            <!-- Grid row -->\r\n\r\n        </section>\r\n        <!-- Section: Testimonials v.1 -->\r\n    </div>\r\n    <!-- container satisfy company -->\r\n    <!-- Full Page Intro -->\r\n</section>\r\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EguestComponent } from './eguest.component';\r\n\r\nimport {EguestDashboardComponent } from './eguest-dashboard/eguest-dashboard.component';\r\nimport { ELoginComponent} from '../employer/e-login/e-login.component';\r\nimport { ERegisterComponent} from '../employer/e-register/e-register.component';\r\nimport { EforgotPassComponent} from '../eguest/eforgot-pass/eforgot-pass.component';\r\nimport {EvalidateAccComponent } from './evalidate-acc/evalidate-acc.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EguestComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: EguestDashboardComponent\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: ELoginComponent\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: ERegisterComponent\r\n      },\r\n      {\r\n        path: 'forgot-pass',\r\n        component: EforgotPassComponent\r\n      },\r\n      {\r\n        path: 'validate',\r\n        component: EvalidateAccComponent\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EguestRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-eguest',\r\n  templateUrl: './eguest.component.html',\r\n  styleUrls: ['./eguest.component.scss']\r\n})\r\nexport class EguestComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  \r\n}\r\n","<app-header-for-eguest></app-header-for-eguest>\r\n    <router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EguestRoutingModule } from './eguest-routing.module';\r\nimport { EguestComponent } from './eguest.component';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { HeaderForEguestComponent } from '../../shared/components/header-for-eguest/header-for-eguest.component';\r\nimport { EguestDashboardComponent } from './eguest-dashboard/eguest-dashboard.component';\r\nimport { ELoginComponent} from '../employer/e-login/e-login.component';\r\nimport { ERegisterComponent} from '../employer/e-register/e-register.component';\r\nimport { EforgotPassComponent } from './eforgot-pass/eforgot-pass.component';\r\nimport { EvalidateAccComponent } from './evalidate-acc/evalidate-acc.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EguestComponent,\r\n    HeaderForEguestComponent,\r\n    EguestDashboardComponent,\r\n    ELoginComponent,\r\n    ERegisterComponent,\r\n    EforgotPassComponent,\r\n    EvalidateAccComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule.forRoot(),\r\n    EguestRoutingModule\r\n  ]\r\n})\r\nexport class EguestModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-evalidate-acc',\r\n  templateUrl: './evalidate-acc.component.html',\r\n  styleUrls: ['./evalidate-acc.component.scss']\r\n})\r\nexport class EvalidateAccComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header-for-eguest></app-header-for-eguest>\r\n<main>\r\n    <share-validate-acc></share-validate-acc>\r\n</main>\r\n<app-footer></app-footer>","import { Component, OnInit, NgZone} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { _AuthService } from '../../../shared/services/auth.service';\r\nimport { TokenStorageService } from '../../../shared/services/token-storage.service';\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';\r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { Socialusers } from '../../../_models/socialusers'\r\nimport { SocialloginService } from '../../../_services/sociallogin.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n//toast\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n@Component({\r\n  selector: 'app-e-login',\r\n  templateUrl: './e-login.component.html',\r\n  styleUrls: ['./e-login.component.scss']\r\n})\r\nexport class ELoginComponent implements OnInit {\r\n  loginForm: any = {};\r\n    isLoggedIn = false;\r\n    isLoginFailed = false;\r\n    errorMessage = '';\r\n     roles: string[] = [];\r\n     showEmployer = false;\r\n       //social login start\r\n       response;\r\n       socialusers = new Socialusers();\r\n       //social login end\r\n\r\n  constructor(\r\n    private authService: _AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    //  social login start\r\n    // public OAuth: AuthService,\r\n    // private SocialloginService: SocialloginService,\r\n    // private router: Router,\r\n    //  social login end\r\n      //toast\r\n      config: NgbModalConfig, private modalService: NgbModal,\r\n      public toastService: ToastService,\r\n      private ngZone: NgZone \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n  onSubmit() {\r\n    this.authService.login(this.loginForm).subscribe(\r\n      data => {\r\n        console.warn(\"Bearer\" + this.loginForm.value);\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveUser(data);\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        // this.reloadPage();\r\n        console.warn(\"Bearer\" + this.loginForm.value);\r\n      },\r\n      err => {\r\n         this.errorMessage = err.error.message;\r\n       // this.errorMessage = \"Error email or password\";\r\n        this.isLoginFailed = true;\r\n\r\n      }\r\n    );\r\n    console.warn(this.loginForm.value);\r\n  }\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n  //social login start\r\n  // public socialSignIn(socialProvider: string,dangerTpl,successTpl) {\r\n  //   let socialPlatformProvider;\r\n  //   if (socialProvider === 'facebook') {\r\n  //     socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n  //   } else if (socialProvider === 'google') {\r\n  //     socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n  //   }\r\n  //   this.OAuth.signIn(socialPlatformProvider).then(socialusers => {\r\n  //     console.log(socialProvider, socialusers);\r\n  //     console.log(socialusers);\r\n  //     if (socialProvider === 'facebook') {\r\n  //       this.SavesresponseFB(socialusers,dangerTpl,successTpl);\r\n  //     } else if (socialProvider === 'google') {\r\n  //       this.SavesresponseGG(socialusers,dangerTpl,successTpl);\r\n  //     }\r\n     \r\n  //   });\r\n  // }\r\n  // SavesresponseGG(socialusers: Socialusers,dangerTpl,successTpl) {\r\n  //   this.SocialloginService.loginGoogleEmployer(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //    this.router.navigate(['/employer']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //  //this.errorMessage = err.message;\r\n  //  this.errorMessage=\"Are you candidate? Look like you are loging in as candidate user. Click here \";\r\n  //  this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  // SavesresponseFB(socialusers: Socialusers,dangerTpl,successTpl) {\r\n  //   this.SocialloginService.loginFacebookEmployer(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //    this.router.navigate(['/employer']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //  //this.errorMessage = err.message;\r\n  //  this.errorMessage=\"Are you candidate? Look like you are loging in as canddidate user. Click here \";\r\n  //  this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  //social login end\r\n}\r\n","<!-- Full Page Login -->\r\n<div class=\"view\">\r\n    <!-- Mask & flexbox options-->\r\n    <div class=\"mask rgba-blue-grey-strong d-flex justify-content-center align-items-center\">\r\n        <!-- Content -->\r\n        <div class=\"container mb-5\">\r\n            <!--Grid row-->\r\n            <div class=\"row pt-lg-5 mt-lg-5\">\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 mb-5 mt-md-0 mt-5 white-text text-center text-md-left wow fadeInLeft\"\r\n                    data-wow-delay=\"0.3s\">\r\n                    <h1 class=\"display-4 font-weight-bold\">Helping Your Business Move Up</h1>\r\n                    <hr class=\"hr-light\">\r\n                    <h6 class=\"mb-3\">get your job matched with the right candidate .</h6>\r\n                    <!-- <a mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect [routerLink]=\"['../']\">Learn more</a> -->\r\n                    <a mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect>Learn more</a>\r\n                </div>\r\n                <!--Grid column-->\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 col-xl-5 mb-4\">\r\n                    <!--Form-->\r\n                    <mdb-card class=\"wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                        <mdb-card-body class=\"z-depth-2\">\r\n                            <form *ngIf=\"!isLoggedIn\" name=\"loginForm\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n                                #f=\"ngForm\" novalidate>\r\n                                <div class=\"text-center\">\r\n                                    <h3 class=\"blue-text\">\r\n                                        <strong>Sign in</strong>\r\n                                    </h3>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <!-- <div class=\"row d-flex justify-content-center\">\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                      \r\n                                        <button type=\"button\" mdbBtn size=\"lg\" color=\"fb\" class=\"btn btn-indigo\"\r\n                                            mdbWavesEffect\r\n                                            (click)=\"socialSignIn('facebook',dangerTpl,successTpl)\"\r\n                                            > <span>Facebook</span></button>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                            (click)=\"socialSignIn('google',dangerTpl,successTpl)\"\r\n                                            > Google\r\n                                        </button>\r\n                                    </div>\r\n                                </div> -->\r\n                                <!-- <div\r\n                                    style=\"width: 100%; height: 20px; border-bottom: 1px ridge ; text-align: center; margin-bottom: 20px;\">\r\n                                    <span style=\"font-size: 14px; background-color: #ffffff; padding: 0 10px;\">\r\n                                        or\r\n                                    </span>\r\n                                </div> -->\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"loginForm.email\"\r\n                                        required email #email=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && email.invalid\">\r\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"email.errors.email\">Email must be a valid email address</div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                                        [(ngModel)]=\"loginForm.password\" required minlength=\"8\" #password=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\"\r\n                                        *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            Password must be at least 8 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    <a [routerLink]=\"['../forgot-pass']\" class=\"text-primary\">Forgot password?</a>\r\n                                </div>\r\n                                <div class=\"text-center mt-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button class=\"btn btn-primary btn-block\">\r\n                                            Sign in\r\n                                        </button>\r\n                                    </div>\r\n                                    <!-- Register -->\r\n                                    <!-- <p>Don't have an accout yet? -->\r\n                                    <!-- <a [routerLink]=\"['../register']\"><strong>Register now!</strong></a> -->\r\n                                    <!-- <a><strong>Register now!</strong></a>\r\n                                    </p> -->\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\r\n                                        Login failed: {{ errorMessage }}\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                            <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n                                <!-- Logged in as {{ roles }}. -->\r\n                                Login successful!\r\n                            </div>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--/.Form-->\r\n                </div>\r\n                <!--Grid column-->\r\n            </div>\r\n            <!--Grid row-->\r\n            <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n        </div>\r\n        <!-- Content -->\r\n    </div>\r\n    <!-- Mask & flexbox options-->\r\n</div>\r\n<!-- Full Page Login -->\r\n<ng-template #successTpl>\r\n    <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span>\r\n</ng-template>\r\n<ng-template #dangerTpl >\r\n    <span><i class=\"fa fa-exclamation-triangle fa-lg mr-3\" aria-hidden=\"true\"></i>{{ errorMessage }}<i class=\"fas fa-arrow-up\"></i></span>\r\n</ng-template>","import { Component, OnInit , NgZone} from '@angular/core';\r\nimport { _AuthService } from '../../../shared/services/auth.service';\r\nimport { TokenStorageService } from '../../../shared/services/token-storage.service';\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';\r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { Socialusers } from '../../../_models/socialusers'\r\nimport { SocialloginService } from '../../../_services/sociallogin.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n//toast\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n@Component({\r\n  selector: 'app-e-register',\r\n  templateUrl: './e-register.component.html',\r\n  styleUrls: ['./e-register.component.scss']\r\n})\r\nexport class ERegisterComponent implements OnInit {\r\n  eregisterForm: any = {};\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  mobNumberPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\r\n\r\n  //social login start\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  roles: string[] = [];\r\n  showEmployer = false;\r\n  response;\r\n  socialusers = new Socialusers();\r\n  //social login end\r\n  constructor(\r\n    private authService: _AuthService,\r\n   //  social login start\r\n    private tokenStorage: TokenStorageService,   \r\n    // public OAuth: AuthService,\r\n    private SocialloginService: SocialloginService,\r\n    private router: Router,\r\n    //  social login end\r\n     //toast\r\n     config: NgbModalConfig, private modalService: NgbModal,\r\n     public toastService: ToastService,\r\n     private ngZone: NgZone \r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.eregisterForm.role = \"employer\";\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.authService.registerEmployer(this.eregisterForm).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n   //social login start\r\n  //  public socialSignIn(socialProvider: string,dangerTpl,successTpl) {\r\n  //   let socialPlatformProvider;\r\n  //   if (socialProvider === 'facebook') {\r\n  //     socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n  //   } else if (socialProvider === 'google') {\r\n  //     socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n  //   }\r\n  //   this.OAuth.signIn(socialPlatformProvider).then(socialusers => {\r\n  //     console.log(socialProvider, socialusers);\r\n  //     console.log(socialusers);\r\n  //     if (socialProvider === 'facebook') {\r\n  //       this.SavesresponseFB(socialusers,dangerTpl,successTpl);\r\n  //     } else if (socialProvider === 'google') {\r\n  //       this.SavesresponseGG(socialusers,dangerTpl,successTpl);\r\n  //     }\r\n  //   });\r\n  // }\r\n  // SavesresponseGG(socialusers: Socialusers,dangerTpl,successTpl) {\r\n  //   this.SocialloginService.loginGoogleEmployer(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //    this.router.navigate(['/employer']);\r\n  //   }, err => {\r\n  //    // this.errorMessage = err.error.message;\r\n  //    this.errorMessage=\"Are you candiate? Look like you are loging in as candidate user. Click here \";\r\n  //    this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  // SavesresponseFB(socialusers: Socialusers,dangerTpl,successTpl) {\r\n  //   this.SocialloginService.loginFacebookEmployer(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //    this.router.navigate(['/employer']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //  //this.errorMessage = err.message;\r\n  //  this.errorMessage=\"Are you candidate? Look like you are loging in as candidate user. Click here \";\r\n  //  this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  //social login end\r\n}\r\n","<!-- <app-header-for-eguest></app-header-for-eguest> -->\r\n<!-- Navbar -->\r\n<!-- Full Page Intro -->\r\n<div class=\"login\">\r\n    <!-- Mask & flexbox options-->\r\n    <div class=\"mask rgba-blue-grey-strong d-flex justify-content-center align-items-center\">\r\n        <!-- Content -->\r\n        <div class=\"container mb-5\">\r\n            <!--Grid row-->\r\n            <div class=\"row pt-3\">\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-1 col-sm-1\">\r\n                </div>\r\n                <!--Grid column-->\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-6 col-md-10 col-sm-10 \">\r\n                    <!--Form-->\r\n                    <mdb-card class=\"wow fadeInRight \" data-wow-delay=\"0.3s\">\r\n\r\n                        <mdb-card-body class=\"z-depth-2 \">\r\n                            <form *ngIf=\"!isSuccessful\" name=\"eregisterForm\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n                                #f=\"ngForm\" novalidate>\r\n                                <!--Header-->\r\n                                <div class=\"text-center\">\r\n                                    <h3 class=\"blue-text\">\r\n                                        <strong>Register</strong>\r\n                                    </h3>\r\n                                    <hr>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"row d-flex justify-content-center\">\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                      \r\n                                        <button type=\"button\" mdbBtn size=\"lg\" color=\"fb\" class=\"btn btn-indigo\"\r\n                                            mdbWavesEffect\r\n                                            (click)=\"socialSignIn('facebook',dangerTpl,successTpl)\"\r\n                                            > <span>Facebook</span></button>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                            (click)=\"socialSignIn('google',dangerTpl,successTpl)\"\r\n                                            >\r\n                                            Google\r\n                                        </button>\r\n                                    </div>\r\n                                </div> -->\r\n                                <!-- <div\r\n                                    style=\"width: 100%; height: 20px; border-bottom: 1px ridge ; text-align: center; margin-bottom: 20px;\">\r\n                                    <span style=\"font-size: 14px; background-color: #ffffff; padding: 0 10px;\">\r\n                                        or\r\n                                    </span>\r\n                                </div> -->\r\n                                <!--Body-->\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\">Legal Representative Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"eregisterForm.name\"\r\n                                        required minlength=\"3\" maxlength=\"20\" #name=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\r\n                                        <div *ngIf=\"name.errors.required\">Name is required</div>\r\n                                        <div *ngIf=\"name.errors.minlength\">\r\n                                            Name must be at least 3 characters\r\n                                        </div>\r\n                                        <div *ngIf=\"name.errors.maxlength\">\r\n                                            Name must be at most 20 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"email\" class=\"form-control\" name=\"email\"\r\n                                        [(ngModel)]=\"eregisterForm.email\" required email #email=\"ngModel\" />\r\n\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\r\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"email.errors.email\">\r\n                                            Email must be a valid email address\r\n                                        </div>\r\n                                    </div>\r\n                                    <small id=\"emailHelp2\" class=\"form-text text-success\">We'll never share your email\r\n                                        with anyone.</small>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"companyname\">Company Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"companyname\"\r\n                                        [(ngModel)]=\"eregisterForm.companyname\" required minlength=\"3\" maxlength=\"30\"\r\n                                        #companyname=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && companyname.invalid\">\r\n                                        <div *ngIf=\"companyname.errors.required\">Company Name is required</div>\r\n                                        <div *ngIf=\"companyname.errors.minlength\">\r\n                                            Company name must be at least 3 characters\r\n                                        </div>\r\n                                        <div *ngIf=\"companyname.errors.maxlength\">\r\n                                            Company name must be at most 30 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"industry\">Industry</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"industry\"\r\n                                        [(ngModel)]=\"eregisterForm.industry\" required minlength=\"3\" maxlength=\"30\"\r\n                                        #industry=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && industry.invalid\">\r\n                                        <div *ngIf=\"industry.errors.required\">Industry is required</div>\r\n                                        <div *ngIf=\"industry.errors.minlength\">\r\n                                            Industry must be at least 3 characters\r\n                                        </div>\r\n                                        <div *ngIf=\"industry.errors.maxlength\">\r\n                                            Industry must be at most 30 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"phonenumber\">Phone</label>\r\n                                    <input type=\"tel\" class=\"form-control\" name=\"phonenumber\"\r\n                                        [(ngModel)]=\"eregisterForm.phonenumber\" [pattern]=\"mobNumberPattern\" required\r\n                                        maxlength=\"10\" #phonenumber=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && phonenumber.invalid\">\r\n                                        <div *ngIf=\"phonenumber.errors.required\">Phone is required</div>\r\n                                        <div *ngIf=\"phonenumber.errors.pattern\">\r\n                                            Invalid phone number\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <small id=\"optional\" class=\"ml-2  text-success\">(at least 6 characters)</small>\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                                        [(ngModel)]=\"eregisterForm.password\" required minlength=\"6\"\r\n                                        #password=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            Password must be at least 6 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" class=\"form-control\" name=\"role\" [(ngModel)]=\"eregisterForm.role\"\r\n                                        required #role=\"ngModel\" disabled style=\"display: none;\" />\r\n                                </div>\r\n\r\n\r\n                                <div class=\"text-center mt-3\">\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <button mdbBtn color=\"primary\" outline=\"true\" rounded=\"true\" block=\"true\"\r\n                                            class=\"my-4 waves-effect z-depth-0\"\r\n                                            mdbWavesEffect><strong>Register</strong></button>\r\n                                    </div>\r\n\r\n                                    <!-- Register -->\r\n                                    <!-- <h6>Already have account?\r\n                                        <a [routerLink]=\"['../login']\"><strong>Sign in</strong></a>\r\n                                    </h6> -->\r\n                                </div>\r\n                                <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n                                    Signup failed!<br />{{ errorMessage }}\r\n                                </div>\r\n                            </form>\r\n                          \r\n                            <div class=\"alert alert-success mt-3 text-center\" *ngIf=\"isSuccessful\">\r\n                                Signup successfully.\r\n                                <a [routerLink]=\"['/guest/login']\" target=\"_blank\"><strong>Sign In</strong></a>\r\n                                <!-- Please check your mail to validate your account.<br />\r\n                                <a [href]=\"'https://mail.google.com/mail/'\" target=\"_blank\"><strong>Go to\r\n                                        gmail</strong></a> -->\r\n                            </div>\r\n                       \r\n\r\n                        </mdb-card-body>\r\n\r\n                    </mdb-card>\r\n                    <!--/.Form-->\r\n                </div>\r\n                <!--Grid column-->\r\n            </div>\r\n            <!--Grid row-->\r\n            <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n        </div>\r\n        <!-- Content -->\r\n    </div>\r\n    <!-- Mask & flexbox options-->\r\n</div>\r\n<ng-template #successTpl>\r\n    <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span>\r\n</ng-template>\r\n<ng-template #dangerTpl >\r\n    <span><i class=\"fa fa-exclamation-triangle fa-lg mr-3\" aria-hidden=\"true\"></i>{{ errorMessage }}<i class=\"fas fa-arrow-up\"></i></span>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-for-eguest',\r\n  templateUrl: './header-for-eguest.component.html',\r\n  styleUrls: ['./header-for-eguest.component.scss']\r\n})\r\nexport class HeaderForEguestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" [containerInside]=\"false\">\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand>\r\n        <a class=\"navbar-brand\" [routerLink]=\"['/eguest']\">\r\n            <img src=\"../assets/images/logo.png\" height=\"30\" alt=\"\">\r\n        </a>\r\n    </mdb-navbar-brand>\r\n    <!-- Collapsible content -->\r\n    <links>\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            \r\n            <li class=\"nav-item\">\r\n                 <a  [routerLink]=\"['/guest/login']\" class=\"nav-link waves-light\" mdbWavesEffect><strong>Sign In</strong></a> \r\n                \r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a [routerLink]=\"['/eguest/register']\"  class=\"nav-link waves-light\" mdbWavesEffect><strong>Register</strong></a>\r\n            </li>\r\n            <li>\r\n                <button mdbBtn type=\"button\" size=\"md\" color=\"secondary\" rounded=\"true\" mdbWavesEffect [routerLink]=\"['/guest']\"><strong>Jobseeker's Site</strong></button>\r\n            </li>\r\n        </ul>\r\n        <!-- Links -->\r\n    </links>\r\n    <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n<!--/.Navbar-->"],"sourceRoot":"webpack:///"}