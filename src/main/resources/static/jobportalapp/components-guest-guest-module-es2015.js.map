{"version":3,"sources":["./src/app/components/candidate/c-login/c-login.component.ts","./src/app/components/candidate/c-login/c-login.component.html","./src/app/components/candidate/c-register/c-register.component.ts","./src/app/components/candidate/c-register/c-register.component.html","./src/app/components/guest/all-joblist/all-joblist.component.ts","./src/app/components/guest/all-joblist/all-joblist.component.html","./src/app/components/guest/forgot-pass/forgot-pass.component.ts","./src/app/components/guest/forgot-pass/forgot-pass.component.html","./src/app/components/guest/guest-dashboard/guest-dashboard.component.ts","./src/app/components/guest/guest-dashboard/guest-dashboard.component.html","./src/app/components/guest/guest-routing.module.ts","./src/app/components/guest/guest.component.ts","./src/app/components/guest/guest.component.html","./src/app/components/guest/guest.module.ts","./src/app/components/guest/validate-acc/validate-acc.component.ts","./src/app/components/guest/validate-acc/validate-acc.component.html","./src/app/shared/components/header-for-guest/header-for-guest.component.ts","./src/app/shared/components/header-for-guest/header-for-guest.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AAMjE,mGAAmG;AACnG,gFAAgF;AACrB;AACE;AAG7D,OAAO;AAC+D;;;;;;;;;;;;IC+C9B,0EACK;IAAA,uDAEL;IAAA,4DAAM;;;IAFD,0DAEL;IAFK,+FAEL;;;IAgBA,sEAAmC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC1D,sEAAgC;IAAA,8FAAmC;IAAA,4DAAM;;;IAF7E,0EACI;IAAA,2HAAmC;IACnC,2HAAgC;IACpC,4DAAM;;;;IAFG,0DAA6B;IAA7B,sFAA6B;IAC7B,0DAA0B;IAA1B,mFAA0B;;;IAU/B,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACI;IAAA,mGACJ;IAAA,4DAAM;;;IALV,0EAEI;IAAA,2HAAsC;IACtC,2HACI;IAER,4DAAM;;;;IAJG,0DAAgC;IAAhC,sFAAgC;IAChC,0DAAiC;IAAjC,uFAAiC;;;IAQ9C,0EACI;IAAA,qEACJ;IAAA,4DAAM;;;IAcF,0EACI;IAAA,uDAEJ;IAAA,4DAAM;;;IAFF,0DAEJ;IAFI,8GAEJ;;;;;IA/FR,+EAEI;IAFuC,yZAAuC;IAE9E,0EACI;IAAA,yEACI;IAAA,yEAAQ;IAAA,kEAAO;IAAA,4DAAS;IAC5B,4DAAK;IACL,gEACJ;IAAA,4DAAM;IAEN,0EACO;IACH,0EAEI;IAAA,6EAGM;IAAA,wEAAM;IAAA,oEAAQ;IAAA,4DAAO;IAAA,4DAAS;IACxC,4DAAM;IAGN,2EACI;IAAA,8EAGM;IAAA,oEACN;IAAA,4DAAS;IACb,4DAAM;IAUN,2EACI;IAAA,sHACK;IAGT,4DAAM;IAGV,4DAAM;IACN,2EAEI;IAAA,4EACI;IAAA,gEACJ;IAAA,4DAAO;IACX,4DAAM;IACN,2EACI;IAAA,6EAAmB;IAAA,iEAAK;IAAA,4DAAQ;IAChC,iFAEA;IAFqD,2VAA6B;IAAlF,4DAEA;IAAA,sHACI;IAGR,4DAAM;IAEN,2EACI;IAAA,6EAAsB;IAAA,oEAAQ;IAAA,4DAAQ;IACtC,iFAEA;IADI,8VAAgC;IADpC,4DAEA;IAAA,sHAEI;IAKR,4DAAM;IACN,2EACI;IAAA,yEAA0D;IAAA,4EAAgB;IAAA,4DAAI;IAClF,4DAAM;IACN,sHACI;IAEJ,2EACI;IAAA,2EACI;IAAA,8EACI;IADuC,0TAAsB;IAC7D,qEACJ;IAAA,4DAAS;IACb,4DAAM;IAMV,4DAAM;IACN,2EACI;IAAA,sHACI;IAGR,4DAAM;IAEV,4DAAO;;;;;;IA7DkD,2DAAmB;IAAnB,qFAAmB;IAgBf,0DAA6B;IAA7B,4FAA6B;IAErC,0DAAoC;IAApC,gGAAoC;IAS7E,0DAAgC;IAAhC,+FAAgC;IAEhC,0DAAuC;IAAvC,gGAAuC;IAQxC,0DAAiC;IAAjC,6IAAiC;IAEI,0DAA4B;IAA5B,+FAA4B;IAgBvB,0DAAoC;IAApC,yGAAoC;;;IAOzF,0EACI;IACA,8EACJ;IAAA,4DAAM;;;IAgB9B,2EAA+B;IAAA,mEAAkC;IAAA,4EAAiB;IAAA,4DAAO;;;IAGzF,uEAAM;IAAA,mEAAwE;IAAA,uDAAkB;IAAA,mEAA+B;IAAA,4DAAO;;;IAAxD,0DAAkB;IAAlB,qFAAkB;;;ADzH7F,MAAM,eAAe;IAqB1B,qDAAqD;IAErD,kBAAkB;IAClB,YACU,UAA0B,EAC1B,WAAyB,EACzB,YAAiC;IACzC,sBAAsB;IACtB,6BAA6B;IAC7B,kDAAkD;IAC1C,MAAc;IACtB,oBAAoB;IACpB,OAAO;IACP,MAAsB,EAAU,YAAsB,EAC/C,YAA0B,EACzB,MAAc,EACd,KAAqB;QAZrB,eAAU,GAAV,UAAU,CAAgB;QAC1B,gBAAW,GAAX,WAAW,CAAc;QACzB,iBAAY,GAAZ,YAAY,CAAqB;QAIjC,WAAM,GAAN,MAAM,CAAQ;QAGU,iBAAY,GAAZ,YAAY,CAAU;QAC/C,iBAAY,GAAZ,YAAY,CAAc;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAnC/B,yBAAyB;QACzB,cAAS,GAAQ,EAAE,CAAC;QACpB,eAAU,GAAG,KAAK,CAAC;QACnB,OAAO;QACP,kBAAa,GAAG,KAAK,CAAC;QACtB,iBAAY,GAAG,KAAK,CAAC;QACrB,cAAS,GAAG,KAAK,CAAC;QAClB,OAAO;QACP,kBAAa,GAAG,KAAK,CAAC;QACtB,YAAO,GAAY,KAAK,CAAC;QACzB,iBAAY,GAAG,EAAE,CAAC;QAElB,UAAK,GAAa,EAAE,CAAC;QAKrB,iBAAY,GAAG,IAAI,iEAAY,EAAE,CAAC;QAClC,gBAAW,GAAG,IAAI,+DAAW,EAAE,CAAC;QAoB9B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAE,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IAEH,CAAC;IAED,QAAQ;QACN,yEAAyE;QACzE,2BAA2B;QAC3B,sBAAsB;QACtB,2DAA2D;QAC3D,wBAAwB;QACxB,4BAA4B;QAC5B,yEAAyE;QACzE,oFAAoF;QACpF,kEAAkE;QAClE,gBAAgB;QAChB,iDAAiD;QACjD,2BAA2B;QAC3B,gCAAgC;QAChC,IAAI;QACJ,MAAM;QACN,0CAA0C;QAC1C,oEAAoE;QACpE,gDAAgD;QAChD,eAAe;QACf,wCAAwC;QACxC,yCAAyC;QACzC,0CAA0C;QAC1C,IAAI;QAEJ,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;SAChD;QAED,KAAK;QAEL,oBAAoB;QACpB,sDAAsD;QACtD,4BAA4B;QAC5B,kCAAkC;QAClC,0CAA0C;QAC1C,IAAI;QAIJ,UAAU;QACV,8EAA8E;QAC9E,2BAA2B;QAC3B,sBAAsB;QACtB,MAAM;IAER,CAAC;IACD,UAAU;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACD,QAAQ;QAEN,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAC9C,IAAI,CAAC,EAAE;YAEL,wDAAwD;YACxD,uCAAuC;YAGvC,wDAAwD;YAExD,4CAA4C;YAC5C,wCAAwC;YAExC,oEAAoE;YACpE,iDAAiD;YACjD,8CAA8C;YAC9C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;YAC/C,OAAO;YACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,8EAA8E;YAC9E,4EAA4E;YAC5E,sEAAsE;YACtE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;YAC3D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACnD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YACtC,qBAAqB;YACrB,iDAAiD;YACjD,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACtC;iBACI,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC1B,uBAAuB;gBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBAC5C,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAC3B,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBACI,IAAI,IAAI,CAAC,SAAS,EAAE;gBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;QACH,CAAC,EACD,GAAG,CAAC,EAAE;YACH,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACvC,iDAAiD;YACjD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE5B,CAAC,CACF,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IACD,UAAU;QACR,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;;8EAtKU,eAAe;+FAAf,eAAe,4GAHf,CAAC,yEAAc,EAAE,mEAAQ,CAAC;QCnBvC,yEACI;QACA,yEACI;QACA,yEACI;QACA,yEACI;QACA,yEAEI;QAAA,wEAAuC;QAAA,oFAAyB;QAAA,4DAAK;QACrE,mEACA;QAAA,wEAAiB;QAAA,uGAA4C;QAAA,4DAAK;QAElE,wEAA6E;QAAA,sEAAU;QAAA,4DAAI;QAC/F,4DAAM;QAGN,0EACI;QACA,gFACI;QAAA,qFACI;QAAA,iHAEI;QAiGJ,8GACI;QAGR,4DAAgB;QACpB,4DAAW;QAEf,4DAAM;QAEV,4DAAM;QAEN,6EAA+D;QACnE,4DAAM;QAEV,4DAAM;QAEV,4DAAM;QAEN,0MACI;QAEJ,0MACI;;QAjImB,2DAAsB;QAAtB,6IAAsB;QAQX,0DAAmB;QAAnB,iFAAmB;QAmGQ,0DAAkB;QAAlB,gFAAkB;;6FDnGlE,eAAe;cAP3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;gBACvC,SAAS,EAAE,CAAC,yEAAc,EAAE,mEAAQ,CAAC;aAEtC;;;;;;;;;;;;;;AEtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGlD,mGAAmG;AACnG,gFAAgF;AACtB;;;;;;;;;;;;;;ICoClB,0EACK;IAAA,uDAEL;IAAA,4DAAM;;;IAFD,0DAEL;IAFK,+FAEL;;;IAkBA,sEAAkC;IAAA,2EAAgB;IAAA,4DAAM;;;IACxD,sEACI;IAAA,+FACJ;IAAA,4DAAM;;;IACN,sEACI;IAAA,+FACJ;IAAA,4DAAM;;;IAPV,0EACI;IAAA,8HAAkC;IAClC,8HACI;IAEJ,8HACI;IAER,4DAAM;;;;IAPG,0DAA4B;IAA5B,sFAA4B;IAC5B,0DAA6B;IAA7B,uFAA6B;IAG7B,0DAA6B;IAA7B,uFAA6B;;;IAUlC,sEAAmC;IAAA,4EAAiB;IAAA,4DAAM;;;IAC1D,sEACI;IAAA,gGACJ;IAAA,4DAAM;;;IAJV,0EACI;IAAA,8HAAmC;IACnC,8HACI;IAER,4DAAM;;;;IAJG,0DAA6B;IAA7B,sFAA6B;IAC7B,0DAA0B;IAA1B,mFAA0B;;;IAc/B,sEAAsC;IAAA,+EAAoB;IAAA,4DAAM;;;IAChE,sEACI;IAAA,mGACJ;IAAA,4DAAM;;;IAJV,0EACI;IAAA,8HAAsC;IACtC,8HACI;IAER,4DAAM;;;;IAJG,0DAAgC;IAAhC,sFAAgC;IAChC,0DAAiC;IAAjC,uFAAiC;;;IAM9C,0EACY;IAAA,qEACJ;IAAA,4DAAM;;;IAUd,0EACI;IAAA,0EAAc;IAAA,gEAAM;IAAA,uDACxB;IAAA,4DAAM;;;IADkB,0DACxB;IADwB,+FACxB;;;;IA3FJ,+EAEI;IAF4C,+ZAAuC;IAEnF,0EACI;IAAA,0EAEI;IAAA,6EAGM;IAAA,uEAAM;IAAA,mEAAQ;IAAA,4DAAO;IAAA,4DAAS;IACxC,4DAAM;IAGN,0EACI;IAAA,6EAGM;IAAA,mEACN;IAAA,4DAAS;IACb,4DAAM;IACN,2EACI;IAAA,yHACK;IAGT,4DAAM;IACV,4DAAM;IACN,2EAEA;IAAA,4EACI;IAAA,gEACJ;IAAA,4DAAO;IACX,4DAAM;IAIF,2EACI;IAAA,6EAAkB;IAAA,gEAAI;IAAA,4DAAQ;IAC9B,iFAGA;IAFI,mWAA+B;IADnC,4DAGA;IAAA,yHACI;IAQR,4DAAM;IACN,2EACI;IAAA,6EAAmB;IAAA,iEAAK;IAAA,4DAAQ;IAChC,iFAEA;IADI,oWAAgC;IADpC,4DAEA;IAAA,yHACI;IAKJ,6EAAoD;IAAA,qGACpC;IAAA,4DAAQ;IAC5B,4DAAM;IACN,2EACI;IAAA,6EAAsB;IAAA,oEAAQ;IAAA,4DAAQ;IACtC,6EAAgD;IAAA,mFAAuB;IAAA,4DAAQ;IAC/E,iFAGA;IAFI,uWAAmC;IADvC,4DAGA;IAAA,yHACI;IAKR,4DAAM;IAEN,yHACY;IAEZ,2EACI;IAAA,8EAIK;IADD,gUAAsB;IACrB,0EAAQ;IAAA,oEAAQ;IAAA,4DAAS;IAAA,4DAAS;IAE3C,4DAAM;IAEN,yHACI;IAER,4DAAO;;;;;;;IAxEkD,2DAAmB;IAAnB,qFAAmB;IAkBhE,0DAA+B;IAA/B,8FAA+B;IAET,0DAAmC;IAAnC,gGAAmC;IAazD,0DAAgC;IAAhC,+FAAgC;IACV,0DAAoC;IAApC,gGAAoC;IAa1D,0DAAmC;IAAnC,kGAAmC;IAEb,0DAAuC;IAAvC,gGAAuC;IAQzB,0DAA4B;IAA5B,+FAA4B;IAYvC,0DAAqC;IAArC,0GAAqC;;;IAI1E,0EACI;IAAA,4GAAgD;IAAA,gEAChD;IAAA,wEAA6D;IAAA,yEAAQ;IAAA,sEAAW;IAAA,4DAAS;IAAA,4DAAI;IACjG,4DAAM;;IADC,0DAAwC;IAAxC,8JAAwC;;;IAavE,2EAA+B;IAAA,mEAAkC;IAAA,wEAAa;IAAA,4DAAO;;;IAGrF,uEAAM;IAAA,mEAAwE;IAAA,uDAAkB;IAAA,mEAA+B;IAAA,4DAAO;;;IAAxD,0DAAkB;IAAlB,qFAAkB;;ADpH7F,MAAM,kBAAkB;IAe7B,kBAAkB;IAClB,YACU,WAAyB,EACzB,YAAiC;IACzC,sBAAsB;IACtB,6BAA6B;IACrB,kBAAsC,EACtC,MAAc;IACtB,QAAQ;IACR,MAAsB,EAAU,YAAsB,EAC/C,YAA0B,EACzB,KAAqB;QATrB,gBAAW,GAAX,WAAW,CAAc;QACzB,iBAAY,GAAZ,YAAY,CAAqB;QAGjC,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QAEU,iBAAY,GAAZ,YAAY,CAAU;QAC/C,iBAAY,GAAZ,YAAY,CAAc;QACzB,UAAK,GAAL,KAAK,CAAgB;QAzB/B,2BAA2B;QAC3B,iBAAY,GAAQ,EAAE,CAAC;QACvB,iBAAY,GAAG,KAAK,CAAC;QACrB,mBAAc,GAAG,KAAK,CAAC;QACvB,iBAAY,GAAG,EAAE,CAAC;QAClB,YAAO,GAAY,KAAK,CAAC;QAEzB,oBAAoB;QACpB,eAAU,GAAG,KAAK,CAAC;QACnB,kBAAa,GAAG,KAAK,CAAC;QACtB,UAAK,GAAa,EAAE,CAAC;QACrB,kBAAa,GAAG,KAAK,CAAC;QAEtB,gBAAW,GAAG,IAAI,+DAAW,EAAE,CAAC;QAc9B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,sCAAsC;QACtC,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;SAChD;IACH,CAAC;IACD,UAAU;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAC7D,IAAI,CAAC,EAAE;YAEL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;;oFA5DU,kBAAkB;kGAAlB,kBAAkB;QChB/B,kFAA6C;QAC7C,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEACM;QAEN,yEACI;QACA,2EACI;QAAA,qFACI;QAAA,qEACI;QAAA,2EACJ;QAAA,4DAAK;QACL,qEAAG;QAAA,sGAA0C;QAAA,4DAAI;QACrD,4DAAkB;QAElB,oFAEI;QACA,mHAEI;QA2FJ,gHACI;QAIR,4DAAgB;QACpB,4DAAW;QACf,4DAAM;QACN,6EAA+D;QACnE,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,6MACI;QAEJ,6MACI;;QA/G8B,2DAAqB;QAArB,mFAAqB;QA6FW,0DAAoB;QAApB,kFAAoB;;6FDlGzE,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;IC4D1C,0EAEI;IAAA,qEACJ;IAAA,4DAAM;;;IAEF,0EAGI;IAAA,yEACI;IAAA,0EAEI;IAAA,qEAGA;IAIJ,4DAAM;IACN,0EACI;IAAA,yEAEI;IAAA,0EACI;IAAA,yEACI;IAAA,wEAEI;IAAA,uDAAoB;IAAA,4DAAI;IAChC,4DAAM;IACN,0EACI;IAAA,6EACI;IAAA,oEACI;IAAC,wDACT;IAAA,4DAAQ;IACR,6EACI;IAAA,oEAAsC;IACtC,wDAGJ;;;IAAA,4DAAQ;IACZ,4DAAM;IACN,0EAEI;IAAA,6EAAkE;IAAA,yEACzD;IAAA,4DAAQ;IAEjB,2EACI;IAAA,wDAAwB;IAAA,4DAAM;IACtC,4DAAM;IACN,0EACI;IAAA,6EAA+D;IAAA,qEACtD;IAAA,4DAAQ;IACjB,2EACI;IAAA,wDAAmB;IAAA,4DAAM;IACjC,4DAAM;IACN,0EACI;IAAA,6EAA+D;IAAA,6EACrD;IAAA,4DAAQ;IAClB,2EACI;IAAA,wDAA2B;IAAA,4DAAM;IACzC,4DAAM;IAGV,4DAAM;IAEN,2EACI;IAAA,0EACI;IAAA,6EAC6B;IAAA,wDAAyC;;IAAA,4DAAQ;IAClF,4DAAM;IAMV,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IApEkC,0DAA6C;IAA7C,0LAA6C;IAezD,0DAAoB;IAApB,gGAAoB;IAKf,0DACT;IADS,6FACT;IAGI,0DAGJ;IAHI,sQAGJ;IAQI,0DAAwB;IAAxB,mGAAwB;IAMxB,0DAAmB;IAAnB,+FAAmB;IAMnB,0DAA2B;IAA3B,uGAA2B;IASF,0DAAyC;IAAzC,yKAAyC;;;;;IAc1F,yEACI;IAAA,wEACI;IADwB,2WAA2B;IACnD,uDACJ;IAAA,4DAAI;IACR,4DAAK;;;;IAHuD,0DAAgC;IAAhC,qKAAgC;IACpF,0DACJ;IADI,kFACJ;;;IAhFZ,sEACI;IAAA,yHAGI;IAwEJ,yEACI;IAAA,qHACI;IAIR,4DAAK;IACT,4DAAM;;;IAjFE,0DAAoC;IAApC,wFAAoC;IA2Ef,0DAAoC;IAApC,mFAAoC;;;IAUjE,2EAA+B;IAAA,mEAAkC;IAAA,sEAAW;IAAA,4DAAO;;;IAGnF,2EAA+B;IAAA,mEAAgD;IAAA,+EACjE;IAAA,4DAAO;;ADhJtB,MAAM,mBAAmB;IAM9B,YACU,iBAAoC,EACpC,MAAc,EACd,oBAA0C;QAF1C,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QACd,yBAAoB,GAApB,oBAAoB,CAAsB;QAN7C,WAAM,GAAW,CAAC,CAAC;IAQtB,CAAC;IAGL,OAAO,CAAC,CAAC,EAAE,KAAU;QACnB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IAExB,CAAC;IACD,iBAAiB;QACf,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;;YAC7B,OAAO,IAAI,CAAC;IACnB,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC1D,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;QAClC,CAAC,CACF,CAAC;IACJ,CAAC;IACD,aAAa;QACX,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC;aACvD,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE5C,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACT,CAAC;;sFArDU,mBAAmB;mGAAnB,mBAAmB;QCVhC,yEACI;QAAA,yEAGI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,yEAAuC;QAC3C,4DAAO;QACX,4DAAM;QACN,2EAGJ;QAFiE,wLAAqB;QADlF,4DAGJ;QAAA,4DAAM;QAEV,4DAAM;QACN,yEACI;QAAA,2EACI;QAAA,8EAEI;QAAA,4EAA0B;QAAA,oEAAQ;QAAA,4DAAO;QAC7C,4DAAS;QACT,2EACI;QACA,yEAAkC;QAAA,kEAAM;QAAA,4DAAI;QAEhD,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,2EACI;QAAA,8EAEI;QAAA,4EAA0B;QAAA,yEAAa;QAAA,4DAAO;QAElD,4DAAS;QACT,2EACI;QACA,yEAAkC;QAAA,kEAAM;QAAA,4DAAI;QAEhD,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,8EACmB;QADX,4IAAS,mBAAe,IAAC;QACd,0EAAQ;QAAA,4EAA0B;QAAA,kEAAM;QAAA,4DAAO;QAAA,4DAAS;QAAC,4DAAS;QACzF,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAGN,2EACI;QAAA,2EACI;QAAA,0EAA6B;QAAA,uEAAW;QAAA,4DAAK;QAC7C,qEACA;QACA,kHAEI;QAEJ,kHACI;QAmFR,4DAAM;QACN,6EAA+D;QAC/D,8MACI;QAEJ,8MACI;QAKR,4DAAM;;QAjJ2E,0DAAqB;QAArB,gFAAqB;QA8CzF,2DAA2B;QAA3B,yFAA2B;QAI3B,0DAAkB;QAAlB,gFAAkB;;6FDrDlB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAO3C,MAAM,mBAAmB;IAE9B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sFALU,mBAAmB;mGAAnB,mBAAmB;QCPhC,kFAA6C;QAC7C,uEACI;QAAA,yEAA2B;QAC/B,4DAAO;QACP,wEAAyB;;6FDGZ,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;IC2FtC,0EAEI;IAAA,qEACJ;IAAA,4DAAM;;;IAQE,0EAEI;IAAA,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,qEAGJ;IAAA,4DAAM;IACN,0EACI;IAAA,yEACI;IAAA,0EACI;IAAA,yEACI;IAAA,wEAEI;IAAA,wDAAoB;IAAA,4DAAI;IAChC,4DAAM;IACN,0EACI;IAAA,6EACI;IAAA,oEACI;IAAC,wDACT;IAAA,4DAAQ;IACR,6EACI;IAAA,oEAAsC;IACtC,wDAGJ;;;IAAA,4DAAQ;IACZ,4DAAM;IACN,0EAEI;IAAA,6EACsB;IAAA,yEACb;IAAA,4DAAQ;IAEjB,2EACI;IAAA,wDAAwB;IAAA,4DAAM;IACtC,4DAAM;IACN,0EACI;IAAA,6EAA+D;IAAA,qEACtD;IAAA,4DAAQ;IACjB,2EACI;IAAA,wDAAmB;IAAA,4DAAM;IACjC,4DAAM;IACN,0EACI;IAAA,6EACmB;IAAA,6EACT;IAAA,4DAAQ;IAClB,2EACI;IAAA,wDAA2B;IAAA,4DAAM;IACzC,4DAAM;IAGV,4DAAM;IAEN,2EACI;IAAA,6EAE6B;IAAA,wDAAyC;;IAAA,4DAAQ;IAKlF,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAhEsC,0DAA6C;IAA7C,yLAA6C;IAUzD,0DAAoB;IAApB,+FAAoB;IAKf,0DACT;IADS,4FACT;IAGI,0DAGJ;IAHI,oQAGJ;IASI,0DAAwB;IAAxB,kGAAwB;IAMxB,0DAAmB;IAAnB,8FAAmB;IAOnB,0DAA2B;IAA3B,sGAA2B;IASN,0DAAyC;IAAzC,wKAAyC;;;IAjEtG,sEACI;IAKA,yEACI;IAAA,6HAEI;IAoER,4DAAM;IACV,4DAAM;;;IAvEO,0DAAmC;IAAnC,uFAAmC;;;;IA6EpD,0EACI;IAAA,wEAAyE;IAAA,yEAAQ;IAAA,oEAAS;IAAA,4DAAS;IAAA,4DAAI;IAC3G,4DAAM;;IADC,0DAAqC;IAArC,6IAAqC;;;ADzK7C,MAAM,uBAAuB;IAMlC,YACU,iBAAoC,EACpC,MAAc,EACd,oBAA0C;QAF1C,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QACd,yBAAoB,GAApB,oBAAoB,CAAsB;QAN7C,WAAM,GAAW,CAAC,CAAC;IAOtB,CAAC;IACL,OAAO,CAAC,CAAC,EAAE,KAAU;QACnB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IACD,iBAAiB;QACf,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;;YAC7B,OAAO,IAAI,CAAC;IACnB,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAC1D,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;QAClC,CAAC,CACF,CAAC;IACJ,CAAC;IACD,sBAAsB;IACtB,yEAAyE;IACzE,gBAAgB;IAChB,2BAA2B;IAC3B,2CAA2C;IAC3C,mDAAmD;IACnD,SAAS;IACT,mBAAmB;IACnB,yCAAyC;IACzC,QAAQ;IACR,OAAO;IACP,IAAI;IACJ,aAAa;QACX,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC;aACvD,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE5C,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACT,CAAC;;8FA7DU,uBAAuB;uGAAvB,uBAAuB;QCTpC,0EACI;QACA,yEAEI;QACA,yEACI;QACA,yEACI;QACA,yEACI;QACA,yEACI;QAAA,wEAC0B;QAAA,yEAAQ;QAAA,+EAAoB;QAAA,4DAAS;QAAA,4DAAK;QACpE,gEACA;QAAA,iEACA;QAAA,wEACI;QAAA,0EAAkD;QAAA,0EAAQ;QAAA,wEAAY;QAAA,4DAAS;QACnF,4DAAI;QACJ,oEACA;QAAA,iEACJ;QAAA,4DAAM;QAEV,4DAAM;QAEN,0EAGI;QAAA,0EACI;QAAA,2EACI;QAAA,2EACI;QAAA,2EACI;QAAA,4EACI;QAAA,2EAAuC;QAC3C,4DAAO;QACX,4DAAM;QACN,6EAGJ;QAFiE,6LAAqB;QADlF,4DAGJ;QAAA,4DAAM;QAEV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,8EAEI;QAAA,4EAA0B;QAAA,oEAAQ;QAAA,4DAAO;QAC7C,4DAAS;QACT,2EACI;QACA,yEAAkC;QAAA,kEAAM;QAAA,4DAAI;QAEhD,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,8EAEI;QAAA,4EAA0B;QAAA,yEAAa;QAAA,4DAAO;QAElD,4DAAS;QACT,2EACI;QACA,yEAAkC;QAAA,kEAAM;QAAA,4DAAI;QAEhD,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,8EACmB;QADX,gJAAS,mBAAe,IAAC;QACd,0EAAQ;QAAA,4EAA0B;QAAA,kEAAM;QAAA,4DAAO;QAAA,4DAAS;QAAC,4DAAS;QACzF,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;QAEV,4DAAM;QAEV,4DAAM;QAIN,2EACI;QAAA,2EACI;QAAA,0EAAmC;QAAA,uEAAW;QAAA,4DAAK;QACnD,qEACA;QACA,sHAEI;QAEJ,sHACI;QA+ER,4DAAM;QAIN,sHACI;QAGR,4DAAM;QAIV,4DAAU;;QAzKiB,2DAA0B;QAA1B,6IAA0B;QAqBwC,2DAAqB;QAArB,gFAAqB;QAoDjG,2DAA2B;QAA3B,yFAA2B;QAI3B,0DAAkB;QAAlB,gFAAkB;QAoFtB,0DAA4B;QAA5B,0FAA4B;;6FDxK5B,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAE6B;AACZ;AACQ;AAC9B;AACuB;AACG;AACJ;;;AACvE,MAAM,MAAM,GAAW;IACrB;QACC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;QACzB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,kGAAuB;aACnC;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,oFAAe;aAC3B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,6FAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,sFAAmB;aAC/B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,yFAAoB;aAChC;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,sFAAmB;aAC/B;SACF;KACF;CACF,CAAC;AAQK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBALpB;YACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACS,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAN9B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;iBAC9B;gBACD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;AAQ7D,MAAM,cAAc;IAEzB;IAAgB,CAAC;IAEjB,QAAQ;IAGR,CAAC;;4EAPU,cAAc;8FAAd,cAAc;QCR3B,kFAA6C;QAE7C,2EAA+B;QAG/B,wEAAyB;;6FDGZ,cAAc;cAN1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;gBACrC,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACtC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACO;AACU;AACP;AACS;AAE0B;AACb;AACS;AAC2B;AACpC;AACG;AACF;;;AAsBnE,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAPb;YACN,4DAAY;YACb,kEAAY,CAAC,OAAO,EAAE;YACtB,wEAAkB;SAEnB;mIAEU,WAAW,mBAjBpB,kGAAuB;QACvB,oFAAe;QACf,6FAAkB;QAClB,+DAAc;QACd,sHAAuB;QACvB,sFAAmB;QACnB,0FAAoB;QACpB,uFAAmB,aAIlB,4DAAY,sEAEb,wEAAkB;6FAIT,WAAW;cAnBvB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,kGAAuB;oBACvB,oFAAe;oBACf,6FAAkB;oBAClB,+DAAc;oBACd,sHAAuB;oBACvB,sFAAmB;oBACnB,0FAAoB;oBACpB,uFAAmB;iBAEpB;gBACD,OAAO,EAAE;oBACN,4DAAY;oBACb,kEAAY,CAAC,OAAO,EAAE;oBACtB,wEAAkB;iBAEnB;aACF;;;;;;;;;;;;;;ACjCD;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAO3C,MAAM,oBAAoB;IAE/B;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;oGAApB,oBAAoB;QCPjC,yEACI;QAAA,yEAEI;QACH,yEACO;QAAA,0EACI;QAAA,wEAA4E;QAAA,iFAAqB;QAAA,4DAAK;QACtG,uEAAsC;QAAA,mGAAuC;QAAA,4DAAI;QAG7E,uEAAqC;QAAA,yEAAQ;QAAA,mEAAO;QAAA,4DAAS;QAAA,4DAAI;QAEzE,4DAAO;QACX,4DAAM;QACV,4DAAM;QAEV,4DAAM;;QANkB,0DAA+B;QAA/B,6IAA+B;;6FDH1C,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;AAO3C,MAAM,uBAAuB;IAElC;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8FALU,uBAAuB;uGAAvB,uBAAuB;QCNpC,gFACI;QACA,mFACI;QAEI,uEACI;QAEA,oEACR;QAAA,4DAAI;QACR,4DAAmB;QAEnB,wEACI;QACA,wEACI;QAAA,wEACI;QAAA,uEAAsF;QAAA,yEAAQ;QAAA,mEAAQ;QAAA,4DAAS;QAAA,2EAAsB;QAAA,qEAAS;QAAA,4DAAO;QAAA,4DAAI;QAC7J,4DAAK;QACL,yEACK;QAAA,wEAA+E;QAAA,0EAAQ;QAAA,mEAAO;QAAA,4DAAS;QAAA,4DAAI;QAEhH,4DAAK;QACL,yEACI;QAAA,wEAAmF;QAAA,0EAAQ;QAAA,oEAAQ;QAAA,4DAAS;QAAA,4DAAI;QACpH,4DAAK;QACL,sEACI;QAAA,6EAAkH;QAAA,0EAAQ;QAAA,wEAC1G;QAAA,4DAAS;QAAA,4DAAS;QACtC,4DAAK;QACT,4DAAK;QAET,4DAAQ;QAGZ,4DAAa;;QAlCoE,kFAAyB;QAKrE,0DAAyB;QAAzB,6IAAyB;QAW3C,0DAAqC;QAArC,6IAAqC;QAGpC,0DAA+B;QAA/B,6IAA+B;QAI/B,0DAAkC;QAAlC,6IAAkC;QAGiD,0DAA0B;QAA1B,8IAA0B;;6FDpBpH,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;aACjD","file":"components-guest-guest-module-es2015.js","sourcesContent":["import { Component, OnInit, NgZone, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { _AuthService } from '../../../shared/services/auth.service';\r\nimport { TokenStorageService } from '../../../shared/services/token-storage.service';\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';\r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { Socialusers } from '../../../_models/socialusers';\r\nimport { User_Account } from '../../../_models/user_account';\r\nimport { SocialloginService } from '../../../_services/sociallogin.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n//toast\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n\r\n@Component({\r\n  selector: 'app-c-login',\r\n  templateUrl: './c-login.component.html',\r\n  styleUrls: ['./c-login.component.scss'],\r\n  providers: [NgbModalConfig, NgbModal],\r\n  \r\n})\r\nexport class CLoginComponent implements OnInit {\r\n\r\n  // loginForm:  FormGroup;\r\n  loginForm: any = {};\r\n  isLoggedIn = false;\r\n  //theem\r\n  showCandidate = false;\r\n  showEmployer = false;\r\n  showAdmin = false;\r\n  //theem\r\n  isLoginFailed = false;\r\n  isShown: boolean = false;\r\n  errorMessage = '';\r\n  error: Params;\r\n  roles: string[] = [];\r\n  // error = this.getParameterByName(\"error\");\r\n  //showCandidate = false;\r\n  //social login start\r\n  response;\r\n  user_Account = new User_Account();\r\n  socialusers = new Socialusers();\r\n  //  token: string = this.getParameterByName(\"token\");\r\n\r\n  //social login end\r\n  constructor(\r\n    private routersnap: ActivatedRoute,\r\n    private authService: _AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    //  social login start\r\n    // public OAuth: AuthService,\r\n    // private SocialloginService: SocialloginService,\r\n    private router: Router,\r\n    //  social login end\r\n    //toast\r\n    config: NgbModalConfig, private modalService: NgbModal,\r\n    public toastService: ToastService,\r\n    private ngZone: NgZone,\r\n    private route: ActivatedRoute\r\n  \r\n  ) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params);\r\n      this.error= params;\r\n  });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //   let token: string = this.getParameterByName(\"token\", location.href);\r\n    //    console.log(\"hihih\");\r\n    // console.log(token);\r\n    // var redirectUrl: string = localStorage.getItem('token');\r\n    // console.log(\"hihih\");\r\n    // console.log(redirectUrl);\r\n    // let token: string = getParameterByName(\"access_token\", location.href);\r\n    // localStorage.setItem('dataSource', JSON.stringify({ token: token, name: name }));\r\n    //   const token = this.getParameterByName('token',location.href);\r\n    //   if(token) {\r\n    //     localStorage.setItem('dataSource', token);\r\n    //    console.log(\"hihih\");\r\n    //    console.log('dataSource');\r\n    // }\r\n    //lamf\r\n    // console.log(\"hihihihihihi access nef\");\r\n    // console.log(this.routersnap.snapshot.queryParamMap.get('token'));\r\n    // let token = this.getParameterByName(\"token\");\r\n    // if (token) {\r\n    //   this.tokenStorage.saveToken(token);\r\n    //   console.log(\"access_token\" + token);\r\n    //   this.router.navigate(['/candidate']);\r\n    // }\r\n\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n    \r\n    //lam\r\n\r\n    // if (this.token) {\r\n    //   localStorage.setItem('ACCESS_TOKEN', this.token);\r\n    //   this.isLoggedIn = true;\r\n    //   console.log(this.isLoggedIn);\r\n    //   this.router.navigate(['/candidate']);\r\n    // }\r\n\r\n\r\n\r\n    //   else{\r\n    //        let token: string = this.getParameterByName(\"token\", location.href);\r\n    //    console.log(\"hihih\");\r\n    // console.log(token);\r\n    //   }\r\n\r\n  }\r\n  toggleShow() {\r\n    this.isShown = true;\r\n    setTimeout(() => {\r\n      this.isShown = false;\r\n    }, 3000)\r\n  }\r\n  onSubmit() {\r\n\r\n    this.authService.login(this.loginForm).subscribe(\r\n      data => {\r\n\r\n        // let token: string = this.getParameterByName(\"token\");\r\n        //   console.log(\"access-toek \"+token);\r\n\r\n\r\n        // let token: string = this.getParameterByName(\"token\");\r\n\r\n        // console.log(\"access-toek \" + this.token);\r\n        // this.router.navigate(['/candidate']);\r\n\r\n        // localStorage.setItem('token', JSON.stringify(this.user_Account));\r\n        // console.warn(\"sdsdsd\" + this.loginForm.value);\r\n        // console.log(localStorage.getItem('token'));\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        console.log(\"hihihih\" + data.accessToken);\r\n        this.tokenStorage.saveUser(data);\r\n        console.log(\"nhin ne data\");\r\n        console.log(data);\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        //theem\r\n        console.log(this.roles);\r\n        // this.showCandidate = this.roles.some(i=>i.name.includes('ROLE_CANDIDATE'));\r\n        // this.showEmployer = this.roles.some(i=>i.name.includes('ROLE_EMPLOYER'));\r\n        // this.showAdmin = this.roles.some(i=>i.name.includes('ROLE_ADMIN'));\r\n        this.showCandidate = this.roles.includes('ROLE_CANDIDATE');\r\n        this.showEmployer = this.roles.includes('ROLE_EMPLOYER');\r\n        this.showAdmin = this.roles.includes('ROLE_ADMIN');\r\n        console.log(\"canddiate\" + this.showCandidate);\r\n        console.log(\"employer\" + this.showEmployer);\r\n        console.log(\"admin\" + this.showAdmin);\r\n        // this.reloadPage();\r\n        // console.warn(\"Bearer\" + this.loginForm.value);\r\n        if (this.showCandidate) {\r\n          this.router.navigate(['/candidate']);\r\n        }\r\n        else if (this.showEmployer) {\r\n          // // sua style o ddaay\r\n          this.router.navigate(['/employer']).then(() => {\r\n            window.location.reload();\r\n          });\r\n          this.router.navigate(['/employer']);\r\n        }\r\n        else if (this.showAdmin) {\r\n          this.router.navigate(['/admin']);\r\n        }\r\n      },\r\n      err => {\r\n         this.errorMessage = err.error.message;\r\n        // this.errorMessage = \"Error email or password\";\r\n        this.isLoginFailed = true;\r\n\r\n      }\r\n    );\r\n    console.warn(this.loginForm.value);\r\n  }\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n    //social login start\r\n  // public socialSignIn(socialProvider: string, dangerTpl, successTpl) {\r\n  //   let socialPlatformProvider;\r\n  //   if (socialProvider === 'facebook') {\r\n  //     socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n  //   } else if (socialProvider === 'google') {\r\n  //     socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n  //   }\r\n  //   this.OAuth.signIn(socialPlatformProvider).then(socialusers => {\r\n  //     console.log(socialProvider, socialusers);\r\n  //     console.log(socialusers);\r\n  //     if (socialProvider === 'facebook') {\r\n  //       this.SavesresponseFB(socialusers, dangerTpl, successTpl);\r\n  //     } else if (socialProvider === 'google') {\r\n  //       this.SavesresponseGG(socialusers, dangerTpl, successTpl);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // SavesresponseGG(socialusers: Socialusers, dangerTpl, successTpl) {\r\n  //   this.SocialloginService.loginGoogleCandidate(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     // console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n  //     console.log(localStorage.getItem('socialusers'));\r\n\r\n  //     //theem\r\n\r\n  //     //theem\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //     this.router.navigate(['/candidate']);\r\n\r\n  //   }, err => {\r\n  //     //this.errorMessage = err.message;\r\n  //     this.errorMessage = \"Are you employer? Look like you are loging in as employer user. Click here \";\r\n  //     this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  // SavesresponseFB(socialusers: Socialusers, dangerTpl, successTpl) {\r\n  //   this.SocialloginService.loginFacebookCandidate(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //     this.router.navigate(['/candidate']);\r\n\r\n  //   }, err => {\r\n  //     //this.errorMessage = err.message;\r\n  //     this.errorMessage = \"Are you employer? Look like you are loging in as employer user. Click here \";\r\n  //     this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n\r\n  //social login end\r\n\r\n\r\n\r\n}\r\n","<!-- Full Page Login -->\r\n<div class=\"login\">\r\n    <!-- Mask & flexbox options-->\r\n    <div class=\"mask rgba-blue-grey-strong d-flex justify-content-center align-items-center\">\r\n        <!-- Content -->\r\n        <div class=\"container mb-5\">\r\n            <!--Grid row-->\r\n            <div class=\"row pt-lg-5 mt-lg-5\">\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 mb-5 mt-md-0 mt-5 white-text text-center text-md-left wow fadeInLeft\"\r\n                    data-wow-delay=\"0.3s\">\r\n                    <h1 class=\"display-4 font-weight-bold\">Don't lose your dream job</h1>\r\n                    <hr class=\"hr-light\">\r\n                    <h6 class=\"mb-3\">get your dream job come true right now . . .</h6>\r\n                    <!-- <a mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect [routerLink]=\"['../']\">Learn more</a> -->\r\n                    <a [routerLink]=\"['../']\" mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect>Learn more</a>\r\n                </div>\r\n                <!--Grid column-->\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 col-xl-5 mb-4\">\r\n                    <!--Form-->\r\n                    <mdb-card class=\"wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                        <mdb-card-body class=\"z-depth-2\">\r\n                            <form *ngIf=\"!isLoggedIn\" name=\"loginForm\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n                                #f=\"ngForm\" novalidate>\r\n                                <div class=\"text-center\">\r\n                                    <h3 class=\"blue-text\">\r\n                                        <strong>Sign in</strong>\r\n                                    </h3>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <div class=\"row d-flex justify-content-center\">\r\n                                       <!--Facebook-->\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                     \r\n                                        <button type=\"button\" mdbBtn size=\"lg\" color=\"fb\" class=\"btn btn-indigo\"\r\n                                            mdbWavesEffect\r\n                                            onClick=\"window.open('//localhost:8080/oauth2/authorize/facebook?redirect_uri=http://localhost:4200','_self')\"\r\n                                            > <span>Facebook</span></button>\r\n                                    </div>\r\n                                    \r\n\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                            onClick=\"window.open('//localhost:8080/oauth2/authorize/google?redirect_uri=http://localhost:4200','_self')\"\r\n                                            > Google\r\n                                        </button>\r\n                                    </div>\r\n                                    <!-- <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                           \r\n                                            > Google\r\n                                        </button>\r\n                                        <a href=\"http://localhost:8080/oauth2/authorize/google?redirect_uri=http://localhost:4200/oauth2/redirect\">Google</a>\r\n                                    </div> -->\r\n                                 \r\n                                    <div class=\"form-group mt-3 ml-3 mr-3\">\r\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"error.error\">\r\n                                             {{ error.error }}\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                             \r\n                             \r\n                                </div>\r\n                                <div\r\n                                    style=\"width: 100%; height: 20px; border-bottom: 1px ridge ; text-align: center; margin-bottom: 20px;\">\r\n                                    <span style=\"font-size: 14px; background-color: #ffffff; padding: 0 10px;\">\r\n                                        or\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"loginForm.email\"\r\n                                        required email #email=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && email.invalid\">\r\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"email.errors.email\">Email must be a valid email address</div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                                        [(ngModel)]=\"loginForm.password\" required minlength=\"8\" #password=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\"\r\n                                        *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            Password must be at least 8 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    <a [routerLink]=\"['../forgot-pass']\" class=\"text-primary\">Forgot password?</a>\r\n                                </div>\r\n                                <div  class=\"d-flex justify-content-center\" *ngIf=\" isShown && f.valid \" >\r\n                                    <img class=\"loader\" src=\"../assets/images/loader3.svg\">\r\n                                </div>\r\n                                <div class=\"text-center mt-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button class=\"btn btn-primary btn-block\"  (click)=\"toggleShow()\">\r\n                                            Sign in\r\n                                        </button>\r\n                                    </div>\r\n                                    <!-- Register -->\r\n                                    <!-- <p>Don't have an accout yet? -->\r\n                                    <!-- <a [routerLink]=\"['../register']\"><strong>Register now!</strong></a> -->\r\n                                    <!-- <a><strong>Register now!</strong></a>\r\n                                    </p> -->\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\r\n                                        Login failed: {{ errorMessage }}\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                            <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n                                <!-- Logged in as {{ roles }}. -->\r\n                                Login successful!\r\n                            </div>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--/.Form-->\r\n                </div>\r\n                <!--Grid column-->\r\n            </div>\r\n            <!--Grid row-->\r\n            <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n        </div>\r\n        <!-- Content -->\r\n    </div>\r\n    <!-- Mask & flexbox options-->\r\n</div>\r\n<!-- Full Page Login -->\r\n<ng-template #successTpl>\r\n    <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Login Successful!</span>\r\n</ng-template>\r\n<ng-template #dangerTpl >\r\n    <span><i class=\"fa fa-exclamation-triangle fa-lg mr-3\" aria-hidden=\"true\"></i>{{ errorMessage }}<i class=\"fas fa-arrow-up\"></i></span>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { _AuthService } from '../../../shared/services/auth.service';\r\nimport { TokenStorageService } from '../../../shared/services/token-storage.service';\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';\r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { Socialusers } from '../../../_models/socialusers'\r\nimport { SocialloginService } from '../../../_services/sociallogin.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n//toast\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n@Component({\r\n  selector: 'app-c-register',\r\n  templateUrl: './c-register.component.html',\r\n  styleUrls: ['./c-register.component.scss']\r\n})\r\nexport class CRegisterComponent implements OnInit {\r\n  // registerForm: FormGroup;\r\n  registerForm: any = {};\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  isShown: boolean = false;\r\n  error: Params;\r\n  //social login start\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  roles: string[] = [];\r\n  showCandidate = false;\r\n  response;\r\n  socialusers = new Socialusers();\r\n  //social login end\r\n  constructor(\r\n    private authService: _AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    //  social login start\r\n    // public OAuth: AuthService,\r\n    private SocialloginService: SocialloginService,\r\n    private router: Router,\r\n    //toast \r\n    config: NgbModalConfig, private modalService: NgbModal,\r\n    public toastService: ToastService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params);\r\n      this.error = params;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.registerForm.role=\"candidate\";\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n  toggleShow() {\r\n    this.isShown = true;\r\n    setTimeout(() => {\r\n      this.isShown = false;\r\n    }, 3000)\r\n  }\r\n  onSubmit() {\r\n    this.authService.registerCandidate(this.registerForm).subscribe(\r\n      data => {\r\n\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n  //social login start\r\n  // public socialSignIn(socialProvider: string, dangerTpl, successTpl) {\r\n  //   let socialPlatformProvider;\r\n  //   if (socialProvider === 'facebook') {\r\n  //     socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n  //   } else if (socialProvider === 'google') {\r\n  //     socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n  //   }\r\n  //   this.OAuth.signIn(socialPlatformProvider).then(socialusers => {\r\n  //     console.log(socialProvider, socialusers);\r\n  //     console.log(socialusers);\r\n  //     if (socialProvider === 'facebook') {\r\n  //       this.SavesresponseFB(socialusers, dangerTpl, successTpl);\r\n  //     } else if (socialProvider === 'google') {\r\n  //       this.SavesresponseGG(socialusers, dangerTpl, successTpl);\r\n  //     }\r\n  //   });\r\n  // }\r\n  // SavesresponseGG(socialusers: Socialusers, dangerTpl, successTpl) {\r\n  //   this.SocialloginService.loginGoogleCandidate(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //     this.router.navigate(['/candidate']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //     this.errorMessage = \"Are you employer? Look like you are loging in as employer user. Click here \";\r\n  //     this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  // SavesresponseFB(socialusers: Socialusers, dangerTpl, successTpl) {\r\n  //   this.SocialloginService.loginFacebookCandidate(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //     this.router.navigate(['/candidate']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //     this.errorMessage = \"Are you employer? Look like you are loging in as employer user. Click here \";\r\n  //     this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  //social login end\r\n\r\n}\r\n","<app-header-for-guest></app-header-for-guest>\r\n<div class=\"login  mt-5 \">\r\n    <div class=\"mask rgba-black-light pb-5\">\r\n        <div class=\"container\" >\r\n            <div class=\"row \">\r\n                <div class=\"col-lg-3 col-md-1 col-sm-1\">\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-10 col-sm-10\">\r\n                    <!-- Material form login -->\r\n                    <mdb-card>\r\n                        <mdb-card-header class=\" primary-color white-text text-center py-4\">\r\n                            <h4>\r\n                                Register now!\r\n                            </h4>\r\n                            <p>Don't lose chance to find interesting jobs</p>\r\n                        </mdb-card-header>\r\n                        <!--Card content-->\r\n                        <mdb-card-body class=\"px-lg-5 pt-0\">\r\n\r\n                            <!-- Form -->\r\n                            <form *ngIf=\"!isSuccessful\" name=\"registerForm\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n                                #f=\"ngForm\" novalidate>\r\n                                <div class=\"row d-flex justify-content-center\">\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                     \r\n                                        <button type=\"button\" mdbBtn size=\"lg\" color=\"fb\" class=\"btn btn-indigo\"\r\n                                            mdbWavesEffect\r\n                                            onClick=\"window.open('//localhost:8080/oauth2/authorize/facebook?redirect_uri=http://localhost:4200','_self')\"\r\n                                            > <span>Facebook</span></button>\r\n                                    </div>\r\n                                    \r\n\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                            onClick=\"window.open('//localhost:8080/oauth2/authorize/google?redirect_uri=http://localhost:4200','_self')\"\r\n                                            > Google\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"form-group mt-3 ml-3 mr-3\">\r\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"error.error\">\r\n                                             {{ error.error }}\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                style=\"width: 100%; height: 20px; border-bottom: 1px ridge ; text-align: center; margin-bottom: 20px;\">\r\n                                <span style=\"font-size: 14px; background-color: #ffffff; padding: 0 10px;\">\r\n                                    or \r\n                                </span>\r\n                            </div>\r\n                            <!-- <div class=\"form-group\">\r\n                                Signup failed!<br />{{ errorMessage }}\r\n                            </div> -->\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\">Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"name\"\r\n                                        [(ngModel)]=\"registerForm.name\" required minlength=\"3\" maxlength=\"30\"\r\n                                        #name=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\r\n                                        <div *ngIf=\"name.errors.required\">Name is required</div>\r\n                                        <div *ngIf=\"name.errors.minlength\">\r\n                                            Name must be at least 3 characters\r\n                                        </div>\r\n                                        <div *ngIf=\"name.errors.maxlength\">\r\n                                            Name must be at most 20 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"email\" class=\"form-control\" name=\"email\"\r\n                                        [(ngModel)]=\"registerForm.email\" required email #email=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\r\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"email.errors.email\">\r\n                                            Email must be a valid email address\r\n                                        </div>\r\n                                    </div>\r\n                                    <small id=\"emailHelp2\" class=\"form-text text-muted\">We'll never share your email\r\n                                        with anyone.</small>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <small id=\"optional\" class=\"ml-2  text-success\">(at least 6 characters)</small>\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                                        [(ngModel)]=\"registerForm.password\" required minlength=\"6\"\r\n                                        #password=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            Password must be at least 6 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- Sign in button -->\r\n                                <div  class=\"d-flex justify-content-center\" *ngIf=\" isShown && f.valid \" >\r\n                                            <img class=\"loader\" src=\"../assets/images/loader3.svg\">\r\n                                        </div>\r\n                                <div class=\"form-group\">\r\n                                    <button mdbBtn color=\"primary\" outline=\"true\" rounded=\"true\" block=\"true\"\r\n                                        class=\"my-4 waves-effect z-depth-0\"\r\n                                        mdbWavesEffect \r\n                                        (click)=\"toggleShow()\"\r\n                                        ><strong>Register</strong></button>\r\n                                      \r\n                                </div>\r\n                               \r\n                                <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n                                    Signup failed!<br />{{ errorMessage }}\r\n                                </div>\r\n                            </form>\r\n                            <div class=\"alert alert-success mt-3\" *ngIf=\"isSuccessful\">\r\n                                Please check your mail to validate your account.<br/>\r\n                                <a [href]=\"'https://mail.google.com/mail/'\" target=\"_blank\" ><strong>Go to gmail</strong></a>\r\n                            </div>\r\n                            <!-- Form -->\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n                <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n            </div>\r\n           \r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #successTpl>\r\n    <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span>\r\n</ng-template>\r\n<ng-template #dangerTpl >\r\n    <span><i class=\"fa fa-exclamation-triangle fa-lg mr-3\" aria-hidden=\"true\"></i>{{ errorMessage }}<i class=\"fas fa-arrow-up\"></i></span>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from \"rxjs\";\r\nimport { Router } from '@angular/router';\r\nimport { AllJoblistService } from 'src/app/_services/candidate/all-joblist.service';\r\nimport { JobPostSummary } from 'src/app/_models/jobPostSummary';\r\nimport {SearchJobtypeService} from 'src/app/_services/employer/search-jobtype.service';\r\n@Component({\r\n  selector: 'app-all-joblist',\r\n  templateUrl: './all-joblist.component.html',\r\n  styleUrls: ['./all-joblist.component.scss']\r\n})\r\nexport class AllJoblistComponent implements OnInit {\r\n\r\n  allJobPost: Observable<JobPostSummary[]>;\r\n  public pageNo: number = 0;\r\n  public pages: Array<number>;\r\n  jobtype: '';\r\n  constructor(\r\n    private allJoblistService: AllJoblistService,\r\n    private router: Router,\r\n    private searchJobtypeService: SearchJobtypeService\r\n\r\n  ) { }\r\n\r\n\r\n  setPage(i, event: any) {\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.gettAllJobList();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gettAllJobList();\r\n    \r\n  }\r\n  isAllJobPostEmpty(): boolean {\r\n    let keys = Object.keys(this.allJobPost);\r\n    if (keys.length) { return false; }\r\n    else return true;\r\n  }\r\n  gettAllJobList() {\r\n    this.allJoblistService.gettAllJobList(this.pageNo).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.allJobPost = data['content'];\r\n        this.pages = new Array(data['totalPages'])\r\n      },\r\n      (error) => {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n  searchJobType() {\r\n    this.searchJobtypeService.searchJobByJobType(this.jobtype)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.allJobPost = data['content'];\r\n          this.pages = new Array(data['totalPages'])\r\n        \r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n}\r\n","<!-- Search jobtype start -->\r\n<div class=\"container-fluid\">\r\n    <div class=\"heavy-rain-gradient\r\n    rounded-lg pl-3 pr-3 rounded-lg\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-4 col-sm-12 col-md-12\">\r\n                <div class=\"input-group mt-4\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                            <mdb-icon fas icon=\"search\"></mdb-icon>\r\n                        </span>\r\n                    </div>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Find your job type expectation\"\r\n                        aria-label=\"expectation\" aria-describedby=\"basic-addon1\" [(ngModel)]=\"jobtype\"\r\n                        name=\"jobtype\">\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n                <div class=\"dropdown\" mdbDropdown>\r\n                    <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\"\r\n                        type=\"button\" mdbWavesEffect block=\"true\">\r\n                        <span class=\"text-button\">All Jobs</span>\r\n                    </button>\r\n                    <div class=\"dropdown-menu dropdown-primary\">\r\n                        <!-- job -->\r\n                        <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                        <!-- job    -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n                <div class=\"dropdown\" mdbDropdown>\r\n                    <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\"\r\n                        type=\"button\" mdbWavesEffect block=\"true\">\r\n                        <span class=\"text-button\">All Locations</span>\r\n\r\n                    </button>\r\n                    <div class=\"dropdown-menu dropdown-primary\">\r\n                        <!-- location -->\r\n                        <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                        <!-- location    -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-2 col-sm-12 col-md-12\">\r\n                <button (click)=\"searchJobType()\" mdbBtn color=\"success\" block=\"true\" class=\"my-4\"\r\n                    type=\"submit\"> <strong><span class=\"text-button\">Search</span></strong> </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Search jobtype end -->\r\n<!-- List jobs -->\r\n<div class=\"card \">\r\n    <div class=\"card-body container\">\r\n        <h5 class=\"card-title ml-5 \">Lasted Jobs</h5>\r\n        <hr class=\" hr-grey my-4 wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n        <!-- list job -->\r\n        <div *ngIf=\"isAllJobPostEmpty()\" class=\"text-center\">\r\n\r\n            <img src=\"./assets/images/rsz_nocontent.png\">\r\n        </div>\r\n        <div *ngIf=\"allJobPost\">\r\n            <div class=\"pt-3 mb-3 ml-5 mr-5 border rounded border-weight-light bg-light\"\r\n                *ngFor=\"let jobpost of allJobPost; \">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-3 col-md-12 col-sm-12 mt-3\">\r\n\r\n                        <img class=\"card-img-top  \" src=\"data:image/png;base64,{{jobpost.image}}\"\r\n                            alt=\"Company image cap\">\r\n\r\n                        <!-- <a class=\"d-flex justify-content-center\" mdbTooltip=\"delete saved job\" placement=\"top\"\r\n                            (click)=\"deleteSaveJobPost(savedjob.id,dangerTpl,successTpl)\">\r\n                            <i class=\"fas fa-heart fa-2x mt-3\" style=\"color: crimson;\"></i>\r\n                        </a> -->\r\n                    </div>\r\n                    <div class=\"col-lg-9 col-md-12 col-sm-12 mt-3\">\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-8\">\r\n                                <div class=\"row\">\r\n                                    <a href=\"https://www.w3schools.com\" class=\"font-weight-bold\"\r\n                                        style=\"font-size:20px;\">\r\n                                        {{jobpost.jobtitle}}</a>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <label class=\"text-secondary\" style=\"font-size: 14px ; \">\r\n                                        <i class=\"fas fa-map-marker-alt mr-1\">\r\n                                        </i> {{jobpost.city}}\r\n                                    </label>\r\n                                    <label class=\"ml-3 text-secondary\" style=\"font-size: 14px;\">\r\n                                        <i class=\"fas fa-money-bill-wave\"></i>\r\n                                        {{jobpost.minSalary | currency}} -\r\n                                        {{jobpost.maxSalary | currency}}\r\n\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"row \">\r\n\r\n                                    <label class=\"text-muted font-weight-bold mr-3\" for=\"expireddate\">Company\r\n                                        Name:</label>\r\n\r\n                                    <div class=\" text-body font-weight-normal \">\r\n                                        {{jobpost.companyname }}</div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <label class=\"text-muted font-weight-bold mr-3\" for=\"industry\">Job\r\n                                        Type:</label>\r\n                                    <div class=\" text-body font-weight-normal \">\r\n                                        {{jobpost.jobtype}}</div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <label class=\"text-muted font-weight-bold mr-3\" for=\"industry\">Experience\r\n                                        Years:</label>\r\n                                    <div class=\" text-body font-weight-normal \">\r\n                                        {{jobpost.experienceyears}}</div>\r\n                                </div>\r\n                                <!-- <p class=\"card-text text-muted\" style=\"font-size: 13px;\">\r\n                                {{savedjob.experienceyears}}</p> -->\r\n                            </div>\r\n\r\n                            <div class=\"col-4\">\r\n                                <div class=\"row\">\r\n                                    <label class=\"bg-secondary text-light pl-1 pr-1 \" mdbTooltip=\"Expiration Date\"\r\n                                        style=\"font-size: 12px;\">{{jobpost.expirationDate |date:'medium'}}</label>\r\n                                </div>\r\n                                <!-- <a   class=\"mt-5 d-flex justify-content-center\" mdbTooltip=\"Save this job\"\r\n                                    placement=\"top\" (click)=\"saveJobPost(jobpost.id,dangerTpl,successTpl)\">\r\n                                    <i class=\"far fa-heart fa-2x mt-3\" style=\"color: crimson;\"></i>\r\n                                </a> -->\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ul class=\"nav nav-pills d-flex justify-content-center mt-3 mb-5\">\r\n                <li class=\"nav-item\" *ngFor=\"let p of pages; let i=index\">\r\n                    <a class=\"nav-link\" href=\"\" (click)=\"setPage(i,$event)\" [ngClass]=\"{'active':i==pageNo}\">\r\n                        {{i}}\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n    <ng-template #successTpl>\r\n        <span style=\"font-size: 18px;\"><i class=\"fas fa-check mr-3 \"></i>Successful!</span>\r\n    </ng-template>\r\n    <ng-template #dangerTpl>\r\n        <span style=\"font-size: 18px;\"><i class=\"fas fa-exclamation-triangle mr-3\"></i>There got\r\n            some error</span>\r\n    </ng-template>\r\n\r\n    <!-- list job -->\r\n</div>\r\n\r\n\r\n\r\n<!-- List Jobs -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forgot-pass',\r\n  templateUrl: './forgot-pass.component.html',\r\n  styleUrls: ['./forgot-pass.component.scss']\r\n})\r\nexport class ForgotPassComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header-for-guest></app-header-for-guest>\r\n<main>\r\n    <forgot-pass></forgot-pass>\r\n</main>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from \"rxjs\";\r\nimport { Router } from '@angular/router';\r\nimport { AllJoblistService } from 'src/app/_services/candidate/all-joblist.service';\r\nimport {SearchJobtypeService} from 'src/app/_services/employer/search-jobtype.service';\r\nimport { JobPostSummary } from 'src/app/_models/jobPostSummary';\r\n@Component({\r\n  selector: 'app-guest-dashboard',\r\n  templateUrl: './guest-dashboard.component.html',\r\n  styleUrls: ['./guest-dashboard.component.scss']\r\n})\r\nexport class GuestDashboardComponent implements OnInit {\r\n  allJobPost: Observable<JobPostSummary[]>;\r\n\r\n  public pageNo: number = 0;\r\n  public pages: Array<number>;\r\n  jobtype: '';\r\n  constructor(\r\n    private allJoblistService: AllJoblistService,\r\n    private router: Router,\r\n    private searchJobtypeService: SearchJobtypeService\r\n  ) { }\r\n  setPage(i, event: any) {\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.gettAllJobList();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gettAllJobList();\r\n  }\r\n  isAllJobPostEmpty(): boolean {\r\n    let keys = Object.keys(this.allJobPost);\r\n    if (keys.length) { return false; }\r\n    else return true;\r\n  }\r\n  gettAllJobList() {\r\n    this.allJoblistService.gettAllJobList(this.pageNo).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.allJobPost = data['content'];\r\n        this.pages = new Array(data['totalPages'])\r\n      },\r\n      (error) => {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n  // searchByJobType() {\r\n  //   this.searchJobtypeService.searchJobByJobType(this.pageNo).subscribe(\r\n  //     data => {\r\n  //       console.log(data);\r\n  //       this.allJobPost = data['content'];\r\n  //       this.pages = new Array(data['totalPages'])\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error.error.message)\r\n  //     }\r\n  //   );\r\n  // }\r\n  searchJobType() {\r\n    this.searchJobtypeService.searchJobByJobType(this.jobtype)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.allJobPost = data['content'];\r\n          this.pages = new Array(data['totalPages'])\r\n        \r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n","<!-- <app-header-for-guest></app-header-for-guest> -->\r\n<!-- Main navigation -->\r\n<section>\r\n    <!-- Full Page Intro -->\r\n    <div class=\"view jarallax\"\r\n        style=\"background-image: url('./assets/images/candidate/login.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;\">\r\n        <!-- Mask & flexbox options-->\r\n        <div class=\"mask rgba-black-light d-flex justify-content-center align-items-center\">\r\n            <!-- Content -->\r\n            <div class=\"container\">\r\n                <!--Grid row-->\r\n                <div class=\"row\">\r\n                    <!--Grid column-->\r\n                    <div class=\"col-md-12 mb-4 white-text text-center\">\r\n                        <h1 class=\"h1-reponsive white-text text-uppercase font-weight-bold mb-0 pt-md-5 pt-5 wow fadeInDown\"\r\n                            data-wow-delay=\"0.3s\"><strong>Don't miss your jobs</strong></h1>\r\n                        <br />\r\n                        <br />\r\n                        <a [routerLink]=\"['./login']\" mdbBtn color=\"primary\" rounded=\"true\" mdbWavesEffect>\r\n                            <mdb-icon fas icon=\"user\" class=\"left\"></mdb-icon><strong>Sign in now!</strong>\r\n                        </a>\r\n                        <hr class=\"hr-light my-4 wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n                        <br />\r\n                    </div>\r\n                    <!--Grid column-->\r\n                </div>\r\n                <!-- <app-search-job></app-search-job> -->\r\n                <div class=\"heavy-rain-gradient\r\n                rounded-lg pl-3 pr-3 rounded-lg\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-4 col-sm-12 col-md-12\">\r\n                            <div class=\"input-group mt-4\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                        <mdb-icon fas icon=\"search\"></mdb-icon>\r\n                                    </span>\r\n                                </div>\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Find your job type expectation\"\r\n                                    aria-label=\"expectation\" aria-describedby=\"basic-addon1\" [(ngModel)]=\"jobtype\"\r\n                                    name=\"jobtype\">\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n                            <div class=\"dropdown\" mdbDropdown>\r\n                                <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\"\r\n                                    type=\"button\" mdbWavesEffect block=\"true\">\r\n                                    <span class=\"text-button\">All Jobs</span>\r\n                                </button>\r\n                                <div class=\"dropdown-menu dropdown-primary\">\r\n                                    <!-- job -->\r\n                                    <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                                    <!-- job    -->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n                            <div class=\"dropdown\" mdbDropdown>\r\n                                <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\"\r\n                                    type=\"button\" mdbWavesEffect block=\"true\">\r\n                                    <span class=\"text-button\">All Locations</span>\r\n\r\n                                </button>\r\n                                <div class=\"dropdown-menu dropdown-primary\">\r\n                                    <!-- location -->\r\n                                    <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                                    <!-- location    -->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-2 col-sm-12 col-md-12\">\r\n                            <button (click)=\"searchJobType()\" mdbBtn color=\"success\" block=\"true\" class=\"my-4\"\r\n                                type=\"submit\"> <strong><span class=\"text-button\">Search</span></strong> </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!--Grid row-->\r\n            </div>\r\n            <!-- Content -->\r\n        </div>\r\n        <!-- Mask & flexbox options-->\r\n    </div>\r\n    <!-- Full Page Intro -->\r\n\r\n    <!-- List jobs -->\r\n    <div class=\"card \">\r\n        <div class=\"card-body container\">\r\n            <h5 class=\"card-title text-center\">Lasted Jobs</h5>\r\n            <hr class=\"hr-grey my-4 wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n            <!-- list job -->\r\n            <div *ngIf=\"isAllJobPostEmpty()\" class=\"text-center\">\r\n\r\n                <img src=\"./assets/images/rsz_nocontent.png\">\r\n            </div>\r\n            <div *ngIf=\"allJobPost\">\r\n                <!-- <div class=\"row\">\r\n        <div *ngFor=\"let jobpost of allJobPost;\" style=\"border: 1px solid black\" class=\"col-lg-6 col-md-12\">\r\n            {{jobpost.jobtitle}}\r\n        </div>\r\n    </div> -->\r\n                <div class=\"row\">\r\n                    <div *ngFor=\"let jobpost of allJobPost;\"\r\n                        class=\"col-lg-6 col-md-12 col-sm-12 d-flex justify-content-center\">\r\n                        <div class=\" pt-3 mb-3 pr-3  border rounded border-weight-light bg-light\">\r\n                            <div class=\"row pl-1\">\r\n                                <div class=\"col-lg-3 col-md-12 col-sm-12 mt-3\">\r\n                                    <img class=\"card-img-top  \" src=\"data:image/png;base64,{{jobpost.image}}\"\r\n                                        alt=\"Company image cap\">\r\n\r\n                                </div>\r\n                                <div class=\"col-lg-9 col-md-12 col-sm-12 mt-3\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-8\">\r\n                                            <div class=\"row\">\r\n                                                <a href=\"https://www.w3schools.com\" class=\"font-weight-bold\"\r\n                                                    style=\"font-size:16px;\">\r\n                                                    {{jobpost.jobtitle}}</a>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <label class=\"text-secondary\" style=\"font-size: 14px ; \">\r\n                                                    <i class=\"fas fa-map-marker-alt mr-1\">\r\n                                                    </i> {{jobpost.city}}\r\n                                                </label>\r\n                                                <label class=\"ml-3 text-secondary\" style=\"font-size: 14px;\">\r\n                                                    <i class=\"fas fa-money-bill-wave\"></i>\r\n                                                    {{jobpost.minSalary | currency}} -\r\n                                                    {{jobpost.maxSalary | currency}}\r\n\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"row \">\r\n\r\n                                                <label class=\"text-muted font-weight-bold mr-3\"\r\n                                                    for=\"expireddate\">Company\r\n                                                    Name:</label>\r\n\r\n                                                <div class=\" text-body font-weight-normal \">\r\n                                                    {{jobpost.companyname }}</div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <label class=\"text-muted font-weight-bold mr-3\" for=\"industry\">Job\r\n                                                    Type:</label>\r\n                                                <div class=\" text-body font-weight-normal \">\r\n                                                    {{jobpost.jobtype}}</div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <label class=\"text-muted font-weight-bold mr-3\"\r\n                                                    for=\"industry\">Experience\r\n                                                    Years:</label>\r\n                                                <div class=\" text-body font-weight-normal \">\r\n                                                    {{jobpost.experienceyears}}</div>\r\n                                            </div>\r\n                                            <!-- <p class=\"card-text text-muted\" style=\"font-size: 13px;\">\r\n                                    {{savedjob.experienceyears}}</p> -->\r\n                                        </div>\r\n\r\n                                        <div class=\"col-4\">\r\n                                            <label class=\"bg-secondary text-light pl-1 pr-1 \"\r\n                                                mdbTooltip=\"Expiration Date\"\r\n                                                style=\"font-size: 12px;\">{{jobpost.expirationDate |date:'medium'}}</label>\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- list job -->\r\n        </div>\r\n\r\n        <!-- list job -->\r\n        <!-- button show more -->\r\n        <div *ngIf=\"!isAllJobPostEmpty()\" class=\"text-center mb-3\">\r\n            <a [routerLink]=\"['/guest/alljoblists']\" class=\"btn btn-primary mr-auto\"><strong>Show more</strong></a>\r\n        </div>\r\n        <!-- button show more -->\r\n    </div>\r\n\r\n\r\n    <!-- List Jobs -->\r\n</section>\r\n<!-- Main navigation -->\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {GuestDashboardComponent} from './guest-dashboard/guest-dashboard.component';\r\nimport {CLoginComponent } from '../candidate/c-login/c-login.component';\r\nimport {CRegisterComponent} from '../candidate/c-register/c-register.component';\r\nimport {GuestComponent } from './guest.component';\r\nimport { ForgotPassComponent} from './forgot-pass/forgot-pass.component';\r\nimport {ValidateAccComponent } from './validate-acc/validate-acc.component';\r\nimport {AllJoblistComponent} from './all-joblist/all-joblist.component';\r\n const routes: Routes = [ \r\n   {\r\n    path: '',\r\n    component: GuestComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: GuestDashboardComponent\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: CLoginComponent\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: CRegisterComponent\r\n      },\r\n      {\r\n        path: 'forgot-pass',\r\n        component: ForgotPassComponent\r\n      },\r\n      {\r\n        path: 'validate',\r\n        component: ValidateAccComponent\r\n      },\r\n      {\r\n        path: 'alljoblists',\r\n        component: AllJoblistComponent\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class GuestRoutingModule { }\r\n","import { Component, ViewEncapsulation,OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-guest',\r\n  templateUrl: './guest.component.html',\r\n  styleUrls: ['./guest.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GuestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n}\r\n","<app-header-for-guest></app-header-for-guest>\r\n\r\n<router-outlet></router-outlet>\r\n<!-- <app-header-for-eguest></app-header-for-eguest> -->\r\n<!-- <app-forgot-pass></app-forgot-pass> -->\r\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\r\n import { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { GuestComponent } from './guest.component';\r\nimport { GuestRoutingModule } from './guest-routing.module';\r\n\r\nimport { GuestDashboardComponent } from './guest-dashboard/guest-dashboard.component';\r\nimport { CLoginComponent } from '../candidate/c-login/c-login.component';\r\nimport { CRegisterComponent } from '../candidate/c-register/c-register.component';\r\nimport {HeaderForGuestComponent } from '../../shared/components/header-for-guest/header-for-guest.component';\r\nimport {ForgotPassComponent } from './forgot-pass/forgot-pass.component';\r\nimport { ValidateAccComponent} from './validate-acc/validate-acc.component';\r\nimport { AllJoblistComponent } from './all-joblist/all-joblist.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GuestDashboardComponent,\r\n    CLoginComponent,\r\n    CRegisterComponent,\r\n    GuestComponent,\r\n    HeaderForGuestComponent,\r\n    ForgotPassComponent,\r\n    ValidateAccComponent,\r\n    AllJoblistComponent,\r\n    \r\n  ],\r\n  imports: [\r\n     CommonModule,\r\n    SharedModule.forRoot(),\r\n    GuestRoutingModule,\r\n\r\n  ]\r\n})\r\nexport class GuestModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-validate-acc',\r\n  templateUrl: './validate-acc.component.html',\r\n  styleUrls: ['./validate-acc.component.scss']\r\n})\r\nexport class ValidateAccComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"view\">\r\n    <div class=\"  pt-5 pb-5 mt-5 text-center\">\r\n        \r\n        <!-- Default form login -->\r\n     <div class=\"container border border-light rounded mt-5\">\r\n            <form class=\" text-center   p-5\"  >\r\n                <h3 class=\" text-primary font-weight-bolder \" style=\"letter-spacing: 1px;\"> Thanks for signin up!</h3>\r\n                <p class=\" text-monospace grey-text\"> Cool. Your account has been actived now</p>\r\n               \r\n                 \r\n                    <a  [routerLink]=\"['/guest/login']\" ><strong>Sign in</strong></a>\r\n               \r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-for-guest',\r\n  templateUrl: './header-for-guest.component.html',\r\n  styleUrls: ['./header-for-guest.component.scss']\r\n})\r\nexport class HeaderForGuestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" [containerInside]=\"false\">\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand>\r\n        <!-- <a class=\"navbar-brand\"  [routerLink]=\"['../guest']\"> -->\r\n            <!-- test -->\r\n            <a class=\"navbar-brand\"  [routerLink]=\"['/guest']\">\r\n                <!-- test -->\r\n\r\n                <img src=\"../assets/images/logo.png\" height=\"30\" alt=\"\">\r\n        </a>\r\n    </mdb-navbar-brand>\r\n    <!-- Collapsible content -->\r\n    <links>\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\">\r\n                <a [routerLink]=\"['/guest/alljoblists']\"  class=\"nav-link waves-light\" mdbWavesEffect><strong>All Jobs</strong><span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                 <a [routerLink]=\"['/guest/login']\" class=\"nav-link waves-light\" mdbWavesEffect><strong>Sign In</strong></a> \r\n                \r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a  [routerLink]=\"['/guest/register']\" class=\"nav-link waves-light\" mdbWavesEffect><strong>Register</strong></a>\r\n            </li>\r\n            <li>\r\n                <button mdbBtn type=\"button\" size=\"md\" color=\"secondary\" rounded=\"true\" mdbWavesEffect [routerLink]=\"['/eguest']\"><strong>For\r\n                        Employer</strong></button>\r\n            </li>\r\n        </ul>\r\n        <!-- Links -->\r\n    </links>\r\n    <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n<!--/.Navbar-->"],"sourceRoot":"webpack:///"}