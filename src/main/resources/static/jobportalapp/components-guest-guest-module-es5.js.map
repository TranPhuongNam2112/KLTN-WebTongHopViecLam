{"version":3,"sources":["webpack:///src/app/components/candidate/c-login/c-login.component.ts","webpack:///src/app/components/candidate/c-login/c-login.component.html","webpack:///src/app/components/candidate/c-register/c-register.component.ts","webpack:///src/app/components/candidate/c-register/c-register.component.html","webpack:///src/app/components/guest/all-joblist/all-joblist.component.ts","webpack:///src/app/components/guest/all-joblist/all-joblist.component.html","webpack:///src/app/components/guest/forgot-pass/forgot-pass.component.ts","webpack:///src/app/components/guest/forgot-pass/forgot-pass.component.html","webpack:///src/app/components/guest/guest-dashboard/guest-dashboard.component.ts","webpack:///src/app/components/guest/guest-dashboard/guest-dashboard.component.html","webpack:///src/app/components/guest/guest-routing.module.ts","webpack:///src/app/components/guest/guest.component.ts","webpack:///src/app/components/guest/guest.component.html","webpack:///src/app/components/guest/guest.module.ts","webpack:///src/app/components/guest/validate-acc/validate-acc.component.ts","webpack:///src/app/components/guest/validate-acc/validate-acc.component.html","webpack:///src/app/shared/components/header-for-guest/header-for-guest.component.ts","webpack:///src/app/shared/components/header-for-guest/header-for-guest.component.html"],"names":["CLoginComponent","routersnap","authService","tokenStorage","router","config","modalService","toastService","ngZone","route","loginForm","isLoggedIn","showCandidate","showEmployer","showAdmin","isLoginFailed","isShown","errorMessage","roles","user_Account","socialusers","backdrop","keyboard","queryParams","subscribe","params","console","log","error","getToken","getUser","setTimeout","login","data","saveToken","accessToken","saveUser","includes","navigate","then","window","location","reload","err","message","warn","value","selector","templateUrl","styleUrls","providers","CRegisterComponent","SocialloginService","registerForm","isSuccessful","isSignUpFailed","registerCandidate","AllJoblistComponent","allJoblistService","searchJobtypeService","pageNo","i","event","preventDefault","gettAllJobList","keys","Object","allJobPost","length","pages","Array","searchJobByJobType","jobtype","searchJobType","ForgotPassComponent","GuestDashboardComponent","routes","path","component","children","GuestRoutingModule","forChild","imports","exports","GuestComponent","encapsulation","None","GuestModule","forRoot","declarations","ValidateAccComponent","HeaderForGuestComponent"],"mappings":"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","file":"components-guest-guest-module-es5.js","sourcesContent":["import { Component, OnInit, NgZone, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { _AuthService } from '../../../shared/services/auth.service';\r\nimport { TokenStorageService } from '../../../shared/services/token-storage.service';\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';\r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { Socialusers } from '../../../_models/socialusers';\r\nimport { User_Account } from '../../../_models/user_account';\r\nimport { SocialloginService } from '../../../_services/sociallogin.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n//toast\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n\r\n@Component({\r\n  selector: 'app-c-login',\r\n  templateUrl: './c-login.component.html',\r\n  styleUrls: ['./c-login.component.scss'],\r\n  providers: [NgbModalConfig, NgbModal],\r\n  \r\n})\r\nexport class CLoginComponent implements OnInit {\r\n\r\n  // loginForm:  FormGroup;\r\n  loginForm: any = {};\r\n  isLoggedIn = false;\r\n  //theem\r\n  showCandidate = false;\r\n  showEmployer = false;\r\n  showAdmin = false;\r\n  //theem\r\n  isLoginFailed = false;\r\n  isShown: boolean = false;\r\n  errorMessage = '';\r\n  error: Params;\r\n  roles: string[] = [];\r\n  // error = this.getParameterByName(\"error\");\r\n  //showCandidate = false;\r\n  //social login start\r\n  response;\r\n  user_Account = new User_Account();\r\n  socialusers = new Socialusers();\r\n  //  token: string = this.getParameterByName(\"token\");\r\n\r\n  //social login end\r\n  constructor(\r\n    private routersnap: ActivatedRoute,\r\n    private authService: _AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    //  social login start\r\n    // public OAuth: AuthService,\r\n    // private SocialloginService: SocialloginService,\r\n    private router: Router,\r\n    //  social login end\r\n    //toast\r\n    config: NgbModalConfig, private modalService: NgbModal,\r\n    public toastService: ToastService,\r\n    private ngZone: NgZone,\r\n    private route: ActivatedRoute\r\n  \r\n  ) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params);\r\n      this.error= params;\r\n  });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //   let token: string = this.getParameterByName(\"token\", location.href);\r\n    //    console.log(\"hihih\");\r\n    // console.log(token);\r\n    // var redirectUrl: string = localStorage.getItem('token');\r\n    // console.log(\"hihih\");\r\n    // console.log(redirectUrl);\r\n    // let token: string = getParameterByName(\"access_token\", location.href);\r\n    // localStorage.setItem('dataSource', JSON.stringify({ token: token, name: name }));\r\n    //   const token = this.getParameterByName('token',location.href);\r\n    //   if(token) {\r\n    //     localStorage.setItem('dataSource', token);\r\n    //    console.log(\"hihih\");\r\n    //    console.log('dataSource');\r\n    // }\r\n    //lamf\r\n    // console.log(\"hihihihihihi access nef\");\r\n    // console.log(this.routersnap.snapshot.queryParamMap.get('token'));\r\n    // let token = this.getParameterByName(\"token\");\r\n    // if (token) {\r\n    //   this.tokenStorage.saveToken(token);\r\n    //   console.log(\"access_token\" + token);\r\n    //   this.router.navigate(['/candidate']);\r\n    // }\r\n\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n    \r\n    //lam\r\n\r\n    // if (this.token) {\r\n    //   localStorage.setItem('ACCESS_TOKEN', this.token);\r\n    //   this.isLoggedIn = true;\r\n    //   console.log(this.isLoggedIn);\r\n    //   this.router.navigate(['/candidate']);\r\n    // }\r\n\r\n\r\n\r\n    //   else{\r\n    //        let token: string = this.getParameterByName(\"token\", location.href);\r\n    //    console.log(\"hihih\");\r\n    // console.log(token);\r\n    //   }\r\n\r\n  }\r\n  toggleShow() {\r\n    this.isShown = true;\r\n    setTimeout(() => {\r\n      this.isShown = false;\r\n    }, 3000)\r\n  }\r\n  onSubmit() {\r\n\r\n    this.authService.login(this.loginForm).subscribe(\r\n      data => {\r\n\r\n        // let token: string = this.getParameterByName(\"token\");\r\n        //   console.log(\"access-toek \"+token);\r\n\r\n\r\n        // let token: string = this.getParameterByName(\"token\");\r\n\r\n        // console.log(\"access-toek \" + this.token);\r\n        // this.router.navigate(['/candidate']);\r\n\r\n        // localStorage.setItem('token', JSON.stringify(this.user_Account));\r\n        // console.warn(\"sdsdsd\" + this.loginForm.value);\r\n        // console.log(localStorage.getItem('token'));\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        console.log(\"hihihih\" + data.accessToken);\r\n        this.tokenStorage.saveUser(data);\r\n        console.log(\"nhin ne data\");\r\n        console.log(data);\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        //theem\r\n        console.log(this.roles);\r\n        // this.showCandidate = this.roles.some(i=>i.name.includes('ROLE_CANDIDATE'));\r\n        // this.showEmployer = this.roles.some(i=>i.name.includes('ROLE_EMPLOYER'));\r\n        // this.showAdmin = this.roles.some(i=>i.name.includes('ROLE_ADMIN'));\r\n        this.showCandidate = this.roles.includes('ROLE_CANDIDATE');\r\n        this.showEmployer = this.roles.includes('ROLE_EMPLOYER');\r\n        this.showAdmin = this.roles.includes('ROLE_ADMIN');\r\n        console.log(\"canddiate\" + this.showCandidate);\r\n        console.log(\"employer\" + this.showEmployer);\r\n        console.log(\"admin\" + this.showAdmin);\r\n        // this.reloadPage();\r\n        // console.warn(\"Bearer\" + this.loginForm.value);\r\n        if (this.showCandidate) {\r\n          this.router.navigate(['/candidate']);\r\n        }\r\n        else if (this.showEmployer) {\r\n          // // sua style o ddaay\r\n          this.router.navigate(['/employer']).then(() => {\r\n            window.location.reload();\r\n          });\r\n          this.router.navigate(['/employer']);\r\n        }\r\n        else if (this.showAdmin) {\r\n          this.router.navigate(['/admin']);\r\n        }\r\n      },\r\n      err => {\r\n         this.errorMessage = err.error.message;\r\n        // this.errorMessage = \"Error email or password\";\r\n        this.isLoginFailed = true;\r\n\r\n      }\r\n    );\r\n    console.warn(this.loginForm.value);\r\n  }\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n    //social login start\r\n  // public socialSignIn(socialProvider: string, dangerTpl, successTpl) {\r\n  //   let socialPlatformProvider;\r\n  //   if (socialProvider === 'facebook') {\r\n  //     socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n  //   } else if (socialProvider === 'google') {\r\n  //     socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n  //   }\r\n  //   this.OAuth.signIn(socialPlatformProvider).then(socialusers => {\r\n  //     console.log(socialProvider, socialusers);\r\n  //     console.log(socialusers);\r\n  //     if (socialProvider === 'facebook') {\r\n  //       this.SavesresponseFB(socialusers, dangerTpl, successTpl);\r\n  //     } else if (socialProvider === 'google') {\r\n  //       this.SavesresponseGG(socialusers, dangerTpl, successTpl);\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // SavesresponseGG(socialusers: Socialusers, dangerTpl, successTpl) {\r\n  //   this.SocialloginService.loginGoogleCandidate(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     // console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n  //     console.log(localStorage.getItem('socialusers'));\r\n\r\n  //     //theem\r\n\r\n  //     //theem\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //     this.router.navigate(['/candidate']);\r\n\r\n  //   }, err => {\r\n  //     //this.errorMessage = err.message;\r\n  //     this.errorMessage = \"Are you employer? Look like you are loging in as employer user. Click here \";\r\n  //     this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  // SavesresponseFB(socialusers: Socialusers, dangerTpl, successTpl) {\r\n  //   this.SocialloginService.loginFacebookCandidate(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //     this.router.navigate(['/candidate']);\r\n\r\n  //   }, err => {\r\n  //     //this.errorMessage = err.message;\r\n  //     this.errorMessage = \"Are you employer? Look like you are loging in as employer user. Click here \";\r\n  //     this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n\r\n  //social login end\r\n\r\n\r\n\r\n}\r\n","<!-- Full Page Login -->\r\n<div class=\"login\">\r\n    <!-- Mask & flexbox options-->\r\n    <div class=\"mask rgba-blue-grey-strong d-flex justify-content-center align-items-center\">\r\n        <!-- Content -->\r\n        <div class=\"container mb-5\">\r\n            <!--Grid row-->\r\n            <div class=\"row pt-lg-5 mt-lg-5\">\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 mb-5 mt-md-0 mt-5 white-text text-center text-md-left wow fadeInLeft\"\r\n                    data-wow-delay=\"0.3s\">\r\n                    <h1 class=\"display-4 font-weight-bold\">Don't lose your dream job</h1>\r\n                    <hr class=\"hr-light\">\r\n                    <h6 class=\"mb-3\">get your dream job come true right now . . .</h6>\r\n                    <!-- <a mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect [routerLink]=\"['../']\">Learn more</a> -->\r\n                    <a [routerLink]=\"['../']\" mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect>Learn more</a>\r\n                </div>\r\n                <!--Grid column-->\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 col-xl-5 mb-4\">\r\n                    <!--Form-->\r\n                    <mdb-card class=\"wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                        <mdb-card-body class=\"z-depth-2\">\r\n                            <form *ngIf=\"!isLoggedIn\" name=\"loginForm\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n                                #f=\"ngForm\" novalidate>\r\n                                <div class=\"text-center\">\r\n                                    <h3 class=\"blue-text\">\r\n                                        <strong>Sign in</strong>\r\n                                    </h3>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <div class=\"row d-flex justify-content-center\">\r\n                                       <!--Facebook-->\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                     \r\n                                        <button type=\"button\" mdbBtn size=\"lg\" color=\"fb\" class=\"btn btn-indigo\"\r\n                                            mdbWavesEffect\r\n                                            onClick=\"window.open('//localhost:8080/oauth2/authorize/facebook?redirect_uri=http://localhost:4200','_self')\"\r\n                                            > <span>Facebook</span></button>\r\n                                    </div>\r\n                                    \r\n\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                            onClick=\"window.open('//localhost:8080/oauth2/authorize/google?redirect_uri=http://localhost:4200','_self')\"\r\n                                            > Google\r\n                                        </button>\r\n                                    </div>\r\n                                    <!-- <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                           \r\n                                            > Google\r\n                                        </button>\r\n                                        <a href=\"http://localhost:8080/oauth2/authorize/google?redirect_uri=http://localhost:4200/oauth2/redirect\">Google</a>\r\n                                    </div> -->\r\n                                 \r\n                                    <div class=\"form-group mt-3 ml-3 mr-3\">\r\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"error.error\">\r\n                                             {{ error.error }}\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                             \r\n                             \r\n                                </div>\r\n                                <div\r\n                                    style=\"width: 100%; height: 20px; border-bottom: 1px ridge ; text-align: center; margin-bottom: 20px;\">\r\n                                    <span style=\"font-size: 14px; background-color: #ffffff; padding: 0 10px;\">\r\n                                        or\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"loginForm.email\"\r\n                                        required email #email=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && email.invalid\">\r\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"email.errors.email\">Email must be a valid email address</div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                                        [(ngModel)]=\"loginForm.password\" required minlength=\"8\" #password=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\"\r\n                                        *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            Password must be at least 8 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    <a [routerLink]=\"['../forgot-pass']\" class=\"text-primary\">Forgot password?</a>\r\n                                </div>\r\n                                <div  class=\"d-flex justify-content-center\" *ngIf=\" isShown && f.valid \" >\r\n                                    <img class=\"loader\" src=\"../assets/images/loader3.svg\">\r\n                                </div>\r\n                                <div class=\"text-center mt-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button class=\"btn btn-primary btn-block\"  (click)=\"toggleShow()\">\r\n                                            Sign in\r\n                                        </button>\r\n                                    </div>\r\n                                    <!-- Register -->\r\n                                    <!-- <p>Don't have an accout yet? -->\r\n                                    <!-- <a [routerLink]=\"['../register']\"><strong>Register now!</strong></a> -->\r\n                                    <!-- <a><strong>Register now!</strong></a>\r\n                                    </p> -->\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\r\n                                        Login failed: {{ errorMessage }}\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                            <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n                                <!-- Logged in as {{ roles }}. -->\r\n                                Login successful!\r\n                            </div>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--/.Form-->\r\n                </div>\r\n                <!--Grid column-->\r\n            </div>\r\n            <!--Grid row-->\r\n            <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n        </div>\r\n        <!-- Content -->\r\n    </div>\r\n    <!-- Mask & flexbox options-->\r\n</div>\r\n<!-- Full Page Login -->\r\n<ng-template #successTpl>\r\n    <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Login Successful!</span>\r\n</ng-template>\r\n<ng-template #dangerTpl >\r\n    <span><i class=\"fa fa-exclamation-triangle fa-lg mr-3\" aria-hidden=\"true\"></i>{{ errorMessage }}<i class=\"fas fa-arrow-up\"></i></span>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { _AuthService } from '../../../shared/services/auth.service';\r\nimport { TokenStorageService } from '../../../shared/services/token-storage.service';\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';\r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { Socialusers } from '../../../_models/socialusers'\r\nimport { SocialloginService } from '../../../_services/sociallogin.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n//toast\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n@Component({\r\n  selector: 'app-c-register',\r\n  templateUrl: './c-register.component.html',\r\n  styleUrls: ['./c-register.component.scss']\r\n})\r\nexport class CRegisterComponent implements OnInit {\r\n  // registerForm: FormGroup;\r\n  registerForm: any = {};\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  isShown: boolean = false;\r\n  error: Params;\r\n  //social login start\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  roles: string[] = [];\r\n  showCandidate = false;\r\n  response;\r\n  socialusers = new Socialusers();\r\n  //social login end\r\n  constructor(\r\n    private authService: _AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    //  social login start\r\n    // public OAuth: AuthService,\r\n    private SocialloginService: SocialloginService,\r\n    private router: Router,\r\n    //toast \r\n    config: NgbModalConfig, private modalService: NgbModal,\r\n    public toastService: ToastService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.route.queryParams.subscribe(params => {\r\n      console.log(params);\r\n      this.error = params;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.registerForm.role=\"candidate\";\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n  toggleShow() {\r\n    this.isShown = true;\r\n    setTimeout(() => {\r\n      this.isShown = false;\r\n    }, 3000)\r\n  }\r\n  onSubmit() {\r\n    this.authService.registerCandidate(this.registerForm).subscribe(\r\n      data => {\r\n\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n  //social login start\r\n  // public socialSignIn(socialProvider: string, dangerTpl, successTpl) {\r\n  //   let socialPlatformProvider;\r\n  //   if (socialProvider === 'facebook') {\r\n  //     socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n  //   } else if (socialProvider === 'google') {\r\n  //     socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n  //   }\r\n  //   this.OAuth.signIn(socialPlatformProvider).then(socialusers => {\r\n  //     console.log(socialProvider, socialusers);\r\n  //     console.log(socialusers);\r\n  //     if (socialProvider === 'facebook') {\r\n  //       this.SavesresponseFB(socialusers, dangerTpl, successTpl);\r\n  //     } else if (socialProvider === 'google') {\r\n  //       this.SavesresponseGG(socialusers, dangerTpl, successTpl);\r\n  //     }\r\n  //   });\r\n  // }\r\n  // SavesresponseGG(socialusers: Socialusers, dangerTpl, successTpl) {\r\n  //   this.SocialloginService.loginGoogleCandidate(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //     this.router.navigate(['/candidate']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //     this.errorMessage = \"Are you employer? Look like you are loging in as employer user. Click here \";\r\n  //     this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  // SavesresponseFB(socialusers: Socialusers, dangerTpl, successTpl) {\r\n  //   this.SocialloginService.loginFacebookCandidate(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //     this.router.navigate(['/candidate']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //     this.errorMessage = \"Are you employer? Look like you are loging in as employer user. Click here \";\r\n  //     this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  //social login end\r\n\r\n}\r\n","<app-header-for-guest></app-header-for-guest>\r\n<div class=\"login  mt-5 \">\r\n    <div class=\"mask rgba-black-light pb-5\">\r\n        <div class=\"container\" >\r\n            <div class=\"row \">\r\n                <div class=\"col-lg-3 col-md-1 col-sm-1\">\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-10 col-sm-10\">\r\n                    <!-- Material form login -->\r\n                    <mdb-card>\r\n                        <mdb-card-header class=\" primary-color white-text text-center py-4\">\r\n                            <h4>\r\n                                Register now!\r\n                            </h4>\r\n                            <p>Don't lose chance to find interesting jobs</p>\r\n                        </mdb-card-header>\r\n                        <!--Card content-->\r\n                        <mdb-card-body class=\"px-lg-5 pt-0\">\r\n\r\n                            <!-- Form -->\r\n                            <form *ngIf=\"!isSuccessful\" name=\"registerForm\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n                                #f=\"ngForm\" novalidate>\r\n                                <div class=\"row d-flex justify-content-center\">\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                     \r\n                                        <button type=\"button\" mdbBtn size=\"lg\" color=\"fb\" class=\"btn btn-indigo\"\r\n                                            mdbWavesEffect\r\n                                            onClick=\"window.open('//localhost:8080/oauth2/authorize/facebook?redirect_uri=http://localhost:4200','_self')\"\r\n                                            > <span>Facebook</span></button>\r\n                                    </div>\r\n                                    \r\n\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                            onClick=\"window.open('//localhost:8080/oauth2/authorize/google?redirect_uri=http://localhost:4200','_self')\"\r\n                                            > Google\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"form-group mt-3 ml-3 mr-3\">\r\n                                        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"error.error\">\r\n                                             {{ error.error }}\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                style=\"width: 100%; height: 20px; border-bottom: 1px ridge ; text-align: center; margin-bottom: 20px;\">\r\n                                <span style=\"font-size: 14px; background-color: #ffffff; padding: 0 10px;\">\r\n                                    or \r\n                                </span>\r\n                            </div>\r\n                            <!-- <div class=\"form-group\">\r\n                                Signup failed!<br />{{ errorMessage }}\r\n                            </div> -->\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\">Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"name\"\r\n                                        [(ngModel)]=\"registerForm.name\" required minlength=\"3\" maxlength=\"30\"\r\n                                        #name=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\r\n                                        <div *ngIf=\"name.errors.required\">Name is required</div>\r\n                                        <div *ngIf=\"name.errors.minlength\">\r\n                                            Name must be at least 3 characters\r\n                                        </div>\r\n                                        <div *ngIf=\"name.errors.maxlength\">\r\n                                            Name must be at most 20 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"email\" class=\"form-control\" name=\"email\"\r\n                                        [(ngModel)]=\"registerForm.email\" required email #email=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\r\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"email.errors.email\">\r\n                                            Email must be a valid email address\r\n                                        </div>\r\n                                    </div>\r\n                                    <small id=\"emailHelp2\" class=\"form-text text-muted\">We'll never share your email\r\n                                        with anyone.</small>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <small id=\"optional\" class=\"ml-2  text-success\">(at least 6 characters)</small>\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                                        [(ngModel)]=\"registerForm.password\" required minlength=\"6\"\r\n                                        #password=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            Password must be at least 6 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- Sign in button -->\r\n                                <div  class=\"d-flex justify-content-center\" *ngIf=\" isShown && f.valid \" >\r\n                                            <img class=\"loader\" src=\"../assets/images/loader3.svg\">\r\n                                        </div>\r\n                                <div class=\"form-group\">\r\n                                    <button mdbBtn color=\"primary\" outline=\"true\" rounded=\"true\" block=\"true\"\r\n                                        class=\"my-4 waves-effect z-depth-0\"\r\n                                        mdbWavesEffect \r\n                                        (click)=\"toggleShow()\"\r\n                                        ><strong>Register</strong></button>\r\n                                      \r\n                                </div>\r\n                               \r\n                                <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n                                    Signup failed!<br />{{ errorMessage }}\r\n                                </div>\r\n                            </form>\r\n                            <div class=\"alert alert-success mt-3\" *ngIf=\"isSuccessful\">\r\n                                Please check your mail to validate your account.<br/>\r\n                                <a [href]=\"'https://mail.google.com/mail/'\" target=\"_blank\" ><strong>Go to gmail</strong></a>\r\n                            </div>\r\n                            <!-- Form -->\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                </div>\r\n                <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n            </div>\r\n           \r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #successTpl>\r\n    <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span>\r\n</ng-template>\r\n<ng-template #dangerTpl >\r\n    <span><i class=\"fa fa-exclamation-triangle fa-lg mr-3\" aria-hidden=\"true\"></i>{{ errorMessage }}<i class=\"fas fa-arrow-up\"></i></span>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from \"rxjs\";\r\nimport { Router } from '@angular/router';\r\nimport { AllJoblistService } from 'src/app/_services/candidate/all-joblist.service';\r\nimport { JobPostSummary } from 'src/app/_models/jobPostSummary';\r\nimport {SearchJobtypeService} from 'src/app/_services/employer/search-jobtype.service';\r\n@Component({\r\n  selector: 'app-all-joblist',\r\n  templateUrl: './all-joblist.component.html',\r\n  styleUrls: ['./all-joblist.component.scss']\r\n})\r\nexport class AllJoblistComponent implements OnInit {\r\n\r\n  allJobPost: Observable<JobPostSummary[]>;\r\n  public pageNo: number = 0;\r\n  public pages: Array<number>;\r\n  jobtype: '';\r\n  constructor(\r\n    private allJoblistService: AllJoblistService,\r\n    private router: Router,\r\n    private searchJobtypeService: SearchJobtypeService\r\n\r\n  ) { }\r\n\r\n\r\n  setPage(i, event: any) {\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.gettAllJobList();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gettAllJobList();\r\n    \r\n  }\r\n  isAllJobPostEmpty(): boolean {\r\n    let keys = Object.keys(this.allJobPost);\r\n    if (keys.length) { return false; }\r\n    else return true;\r\n  }\r\n  gettAllJobList() {\r\n    this.allJoblistService.gettAllJobList(this.pageNo).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.allJobPost = data['content'];\r\n        this.pages = new Array(data['totalPages'])\r\n      },\r\n      (error) => {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n  searchJobType() {\r\n    this.searchJobtypeService.searchJobByJobType(this.jobtype)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.allJobPost = data['content'];\r\n          this.pages = new Array(data['totalPages'])\r\n        \r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n}\r\n","<!-- Search jobtype start -->\r\n<div class=\"container-fluid\">\r\n    <div class=\"heavy-rain-gradient\r\n    rounded-lg pl-3 pr-3 rounded-lg\">\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-4 col-sm-12 col-md-12\">\r\n                <div class=\"input-group mt-4\">\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                            <mdb-icon fas icon=\"search\"></mdb-icon>\r\n                        </span>\r\n                    </div>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Find your job type expectation\"\r\n                        aria-label=\"expectation\" aria-describedby=\"basic-addon1\" [(ngModel)]=\"jobtype\"\r\n                        name=\"jobtype\">\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n                <div class=\"dropdown\" mdbDropdown>\r\n                    <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\"\r\n                        type=\"button\" mdbWavesEffect block=\"true\">\r\n                        <span class=\"text-button\">All Jobs</span>\r\n                    </button>\r\n                    <div class=\"dropdown-menu dropdown-primary\">\r\n                        <!-- job -->\r\n                        <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                        <!-- job    -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n                <div class=\"dropdown\" mdbDropdown>\r\n                    <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\"\r\n                        type=\"button\" mdbWavesEffect block=\"true\">\r\n                        <span class=\"text-button\">All Locations</span>\r\n\r\n                    </button>\r\n                    <div class=\"dropdown-menu dropdown-primary\">\r\n                        <!-- location -->\r\n                        <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                        <!-- location    -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-2 col-sm-12 col-md-12\">\r\n                <button (click)=\"searchJobType()\" mdbBtn color=\"success\" block=\"true\" class=\"my-4\"\r\n                    type=\"submit\"> <strong><span class=\"text-button\">Search</span></strong> </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Search jobtype end -->\r\n<!-- List jobs -->\r\n<div class=\"card \">\r\n    <div class=\"card-body container\">\r\n        <h5 class=\"card-title ml-5 \">Lasted Jobs</h5>\r\n        <hr class=\" hr-grey my-4 wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n        <!-- list job -->\r\n        <div *ngIf=\"isAllJobPostEmpty()\" class=\"text-center\">\r\n\r\n            <img src=\"./assets/images/rsz_nocontent.png\">\r\n        </div>\r\n        <div *ngIf=\"allJobPost\">\r\n            <div class=\"pt-3 mb-3 ml-5 mr-5 border rounded border-weight-light bg-light\"\r\n                *ngFor=\"let jobpost of allJobPost; \">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-3 col-md-12 col-sm-12 mt-3\">\r\n\r\n                        <img class=\"card-img-top  \" src=\"data:image/png;base64,{{jobpost.image}}\"\r\n                            alt=\"Company image cap\">\r\n\r\n                        <!-- <a class=\"d-flex justify-content-center\" mdbTooltip=\"delete saved job\" placement=\"top\"\r\n                            (click)=\"deleteSaveJobPost(savedjob.id,dangerTpl,successTpl)\">\r\n                            <i class=\"fas fa-heart fa-2x mt-3\" style=\"color: crimson;\"></i>\r\n                        </a> -->\r\n                    </div>\r\n                    <div class=\"col-lg-9 col-md-12 col-sm-12 mt-3\">\r\n                        <div class=\"row\">\r\n\r\n                            <div class=\"col-8\">\r\n                                <div class=\"row\">\r\n                                    <a href=\"https://www.w3schools.com\" class=\"font-weight-bold\"\r\n                                        style=\"font-size:20px;\">\r\n                                        {{jobpost.jobtitle}}</a>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <label class=\"text-secondary\" style=\"font-size: 14px ; \">\r\n                                        <i class=\"fas fa-map-marker-alt mr-1\">\r\n                                        </i> {{jobpost.city}}\r\n                                    </label>\r\n                                    <label class=\"ml-3 text-secondary\" style=\"font-size: 14px;\">\r\n                                        <i class=\"fas fa-money-bill-wave\"></i>\r\n                                        {{jobpost.minSalary | currency}} -\r\n                                        {{jobpost.maxSalary | currency}}\r\n\r\n                                    </label>\r\n                                </div>\r\n                                <div class=\"row \">\r\n\r\n                                    <label class=\"text-muted font-weight-bold mr-3\" for=\"expireddate\">Company\r\n                                        Name:</label>\r\n\r\n                                    <div class=\" text-body font-weight-normal \">\r\n                                        {{jobpost.companyname }}</div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <label class=\"text-muted font-weight-bold mr-3\" for=\"industry\">Job\r\n                                        Type:</label>\r\n                                    <div class=\" text-body font-weight-normal \">\r\n                                        {{jobpost.jobtype}}</div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <label class=\"text-muted font-weight-bold mr-3\" for=\"industry\">Experience\r\n                                        Years:</label>\r\n                                    <div class=\" text-body font-weight-normal \">\r\n                                        {{jobpost.experienceyears}}</div>\r\n                                </div>\r\n                                <!-- <p class=\"card-text text-muted\" style=\"font-size: 13px;\">\r\n                                {{savedjob.experienceyears}}</p> -->\r\n                            </div>\r\n\r\n                            <div class=\"col-4\">\r\n                                <div class=\"row\">\r\n                                    <label class=\"bg-secondary text-light pl-1 pr-1 \" mdbTooltip=\"Expiration Date\"\r\n                                        style=\"font-size: 12px;\">{{jobpost.expirationDate |date:'medium'}}</label>\r\n                                </div>\r\n                                <!-- <a   class=\"mt-5 d-flex justify-content-center\" mdbTooltip=\"Save this job\"\r\n                                    placement=\"top\" (click)=\"saveJobPost(jobpost.id,dangerTpl,successTpl)\">\r\n                                    <i class=\"far fa-heart fa-2x mt-3\" style=\"color: crimson;\"></i>\r\n                                </a> -->\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ul class=\"nav nav-pills d-flex justify-content-center mt-3 mb-5\">\r\n                <li class=\"nav-item\" *ngFor=\"let p of pages; let i=index\">\r\n                    <a class=\"nav-link\" href=\"\" (click)=\"setPage(i,$event)\" [ngClass]=\"{'active':i==pageNo}\">\r\n                        {{i}}\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n    <ng-template #successTpl>\r\n        <span style=\"font-size: 18px;\"><i class=\"fas fa-check mr-3 \"></i>Successful!</span>\r\n    </ng-template>\r\n    <ng-template #dangerTpl>\r\n        <span style=\"font-size: 18px;\"><i class=\"fas fa-exclamation-triangle mr-3\"></i>There got\r\n            some error</span>\r\n    </ng-template>\r\n\r\n    <!-- list job -->\r\n</div>\r\n\r\n\r\n\r\n<!-- List Jobs -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forgot-pass',\r\n  templateUrl: './forgot-pass.component.html',\r\n  styleUrls: ['./forgot-pass.component.scss']\r\n})\r\nexport class ForgotPassComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header-for-guest></app-header-for-guest>\r\n<main>\r\n    <forgot-pass></forgot-pass>\r\n</main>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from \"rxjs\";\r\nimport { Router } from '@angular/router';\r\nimport { AllJoblistService } from 'src/app/_services/candidate/all-joblist.service';\r\nimport {SearchJobtypeService} from 'src/app/_services/employer/search-jobtype.service';\r\nimport { JobPostSummary } from 'src/app/_models/jobPostSummary';\r\n@Component({\r\n  selector: 'app-guest-dashboard',\r\n  templateUrl: './guest-dashboard.component.html',\r\n  styleUrls: ['./guest-dashboard.component.scss']\r\n})\r\nexport class GuestDashboardComponent implements OnInit {\r\n  allJobPost: Observable<JobPostSummary[]>;\r\n\r\n  public pageNo: number = 0;\r\n  public pages: Array<number>;\r\n  jobtype: '';\r\n  constructor(\r\n    private allJoblistService: AllJoblistService,\r\n    private router: Router,\r\n    private searchJobtypeService: SearchJobtypeService\r\n  ) { }\r\n  setPage(i, event: any) {\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.gettAllJobList();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.gettAllJobList();\r\n  }\r\n  isAllJobPostEmpty(): boolean {\r\n    let keys = Object.keys(this.allJobPost);\r\n    if (keys.length) { return false; }\r\n    else return true;\r\n  }\r\n  gettAllJobList() {\r\n    this.allJoblistService.gettAllJobList(this.pageNo).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.allJobPost = data['content'];\r\n        this.pages = new Array(data['totalPages'])\r\n      },\r\n      (error) => {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n  // searchByJobType() {\r\n  //   this.searchJobtypeService.searchJobByJobType(this.pageNo).subscribe(\r\n  //     data => {\r\n  //       console.log(data);\r\n  //       this.allJobPost = data['content'];\r\n  //       this.pages = new Array(data['totalPages'])\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error.error.message)\r\n  //     }\r\n  //   );\r\n  // }\r\n  searchJobType() {\r\n    this.searchJobtypeService.searchJobByJobType(this.jobtype)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.allJobPost = data['content'];\r\n          this.pages = new Array(data['totalPages'])\r\n        \r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n","<!-- <app-header-for-guest></app-header-for-guest> -->\r\n<!-- Main navigation -->\r\n<section>\r\n    <!-- Full Page Intro -->\r\n    <div class=\"view jarallax\"\r\n        style=\"background-image: url('./assets/images/candidate/login.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;\">\r\n        <!-- Mask & flexbox options-->\r\n        <div class=\"mask rgba-black-light d-flex justify-content-center align-items-center\">\r\n            <!-- Content -->\r\n            <div class=\"container\">\r\n                <!--Grid row-->\r\n                <div class=\"row\">\r\n                    <!--Grid column-->\r\n                    <div class=\"col-md-12 mb-4 white-text text-center\">\r\n                        <h1 class=\"h1-reponsive white-text text-uppercase font-weight-bold mb-0 pt-md-5 pt-5 wow fadeInDown\"\r\n                            data-wow-delay=\"0.3s\"><strong>Don't miss your jobs</strong></h1>\r\n                        <br />\r\n                        <br />\r\n                        <a [routerLink]=\"['./login']\" mdbBtn color=\"primary\" rounded=\"true\" mdbWavesEffect>\r\n                            <mdb-icon fas icon=\"user\" class=\"left\"></mdb-icon><strong>Sign in now!</strong>\r\n                        </a>\r\n                        <hr class=\"hr-light my-4 wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n                        <br />\r\n                    </div>\r\n                    <!--Grid column-->\r\n                </div>\r\n                <!-- <app-search-job></app-search-job> -->\r\n                <div class=\"heavy-rain-gradient\r\n                rounded-lg pl-3 pr-3 rounded-lg\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-4 col-sm-12 col-md-12\">\r\n                            <div class=\"input-group mt-4\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                                        <mdb-icon fas icon=\"search\"></mdb-icon>\r\n                                    </span>\r\n                                </div>\r\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Find your job type expectation\"\r\n                                    aria-label=\"expectation\" aria-describedby=\"basic-addon1\" [(ngModel)]=\"jobtype\"\r\n                                    name=\"jobtype\">\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n                            <div class=\"dropdown\" mdbDropdown>\r\n                                <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\"\r\n                                    type=\"button\" mdbWavesEffect block=\"true\">\r\n                                    <span class=\"text-button\">All Jobs</span>\r\n                                </button>\r\n                                <div class=\"dropdown-menu dropdown-primary\">\r\n                                    <!-- job -->\r\n                                    <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                                    <!-- job    -->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n                            <div class=\"dropdown\" mdbDropdown>\r\n                                <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\"\r\n                                    type=\"button\" mdbWavesEffect block=\"true\">\r\n                                    <span class=\"text-button\">All Locations</span>\r\n\r\n                                </button>\r\n                                <div class=\"dropdown-menu dropdown-primary\">\r\n                                    <!-- location -->\r\n                                    <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                                    <!-- location    -->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-2 col-sm-12 col-md-12\">\r\n                            <button (click)=\"searchJobType()\" mdbBtn color=\"success\" block=\"true\" class=\"my-4\"\r\n                                type=\"submit\"> <strong><span class=\"text-button\">Search</span></strong> </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!--Grid row-->\r\n            </div>\r\n            <!-- Content -->\r\n        </div>\r\n        <!-- Mask & flexbox options-->\r\n    </div>\r\n    <!-- Full Page Intro -->\r\n\r\n    <!-- List jobs -->\r\n    <div class=\"card \">\r\n        <div class=\"card-body container\">\r\n            <h5 class=\"card-title text-center\">Lasted Jobs</h5>\r\n            <hr class=\"hr-grey my-4 wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n            <!-- list job -->\r\n            <div *ngIf=\"isAllJobPostEmpty()\" class=\"text-center\">\r\n\r\n                <img src=\"./assets/images/rsz_nocontent.png\">\r\n            </div>\r\n            <div *ngIf=\"allJobPost\">\r\n                <!-- <div class=\"row\">\r\n        <div *ngFor=\"let jobpost of allJobPost;\" style=\"border: 1px solid black\" class=\"col-lg-6 col-md-12\">\r\n            {{jobpost.jobtitle}}\r\n        </div>\r\n    </div> -->\r\n                <div class=\"row\">\r\n                    <div *ngFor=\"let jobpost of allJobPost;\"\r\n                        class=\"col-lg-6 col-md-12 col-sm-12 d-flex justify-content-center\">\r\n                        <div class=\" pt-3 mb-3 pr-3  border rounded border-weight-light bg-light\">\r\n                            <div class=\"row pl-1\">\r\n                                <div class=\"col-lg-3 col-md-12 col-sm-12 mt-3\">\r\n                                    <img class=\"card-img-top  \" src=\"data:image/png;base64,{{jobpost.image}}\"\r\n                                        alt=\"Company image cap\">\r\n\r\n                                </div>\r\n                                <div class=\"col-lg-9 col-md-12 col-sm-12 mt-3\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-8\">\r\n                                            <div class=\"row\">\r\n                                                <a href=\"https://www.w3schools.com\" class=\"font-weight-bold\"\r\n                                                    style=\"font-size:16px;\">\r\n                                                    {{jobpost.jobtitle}}</a>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <label class=\"text-secondary\" style=\"font-size: 14px ; \">\r\n                                                    <i class=\"fas fa-map-marker-alt mr-1\">\r\n                                                    </i> {{jobpost.city}}\r\n                                                </label>\r\n                                                <label class=\"ml-3 text-secondary\" style=\"font-size: 14px;\">\r\n                                                    <i class=\"fas fa-money-bill-wave\"></i>\r\n                                                    {{jobpost.minSalary | currency}} -\r\n                                                    {{jobpost.maxSalary | currency}}\r\n\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class=\"row \">\r\n\r\n                                                <label class=\"text-muted font-weight-bold mr-3\"\r\n                                                    for=\"expireddate\">Company\r\n                                                    Name:</label>\r\n\r\n                                                <div class=\" text-body font-weight-normal \">\r\n                                                    {{jobpost.companyname }}</div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <label class=\"text-muted font-weight-bold mr-3\" for=\"industry\">Job\r\n                                                    Type:</label>\r\n                                                <div class=\" text-body font-weight-normal \">\r\n                                                    {{jobpost.jobtype}}</div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <label class=\"text-muted font-weight-bold mr-3\"\r\n                                                    for=\"industry\">Experience\r\n                                                    Years:</label>\r\n                                                <div class=\" text-body font-weight-normal \">\r\n                                                    {{jobpost.experienceyears}}</div>\r\n                                            </div>\r\n                                            <!-- <p class=\"card-text text-muted\" style=\"font-size: 13px;\">\r\n                                    {{savedjob.experienceyears}}</p> -->\r\n                                        </div>\r\n\r\n                                        <div class=\"col-4\">\r\n                                            <label class=\"bg-secondary text-light pl-1 pr-1 \"\r\n                                                mdbTooltip=\"Expiration Date\"\r\n                                                style=\"font-size: 12px;\">{{jobpost.expirationDate |date:'medium'}}</label>\r\n\r\n\r\n\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- list job -->\r\n        </div>\r\n\r\n        <!-- list job -->\r\n        <!-- button show more -->\r\n        <div *ngIf=\"!isAllJobPostEmpty()\" class=\"text-center mb-3\">\r\n            <a [routerLink]=\"['/guest/alljoblists']\" class=\"btn btn-primary mr-auto\"><strong>Show more</strong></a>\r\n        </div>\r\n        <!-- button show more -->\r\n    </div>\r\n\r\n\r\n    <!-- List Jobs -->\r\n</section>\r\n<!-- Main navigation -->\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {GuestDashboardComponent} from './guest-dashboard/guest-dashboard.component';\r\nimport {CLoginComponent } from '../candidate/c-login/c-login.component';\r\nimport {CRegisterComponent} from '../candidate/c-register/c-register.component';\r\nimport {GuestComponent } from './guest.component';\r\nimport { ForgotPassComponent} from './forgot-pass/forgot-pass.component';\r\nimport {ValidateAccComponent } from './validate-acc/validate-acc.component';\r\nimport {AllJoblistComponent} from './all-joblist/all-joblist.component';\r\n const routes: Routes = [ \r\n   {\r\n    path: '',\r\n    component: GuestComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: GuestDashboardComponent\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: CLoginComponent\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: CRegisterComponent\r\n      },\r\n      {\r\n        path: 'forgot-pass',\r\n        component: ForgotPassComponent\r\n      },\r\n      {\r\n        path: 'validate',\r\n        component: ValidateAccComponent\r\n      },\r\n      {\r\n        path: 'alljoblists',\r\n        component: AllJoblistComponent\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class GuestRoutingModule { }\r\n","import { Component, ViewEncapsulation,OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-guest',\r\n  templateUrl: './guest.component.html',\r\n  styleUrls: ['./guest.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GuestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n}\r\n","<app-header-for-guest></app-header-for-guest>\r\n\r\n<router-outlet></router-outlet>\r\n<!-- <app-header-for-eguest></app-header-for-eguest> -->\r\n<!-- <app-forgot-pass></app-forgot-pass> -->\r\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\r\n import { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { GuestComponent } from './guest.component';\r\nimport { GuestRoutingModule } from './guest-routing.module';\r\n\r\nimport { GuestDashboardComponent } from './guest-dashboard/guest-dashboard.component';\r\nimport { CLoginComponent } from '../candidate/c-login/c-login.component';\r\nimport { CRegisterComponent } from '../candidate/c-register/c-register.component';\r\nimport {HeaderForGuestComponent } from '../../shared/components/header-for-guest/header-for-guest.component';\r\nimport {ForgotPassComponent } from './forgot-pass/forgot-pass.component';\r\nimport { ValidateAccComponent} from './validate-acc/validate-acc.component';\r\nimport { AllJoblistComponent } from './all-joblist/all-joblist.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GuestDashboardComponent,\r\n    CLoginComponent,\r\n    CRegisterComponent,\r\n    GuestComponent,\r\n    HeaderForGuestComponent,\r\n    ForgotPassComponent,\r\n    ValidateAccComponent,\r\n    AllJoblistComponent,\r\n    \r\n  ],\r\n  imports: [\r\n     CommonModule,\r\n    SharedModule.forRoot(),\r\n    GuestRoutingModule,\r\n\r\n  ]\r\n})\r\nexport class GuestModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-validate-acc',\r\n  templateUrl: './validate-acc.component.html',\r\n  styleUrls: ['./validate-acc.component.scss']\r\n})\r\nexport class ValidateAccComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"view\">\r\n    <div class=\"  pt-5 pb-5 mt-5 text-center\">\r\n        \r\n        <!-- Default form login -->\r\n     <div class=\"container border border-light rounded mt-5\">\r\n            <form class=\" text-center   p-5\"  >\r\n                <h3 class=\" text-primary font-weight-bolder \" style=\"letter-spacing: 1px;\"> Thanks for signin up!</h3>\r\n                <p class=\" text-monospace grey-text\"> Cool. Your account has been actived now</p>\r\n               \r\n                 \r\n                    <a  [routerLink]=\"['/guest/login']\" ><strong>Sign in</strong></a>\r\n               \r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-for-guest',\r\n  templateUrl: './header-for-guest.component.html',\r\n  styleUrls: ['./header-for-guest.component.scss']\r\n})\r\nexport class HeaderForGuestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" [containerInside]=\"false\">\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand>\r\n        <!-- <a class=\"navbar-brand\"  [routerLink]=\"['../guest']\"> -->\r\n            <!-- test -->\r\n            <a class=\"navbar-brand\"  [routerLink]=\"['/guest']\">\r\n                <!-- test -->\r\n\r\n                <img src=\"../assets/images/logo.png\" height=\"30\" alt=\"\">\r\n        </a>\r\n    </mdb-navbar-brand>\r\n    <!-- Collapsible content -->\r\n    <links>\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\">\r\n                <a [routerLink]=\"['/guest/alljoblists']\"  class=\"nav-link waves-light\" mdbWavesEffect><strong>All Jobs</strong><span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                 <a [routerLink]=\"['/guest/login']\" class=\"nav-link waves-light\" mdbWavesEffect><strong>Sign In</strong></a> \r\n                \r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a  [routerLink]=\"['/guest/register']\" class=\"nav-link waves-light\" mdbWavesEffect><strong>Register</strong></a>\r\n            </li>\r\n            <li>\r\n                <button mdbBtn type=\"button\" size=\"md\" color=\"secondary\" rounded=\"true\" mdbWavesEffect [routerLink]=\"['/eguest']\"><strong>For\r\n                        Employer</strong></button>\r\n            </li>\r\n        </ul>\r\n        <!-- Links -->\r\n    </links>\r\n    <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n<!--/.Navbar-->"]}