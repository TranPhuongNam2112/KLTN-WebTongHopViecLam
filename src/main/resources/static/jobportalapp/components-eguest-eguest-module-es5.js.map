{"version":3,"sources":["webpack:///src/app/components/eguest/eforgot-pass/eforgot-pass.component.ts","webpack:///src/app/components/eguest/eforgot-pass/eforgot-pass.component.html","webpack:///src/app/components/eguest/eguest-dashboard/eguest-dashboard.component.ts","webpack:///src/app/components/eguest/eguest-dashboard/eguest-dashboard.component.html","webpack:///src/app/components/eguest/eguest-routing.module.ts","webpack:///src/app/components/eguest/eguest.component.ts","webpack:///src/app/components/eguest/eguest.component.html","webpack:///src/app/components/eguest/eguest.module.ts","webpack:///src/app/components/eguest/evalidate-acc/evalidate-acc.component.ts","webpack:///src/app/components/eguest/evalidate-acc/evalidate-acc.component.html","webpack:///src/app/components/employer/e-login/e-login.component.ts","webpack:///src/app/components/employer/e-login/e-login.component.html","webpack:///src/app/components/employer/e-register/e-register.component.ts","webpack:///src/app/components/employer/e-register/e-register.component.html","webpack:///src/app/shared/components/header-for-eguest/header-for-eguest.component.ts","webpack:///src/app/shared/components/header-for-eguest/header-for-eguest.component.html"],"names":["EforgotPassComponent","selector","templateUrl","styleUrls","EguestDashboardComponent","routes","path","component","children","EguestRoutingModule","forChild","imports","exports","EguestComponent","EguestModule","forRoot","declarations","EvalidateAccComponent","ELoginComponent","authService","tokenStorage","config","modalService","toastService","ngZone","loginForm","isLoggedIn","isLoginFailed","errorMessage","roles","showEmployer","socialusers","getToken","getUser","login","subscribe","data","console","warn","value","saveToken","accessToken","saveUser","err","error","message","window","location","reload","ERegisterComponent","SocialloginService","router","eregisterForm","isSuccessful","isSignUpFailed","mobNumberPattern","registerEmployer","log","HeaderForEguestComponent"],"mappings":"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","file":"components-eguest-eguest-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-eforgot-pass',\r\n  templateUrl: './eforgot-pass.component.html',\r\n  styleUrls: ['./eforgot-pass.component.scss']\r\n})\r\nexport class EforgotPassComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header-for-eguest></app-header-for-eguest>\r\n<main>\r\n    <forgot-pass></forgot-pass>\r\n</main>\r\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-eguest-dashboard',\r\n  templateUrl: './eguest-dashboard.component.html',\r\n  styleUrls: ['./eguest-dashboard.component.scss']\r\n})\r\nexport class EguestDashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <app-header-for-eguest></app-header-for-eguest> -->\r\n<section>\r\n    <!-- Full Page Intro -->\r\n    <div class=\"view jarallax\"\r\n        style=\"background-image: url('./assets/images/candidate/login.jpg'); background-repeat: no-repeat; background-size: cover; background-position: center center;\">\r\n        <!-- Mask & flexbox options-->\r\n        <div class=\"mask rgba-black-light d-flex justify-content-center align-items-center\">\r\n            <!-- Content -->\r\n            <div class=\"container\">\r\n                <!--Grid row-->\r\n                <div class=\"row\">\r\n                    <!--Grid column-->\r\n                    <div class=\"col-md-12 mb-4 white-text text-center\">\r\n                        <h5 class=\"display-3  white-text mb-0 mt-5 pt-md-5 pt-5\">Helping Your Business Move Up</h5>\r\n\r\n                        <h4 class=\"subtext-header text-light mt-2 mb-4\">get your job matched with the right candidate\r\n                        </h4>\r\n                        <br />\r\n                        <br />\r\n                        <a [routerLink]=\"['/guest/login']\" mdbBtn color=\"primary\" rounded=\"true\" mdbWavesEffect>\r\n                            <mdb-icon fas icon=\"user\" class=\"left\"></mdb-icon><strong>Sign in now!</strong>\r\n                        </a>\r\n                        <hr class=\"hr-light my-4 wow fadeInDown\" data-wow-delay=\"0.4s\">\r\n                        <br />\r\n                    </div>\r\n                    <!--Grid column-->\r\n                </div>\r\n\r\n                <!--Grid row-->\r\n            </div>\r\n            <!-- Content -->\r\n        </div>\r\n        <!-- Mask & flexbox options-->\r\n    </div>\r\n\r\n\r\n    <!-- container suitable product -->\r\n    <div class=\"container\">\r\n        <!-- Section: Testimonials v.1 -->\r\n        <section class=\"text-center my-5\">\r\n            <!-- Section heading -->\r\n            <h5 class=\"display-4 dark-grey-text mt-5  mb-5\"><strong>Our Suitable Product</strong></h5>\r\n            <!-- Section description -->\r\n            <!-- Grid row -->\r\n            <div class=\"row\">\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 mb-3 \">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"bg-function\">\r\n                        <mdb-card-body>\r\n                            <h6 class=\"white-text\">\r\n                                <mdb-icon fas icon=\"pen\" class=\"pr-2\"></mdb-icon><strong>POST A JOB</strong>\r\n                            </h6>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 mb-3\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"bg-function\">\r\n                        <mdb-card-body>\r\n                            <h6 class=\"white-text\">\r\n                                <mdb-icon fas icon=\"search\" class=\"pr-2\"></mdb-icon><strong>SEARCH RESUME</strong>\r\n                            </h6>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 mb-3\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"bg-function\">\r\n                        <mdb-card-body>\r\n                            <h6 class=\"white-text\">\r\n                                <mdb-icon fas icon=\"cogs\" class=\"pr-2\"></mdb-icon><strong>MANAGE JOBS</strong>\r\n                            </h6>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 col-sm-12 mb-3\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"bg-function\">\r\n                        <mdb-card-body>\r\n                            <h6 class=\"white-text\">\r\n                                <mdb-icon fas icon=\"user-friends\" class=\"pr-2\"></mdb-icon><strong>MANAGE PROFILE</strong>\r\n                            </h6>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n\r\n            </div>\r\n            <!-- Grid row -->\r\n\r\n        </section>\r\n        <!-- Section: Testimonials v.1 -->\r\n    </div>\r\n    <!-- container suitable product -->\r\n\r\n\r\n\r\n\r\n\r\n    <!-- container satisfy company -->\r\n    <div class=\"container\">\r\n        <!-- Section: Testimonials v.1 -->\r\n        <section class=\"text-center my-5\">\r\n           \r\n            <!-- Section heading -->\r\n            <h5 class=\"display-4  dark-grey-text mt-5 pt-4  mb-5\"><strong>Our Clients Are Satisfied</strong></h5>\r\n\r\n            <!-- Section description -->\r\n\r\n\r\n            <!-- Grid row -->\r\n            <div class=\"row\">\r\n\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-12 mb-lg-0 mb-4 \">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"testimonial-card\">\r\n                        <!--Background color-->\r\n                        <div class=\"card-up blue-gradient\">\r\n                        </div>\r\n                        <!--Avatar-->\r\n                        <div class=\"avatar mx-auto white mt-5\">\r\n                            <img src=\"./assets/images/employer/nash.png\" alt=\"fjsjk\" class=\"rounded img-fluid\">\r\n                        </div>\r\n                        <mdb-card-body>\r\n                            <!--Name-->\r\n                         \r\n                            <hr>\r\n                            <!--Quotation-->\r\n                            <p class=\"dark-grey-text mt-4 font-italic\">\r\n                                <mdb-icon fas icon=\"quote-left\" class=\"pr-2\"></mdb-icon>Sự quan tâm tận tình của\r\n                                easyJobs thật sự rất khác biệt\r\n                            </p>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 mb-md-0 mb-4\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"testimonial-card\">\r\n                        <!--Background color-->\r\n                        <div class=\"card-up blue-gradient\">\r\n                        </div>\r\n                        <!--Avatar-->\r\n                        <div class=\"avatar mx-auto white mt-5\">\r\n                            <img src=\"./assets/images/employer/cmc.jpg\" class=\" rounded img-fluid\">\r\n                        </div>\r\n                        <mdb-card-body>\r\n                            <!--Name-->\r\n                           \r\n                            <hr>\r\n                            <!--Quotation-->\r\n                            <p class=\"dark-grey-text mt-4 font-italic\">\r\n                                <mdb-icon fas icon=\"quote-left\" class=\"pr-2\"></mdb-icon>Sự hài hòng làm chúng tôi tin easyJobs nhiều hơn\r\n                            </p>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6 mb-md-0 mb-4\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"testimonial-card\">\r\n                        <!--Background color-->\r\n                        <div class=\"card-up blue-gradient\">\r\n                        </div>\r\n                        <!--Avatar-->\r\n                        <div class=\"avatar mx-auto white mt-5\">\r\n                            <img src=\"./assets/images/employer/misa.jpg\" class=\" rounded img-fluid\">\r\n                        </div>\r\n                        <mdb-card-body>\r\n                            <!--Name-->\r\n                         \r\n                            <hr>\r\n                            <!--Quotation-->\r\n                            <p class=\"dark-grey-text mt-4 font-italic\">\r\n                                <mdb-icon fas icon=\"quote-left\" class=\"pr-2\"></mdb-icon>Chúng tôi đã tuyển\r\n                                được những chuyên gia giỏi nhất\r\n                            </p>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-6\">\r\n                    <!--Card-->\r\n                    <mdb-card class=\"testimonial-card\">\r\n                        <!--Background color-->\r\n                        <div class=\"card-up indigo\"></div>\r\n                        <!--Avatar-->\r\n                        <div class=\"avatar mx-auto white mt-5\">\r\n                            <img src=\"./assets/images/employer/fpt.png\" class=\"rounded img-fluid\">\r\n                        </div>\r\n                        <mdb-card-body>\r\n                          \r\n                            <hr>\r\n                            <!--Quotation-->\r\n                            <p class=\"dark-grey-text mt-4 font-italic\">\r\n                                <mdb-icon fas icon=\"quote-left\" class=\"pr-2\"></mdb-icon>easyJobs tư vấn rất chu đáo,\r\n                                nhiệt tình và đáng tin cậy\r\n                            </p>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--Card-->\r\n                </div>\r\n                <!--Grid column-->\r\n\r\n            </div>\r\n            <!-- Grid row -->\r\n\r\n        </section>\r\n        <!-- Section: Testimonials v.1 -->\r\n    </div>\r\n    <!-- container satisfy company -->\r\n    <!-- Full Page Intro -->\r\n</section>\r\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EguestComponent } from './eguest.component';\r\n\r\nimport {EguestDashboardComponent } from './eguest-dashboard/eguest-dashboard.component';\r\nimport { ELoginComponent} from '../employer/e-login/e-login.component';\r\nimport { ERegisterComponent} from '../employer/e-register/e-register.component';\r\nimport { EforgotPassComponent} from '../eguest/eforgot-pass/eforgot-pass.component';\r\nimport {EvalidateAccComponent } from './evalidate-acc/evalidate-acc.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EguestComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: EguestDashboardComponent\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: ELoginComponent\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: ERegisterComponent\r\n      },\r\n      {\r\n        path: 'forgot-pass',\r\n        component: EforgotPassComponent\r\n      },\r\n      {\r\n        path: 'validate',\r\n        component: EvalidateAccComponent\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EguestRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-eguest',\r\n  templateUrl: './eguest.component.html',\r\n  styleUrls: ['./eguest.component.scss']\r\n})\r\nexport class EguestComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  \r\n}\r\n","<app-header-for-eguest></app-header-for-eguest>\r\n    <router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { EguestRoutingModule } from './eguest-routing.module';\r\nimport { EguestComponent } from './eguest.component';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { HeaderForEguestComponent } from '../../shared/components/header-for-eguest/header-for-eguest.component';\r\nimport { EguestDashboardComponent } from './eguest-dashboard/eguest-dashboard.component';\r\nimport { ELoginComponent} from '../employer/e-login/e-login.component';\r\nimport { ERegisterComponent} from '../employer/e-register/e-register.component';\r\nimport { EforgotPassComponent } from './eforgot-pass/eforgot-pass.component';\r\nimport { EvalidateAccComponent } from './evalidate-acc/evalidate-acc.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EguestComponent,\r\n    HeaderForEguestComponent,\r\n    EguestDashboardComponent,\r\n    ELoginComponent,\r\n    ERegisterComponent,\r\n    EforgotPassComponent,\r\n    EvalidateAccComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule.forRoot(),\r\n    EguestRoutingModule\r\n  ]\r\n})\r\nexport class EguestModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-evalidate-acc',\r\n  templateUrl: './evalidate-acc.component.html',\r\n  styleUrls: ['./evalidate-acc.component.scss']\r\n})\r\nexport class EvalidateAccComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-header-for-eguest></app-header-for-eguest>\r\n<main>\r\n    <share-validate-acc></share-validate-acc>\r\n</main>\r\n<app-footer></app-footer>","import { Component, OnInit, NgZone} from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\nimport { _AuthService } from '../../../shared/services/auth.service';\r\nimport { TokenStorageService } from '../../../shared/services/token-storage.service';\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';\r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { Socialusers } from '../../../_models/socialusers'\r\nimport { SocialloginService } from '../../../_services/sociallogin.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n//toast\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n@Component({\r\n  selector: 'app-e-login',\r\n  templateUrl: './e-login.component.html',\r\n  styleUrls: ['./e-login.component.scss']\r\n})\r\nexport class ELoginComponent implements OnInit {\r\n  loginForm: any = {};\r\n    isLoggedIn = false;\r\n    isLoginFailed = false;\r\n    errorMessage = '';\r\n     roles: string[] = [];\r\n     showEmployer = false;\r\n       //social login start\r\n       response;\r\n       socialusers = new Socialusers();\r\n       //social login end\r\n\r\n  constructor(\r\n    private authService: _AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    //  social login start\r\n    // public OAuth: AuthService,\r\n    // private SocialloginService: SocialloginService,\r\n    // private router: Router,\r\n    //  social login end\r\n      //toast\r\n      config: NgbModalConfig, private modalService: NgbModal,\r\n      public toastService: ToastService,\r\n      private ngZone: NgZone \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n  onSubmit() {\r\n    this.authService.login(this.loginForm).subscribe(\r\n      data => {\r\n        console.warn(\"Bearer\" + this.loginForm.value);\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveUser(data);\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        // this.reloadPage();\r\n        console.warn(\"Bearer\" + this.loginForm.value);\r\n      },\r\n      err => {\r\n         this.errorMessage = err.error.message;\r\n       // this.errorMessage = \"Error email or password\";\r\n        this.isLoginFailed = true;\r\n\r\n      }\r\n    );\r\n    console.warn(this.loginForm.value);\r\n  }\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n  //social login start\r\n  // public socialSignIn(socialProvider: string,dangerTpl,successTpl) {\r\n  //   let socialPlatformProvider;\r\n  //   if (socialProvider === 'facebook') {\r\n  //     socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n  //   } else if (socialProvider === 'google') {\r\n  //     socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n  //   }\r\n  //   this.OAuth.signIn(socialPlatformProvider).then(socialusers => {\r\n  //     console.log(socialProvider, socialusers);\r\n  //     console.log(socialusers);\r\n  //     if (socialProvider === 'facebook') {\r\n  //       this.SavesresponseFB(socialusers,dangerTpl,successTpl);\r\n  //     } else if (socialProvider === 'google') {\r\n  //       this.SavesresponseGG(socialusers,dangerTpl,successTpl);\r\n  //     }\r\n     \r\n  //   });\r\n  // }\r\n  // SavesresponseGG(socialusers: Socialusers,dangerTpl,successTpl) {\r\n  //   this.SocialloginService.loginGoogleEmployer(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //    this.router.navigate(['/employer']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //  //this.errorMessage = err.message;\r\n  //  this.errorMessage=\"Are you candidate? Look like you are loging in as candidate user. Click here \";\r\n  //  this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  // SavesresponseFB(socialusers: Socialusers,dangerTpl,successTpl) {\r\n  //   this.SocialloginService.loginFacebookEmployer(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //    this.router.navigate(['/employer']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //  //this.errorMessage = err.message;\r\n  //  this.errorMessage=\"Are you candidate? Look like you are loging in as canddidate user. Click here \";\r\n  //  this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  //social login end\r\n}\r\n","<!-- Full Page Login -->\r\n<div class=\"view\">\r\n    <!-- Mask & flexbox options-->\r\n    <div class=\"mask rgba-blue-grey-strong d-flex justify-content-center align-items-center\">\r\n        <!-- Content -->\r\n        <div class=\"container mb-5\">\r\n            <!--Grid row-->\r\n            <div class=\"row pt-lg-5 mt-lg-5\">\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 mb-5 mt-md-0 mt-5 white-text text-center text-md-left wow fadeInLeft\"\r\n                    data-wow-delay=\"0.3s\">\r\n                    <h1 class=\"display-4 font-weight-bold\">Helping Your Business Move Up</h1>\r\n                    <hr class=\"hr-light\">\r\n                    <h6 class=\"mb-3\">get your job matched with the right candidate .</h6>\r\n                    <!-- <a mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect [routerLink]=\"['../']\">Learn more</a> -->\r\n                    <a mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect>Learn more</a>\r\n                </div>\r\n                <!--Grid column-->\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 col-xl-5 mb-4\">\r\n                    <!--Form-->\r\n                    <mdb-card class=\"wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                        <mdb-card-body class=\"z-depth-2\">\r\n                            <form *ngIf=\"!isLoggedIn\" name=\"loginForm\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n                                #f=\"ngForm\" novalidate>\r\n                                <div class=\"text-center\">\r\n                                    <h3 class=\"blue-text\">\r\n                                        <strong>Sign in</strong>\r\n                                    </h3>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <!-- <div class=\"row d-flex justify-content-center\">\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                      \r\n                                        <button type=\"button\" mdbBtn size=\"lg\" color=\"fb\" class=\"btn btn-indigo\"\r\n                                            mdbWavesEffect\r\n                                            (click)=\"socialSignIn('facebook',dangerTpl,successTpl)\"\r\n                                            > <span>Facebook</span></button>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                            (click)=\"socialSignIn('google',dangerTpl,successTpl)\"\r\n                                            > Google\r\n                                        </button>\r\n                                    </div>\r\n                                </div> -->\r\n                                <!-- <div\r\n                                    style=\"width: 100%; height: 20px; border-bottom: 1px ridge ; text-align: center; margin-bottom: 20px;\">\r\n                                    <span style=\"font-size: 14px; background-color: #ffffff; padding: 0 10px;\">\r\n                                        or\r\n                                    </span>\r\n                                </div> -->\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"loginForm.email\"\r\n                                        required email #email=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && email.invalid\">\r\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"email.errors.email\">Email must be a valid email address</div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                                        [(ngModel)]=\"loginForm.password\" required minlength=\"8\" #password=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\"\r\n                                        *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            Password must be at least 8 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    <a [routerLink]=\"['../forgot-pass']\" class=\"text-primary\">Forgot password?</a>\r\n                                </div>\r\n                                <div class=\"text-center mt-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button class=\"btn btn-primary btn-block\">\r\n                                            Sign in\r\n                                        </button>\r\n                                    </div>\r\n                                    <!-- Register -->\r\n                                    <!-- <p>Don't have an accout yet? -->\r\n                                    <!-- <a [routerLink]=\"['../register']\"><strong>Register now!</strong></a> -->\r\n                                    <!-- <a><strong>Register now!</strong></a>\r\n                                    </p> -->\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\r\n                                        Login failed: {{ errorMessage }}\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                            <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n                                <!-- Logged in as {{ roles }}. -->\r\n                                Login successful!\r\n                            </div>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--/.Form-->\r\n                </div>\r\n                <!--Grid column-->\r\n            </div>\r\n            <!--Grid row-->\r\n            <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n        </div>\r\n        <!-- Content -->\r\n    </div>\r\n    <!-- Mask & flexbox options-->\r\n</div>\r\n<!-- Full Page Login -->\r\n<ng-template #successTpl>\r\n    <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span>\r\n</ng-template>\r\n<ng-template #dangerTpl >\r\n    <span><i class=\"fa fa-exclamation-triangle fa-lg mr-3\" aria-hidden=\"true\"></i>{{ errorMessage }}<i class=\"fas fa-arrow-up\"></i></span>\r\n</ng-template>","import { Component, OnInit , NgZone} from '@angular/core';\r\nimport { _AuthService } from '../../../shared/services/auth.service';\r\nimport { TokenStorageService } from '../../../shared/services/token-storage.service';\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';\r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { Socialusers } from '../../../_models/socialusers'\r\nimport { SocialloginService } from '../../../_services/sociallogin.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n//toast\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n@Component({\r\n  selector: 'app-e-register',\r\n  templateUrl: './e-register.component.html',\r\n  styleUrls: ['./e-register.component.scss']\r\n})\r\nexport class ERegisterComponent implements OnInit {\r\n  eregisterForm: any = {};\r\n  isSuccessful = false;\r\n  isSignUpFailed = false;\r\n  errorMessage = '';\r\n  mobNumberPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\r\n\r\n  //social login start\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  roles: string[] = [];\r\n  showEmployer = false;\r\n  response;\r\n  socialusers = new Socialusers();\r\n  //social login end\r\n  constructor(\r\n    private authService: _AuthService,\r\n   //  social login start\r\n    private tokenStorage: TokenStorageService,   \r\n    // public OAuth: AuthService,\r\n    private SocialloginService: SocialloginService,\r\n    private router: Router,\r\n    //  social login end\r\n     //toast\r\n     config: NgbModalConfig, private modalService: NgbModal,\r\n     public toastService: ToastService,\r\n     private ngZone: NgZone \r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.eregisterForm.role = \"employer\";\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.authService.registerEmployer(this.eregisterForm).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.isSuccessful = true;\r\n        this.isSignUpFailed = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isSignUpFailed = true;\r\n      }\r\n    );\r\n  }\r\n   //social login start\r\n  //  public socialSignIn(socialProvider: string,dangerTpl,successTpl) {\r\n  //   let socialPlatformProvider;\r\n  //   if (socialProvider === 'facebook') {\r\n  //     socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\r\n  //   } else if (socialProvider === 'google') {\r\n  //     socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n  //   }\r\n  //   this.OAuth.signIn(socialPlatformProvider).then(socialusers => {\r\n  //     console.log(socialProvider, socialusers);\r\n  //     console.log(socialusers);\r\n  //     if (socialProvider === 'facebook') {\r\n  //       this.SavesresponseFB(socialusers,dangerTpl,successTpl);\r\n  //     } else if (socialProvider === 'google') {\r\n  //       this.SavesresponseGG(socialusers,dangerTpl,successTpl);\r\n  //     }\r\n  //   });\r\n  // }\r\n  // SavesresponseGG(socialusers: Socialusers,dangerTpl,successTpl) {\r\n  //   this.SocialloginService.loginGoogleEmployer(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //    this.router.navigate(['/employer']);\r\n  //   }, err => {\r\n  //    // this.errorMessage = err.error.message;\r\n  //    this.errorMessage=\"Are you candiate? Look like you are loging in as candidate user. Click here \";\r\n  //    this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  // SavesresponseFB(socialusers: Socialusers,dangerTpl,successTpl) {\r\n  //   this.SocialloginService.loginFacebookEmployer(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n\r\n  //     this.tokenStorage.saveToken(res.accessToken);\r\n  //     this.tokenStorage.saveUser(res);\r\n  //     this.isLoginFailed = false;\r\n  //     this.isLoggedIn = true;\r\n  //     console.log(this.roles);\r\n  //     this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n  //    this.router.navigate(['/employer']);\r\n  //   }, err => {\r\n  //     // this.errorMessage = err.error.message;\r\n  //  //this.errorMessage = err.message;\r\n  //  this.errorMessage=\"Are you candidate? Look like you are loging in as candidate user. Click here \";\r\n  //  this.toastService.show(dangerTpl, { classname: 'bg-warning text-light font-weight-bolder text-monospace mt-5', delay: 6000 });\r\n  //   }\r\n  //   )\r\n  // }\r\n  //social login end\r\n}\r\n","<!-- <app-header-for-eguest></app-header-for-eguest> -->\r\n<!-- Navbar -->\r\n<!-- Full Page Intro -->\r\n<div class=\"login\">\r\n    <!-- Mask & flexbox options-->\r\n    <div class=\"mask rgba-blue-grey-strong d-flex justify-content-center align-items-center\">\r\n        <!-- Content -->\r\n        <div class=\"container mb-5\">\r\n            <!--Grid row-->\r\n            <div class=\"row pt-3\">\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-3 col-md-1 col-sm-1\">\r\n                </div>\r\n                <!--Grid column-->\r\n                <!--Grid column-->\r\n                <div class=\"col-lg-6 col-md-10 col-sm-10 \">\r\n                    <!--Form-->\r\n                    <mdb-card class=\"wow fadeInRight \" data-wow-delay=\"0.3s\">\r\n\r\n                        <mdb-card-body class=\"z-depth-2 \">\r\n                            <form *ngIf=\"!isSuccessful\" name=\"eregisterForm\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n                                #f=\"ngForm\" novalidate>\r\n                                <!--Header-->\r\n                                <div class=\"text-center\">\r\n                                    <h3 class=\"blue-text\">\r\n                                        <strong>Register</strong>\r\n                                    </h3>\r\n                                    <hr>\r\n                                </div>\r\n\r\n                                <!-- <div class=\"row d-flex justify-content-center\">\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                      \r\n                                        <button type=\"button\" mdbBtn size=\"lg\" color=\"fb\" class=\"btn btn-indigo\"\r\n                                            mdbWavesEffect\r\n                                            (click)=\"socialSignIn('facebook',dangerTpl,successTpl)\"\r\n                                            > <span>Facebook</span></button>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                            (click)=\"socialSignIn('google',dangerTpl,successTpl)\"\r\n                                            >\r\n                                            Google\r\n                                        </button>\r\n                                    </div>\r\n                                </div> -->\r\n                                <!-- <div\r\n                                    style=\"width: 100%; height: 20px; border-bottom: 1px ridge ; text-align: center; margin-bottom: 20px;\">\r\n                                    <span style=\"font-size: 14px; background-color: #ffffff; padding: 0 10px;\">\r\n                                        or\r\n                                    </span>\r\n                                </div> -->\r\n                                <!--Body-->\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"name\">Legal Representative Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"eregisterForm.name\"\r\n                                        required minlength=\"3\" maxlength=\"20\" #name=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && name.invalid\">\r\n                                        <div *ngIf=\"name.errors.required\">Name is required</div>\r\n                                        <div *ngIf=\"name.errors.minlength\">\r\n                                            Name must be at least 3 characters\r\n                                        </div>\r\n                                        <div *ngIf=\"name.errors.maxlength\">\r\n                                            Name must be at most 20 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"email\" class=\"form-control\" name=\"email\"\r\n                                        [(ngModel)]=\"eregisterForm.email\" required email #email=\"ngModel\" />\r\n\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && email.invalid\">\r\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"email.errors.email\">\r\n                                            Email must be a valid email address\r\n                                        </div>\r\n                                    </div>\r\n                                    <small id=\"emailHelp2\" class=\"form-text text-success\">We'll never share your email\r\n                                        with anyone.</small>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"companyname\">Company Name</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"companyname\"\r\n                                        [(ngModel)]=\"eregisterForm.companyname\" required minlength=\"3\" maxlength=\"30\"\r\n                                        #companyname=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && companyname.invalid\">\r\n                                        <div *ngIf=\"companyname.errors.required\">Company Name is required</div>\r\n                                        <div *ngIf=\"companyname.errors.minlength\">\r\n                                            Company name must be at least 3 characters\r\n                                        </div>\r\n                                        <div *ngIf=\"companyname.errors.maxlength\">\r\n                                            Company name must be at most 30 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"industry\">Industry</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"industry\"\r\n                                        [(ngModel)]=\"eregisterForm.industry\" required minlength=\"3\" maxlength=\"30\"\r\n                                        #industry=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && industry.invalid\">\r\n                                        <div *ngIf=\"industry.errors.required\">Industry is required</div>\r\n                                        <div *ngIf=\"industry.errors.minlength\">\r\n                                            Industry must be at least 3 characters\r\n                                        </div>\r\n                                        <div *ngIf=\"industry.errors.maxlength\">\r\n                                            Industry must be at most 30 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"phonenumber\">Phone</label>\r\n                                    <input type=\"tel\" class=\"form-control\" name=\"phonenumber\"\r\n                                        [(ngModel)]=\"eregisterForm.phonenumber\" [pattern]=\"mobNumberPattern\" required\r\n                                        maxlength=\"10\" #phonenumber=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && phonenumber.invalid\">\r\n                                        <div *ngIf=\"phonenumber.errors.required\">Phone is required</div>\r\n                                        <div *ngIf=\"phonenumber.errors.pattern\">\r\n                                            Invalid phone number\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <small id=\"optional\" class=\"ml-2  text-success\">(at least 6 characters)</small>\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                                        [(ngModel)]=\"eregisterForm.password\" required minlength=\"6\"\r\n                                        #password=\"ngModel\" />\r\n                                    <div class=\"alert-danger\" *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            Password must be at least 6 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <input type=\"text\" class=\"form-control\" name=\"role\" [(ngModel)]=\"eregisterForm.role\"\r\n                                        required #role=\"ngModel\" disabled style=\"display: none;\" />\r\n                                </div>\r\n\r\n\r\n                                <div class=\"text-center mt-3\">\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <button mdbBtn color=\"primary\" outline=\"true\" rounded=\"true\" block=\"true\"\r\n                                            class=\"my-4 waves-effect z-depth-0\"\r\n                                            mdbWavesEffect><strong>Register</strong></button>\r\n                                    </div>\r\n\r\n                                    <!-- Register -->\r\n                                    <!-- <h6>Already have account?\r\n                                        <a [routerLink]=\"['../login']\"><strong>Sign in</strong></a>\r\n                                    </h6> -->\r\n                                </div>\r\n                                <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n                                    Signup failed!<br />{{ errorMessage }}\r\n                                </div>\r\n                            </form>\r\n                          \r\n                            <div class=\"alert alert-success mt-3 text-center\" *ngIf=\"isSuccessful\">\r\n                                Signup successfully.\r\n                                <a [routerLink]=\"['/guest/login']\" target=\"_blank\"><strong>Sign In</strong></a>\r\n                                <!-- Please check your mail to validate your account.<br />\r\n                                <a [href]=\"'https://mail.google.com/mail/'\" target=\"_blank\"><strong>Go to\r\n                                        gmail</strong></a> -->\r\n                            </div>\r\n                       \r\n\r\n                        </mdb-card-body>\r\n\r\n                    </mdb-card>\r\n                    <!--/.Form-->\r\n                </div>\r\n                <!--Grid column-->\r\n            </div>\r\n            <!--Grid row-->\r\n            <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n        </div>\r\n        <!-- Content -->\r\n    </div>\r\n    <!-- Mask & flexbox options-->\r\n</div>\r\n<ng-template #successTpl>\r\n    <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span>\r\n</ng-template>\r\n<ng-template #dangerTpl >\r\n    <span><i class=\"fa fa-exclamation-triangle fa-lg mr-3\" aria-hidden=\"true\"></i>{{ errorMessage }}<i class=\"fas fa-arrow-up\"></i></span>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header-for-eguest',\r\n  templateUrl: './header-for-eguest.component.html',\r\n  styleUrls: ['./header-for-eguest.component.scss']\r\n})\r\nexport class HeaderForEguestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--Navbar-->\r\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" [containerInside]=\"false\">\r\n    <!-- Navbar brand -->\r\n    <mdb-navbar-brand>\r\n        <a class=\"navbar-brand\" [routerLink]=\"['/eguest']\">\r\n            <img src=\"../assets/images/logo.png\" height=\"30\" alt=\"\">\r\n        </a>\r\n    </mdb-navbar-brand>\r\n    <!-- Collapsible content -->\r\n    <links>\r\n        <!-- Links -->\r\n        <ul class=\"navbar-nav ml-auto\">\r\n            \r\n            <li class=\"nav-item\">\r\n                 <a  [routerLink]=\"['/guest/login']\" class=\"nav-link waves-light\" mdbWavesEffect><strong>Sign In</strong></a> \r\n                \r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a [routerLink]=\"['/eguest/register']\"  class=\"nav-link waves-light\" mdbWavesEffect><strong>Register</strong></a>\r\n            </li>\r\n            <li>\r\n                <button mdbBtn type=\"button\" size=\"md\" color=\"secondary\" rounded=\"true\" mdbWavesEffect [routerLink]=\"['/guest']\"><strong>Jobseeker's Site</strong></button>\r\n            </li>\r\n        </ul>\r\n        <!-- Links -->\r\n    </links>\r\n    <!-- Collapsible content -->\r\n\r\n</mdb-navbar>\r\n<!--/.Navbar-->"]}