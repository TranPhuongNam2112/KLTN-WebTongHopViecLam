{"version":3,"sources":["webpack:///src/app/_models/jobType.ts","webpack:///src/app/_services/admin/employer.service.ts","webpack:///src/app/_services/admin/job-location.service.ts","webpack:///src/app/_services/admin/job-post.service.ts","webpack:///src/app/_services/admin/job-type.service.ts","webpack:///src/app/_services/admin/manage-user.service.ts","webpack:///src/app/components/admin/admin-routing.module.ts","webpack:///src/app/components/admin/admin.component.ts","webpack:///src/app/components/admin/admin.component.html","webpack:///src/app/components/admin/admin.module.ts","webpack:///src/app/components/admin/create-jobtype/create-jobtype.component.ts","webpack:///src/app/components/admin/create-jobtype/create-jobtype.component.html","webpack:///src/app/components/admin/header-for-admin/header-for-admin.component.ts","webpack:///src/app/components/admin/header-for-admin/header-for-admin.component.html","webpack:///src/app/components/admin/manage-account/manage-account.component.ts","webpack:///src/app/components/admin/manage-account/manage-account.component.html","webpack:///src/app/components/admin/manage-account/service/account.service.ts","webpack:///src/app/components/admin/manage-candidate/candidate-detail/candidate-detail.component.ts","webpack:///src/app/components/admin/manage-candidate/candidate-detail/candidate-detail.component.html","webpack:///src/app/components/admin/manage-candidate/manage-candidate.component.ts","webpack:///src/app/components/admin/manage-candidate/manage-candidate.component.html","webpack:///src/app/components/admin/manage-candidate/service/candidate.service.ts","webpack:///src/app/components/admin/manage-employer/employer-detail/employer-detail.component.ts","webpack:///src/app/components/admin/manage-employer/employer-detail/employer-detail.component.html","webpack:///src/app/components/admin/manage-employer/manage-employer.component.ts","webpack:///src/app/components/admin/manage-employer/manage-employer.component.html","webpack:///src/app/components/admin/manage-job-post/jobpost-detail/jobpost-detail.component.ts","webpack:///src/app/components/admin/manage-job-post/jobpost-detail/jobpost-detail.component.html","webpack:///src/app/components/admin/manage-job-post/manage-job-post.component.ts","webpack:///src/app/components/admin/manage-job-post/manage-job-post.component.html","webpack:///src/app/components/admin/manage-joblocation/manage-joblocation.component.ts","webpack:///src/app/components/admin/manage-joblocation/manage-joblocation.component.html","webpack:///src/app/components/admin/manage-jobtype/manage-jobtype.component.ts","webpack:///src/app/components/admin/manage-jobtype/manage-jobtype.component.html","webpack:///src/app/components/admin/manage-user/manage-user.component.ts","webpack:///src/app/components/admin/manage-user/manage-user.component.html","webpack:///src/app/components/admin/update-jobtype/update-jobtype.component.ts","webpack:///src/app/components/admin/update-jobtype/update-jobtype.component.html"],"names":["JobType","EmployerService","http","gettAllEmployerURL","detailurl","pageNo","get","id","providedIn","JobLocationService","url","JobPostService","deleteurl","responseType","JobTypeService","createurl","updateurl","getbyIdurl","jobType","post","value","put","ManageUserService","routes","path","component","children","redirectTo","pathMatch","AdminRoutingModule","forChild","imports","exports","AdminComponent","router","tokenStorageService","isLoggedIn","showAdmin","getToken","user","getUser","roles","includes","navigate","selector","templateUrl","styleUrls","AdminModule","forRoot","declarations","providers","CreateJobtypeComponent","jobTypeService","config","modalService","toastService","submitted","dangerTpl","successTpl","createJobType","subscribe","data","console","log","show","classname","delay","error","gotoList","save","onSubmit","HeaderForAdminComponent","signOut","then","window","location","reload","logout","ManageAccountComponent","accountService","i","event","preventDefault","getAccounts","accounts","pages","Array","message","AccountService","CandidateDetailComponent","route","candidateService","active","snapshot","params","getCandidatebyId","candidate","ManageCandidateComponent","getCandidates","candidates","CandidateService","EmployerDetailComponent","employerService","getEmployerId","employer","ManageEmployerComponent","getAllEmployers","gettAllEmployer","employers","JobpostDetailComponent","jobPostService","getJobPostId","jobPost","ManageJobPostComponent","backdrop","keyboard","getJobPosts","jobPosts","content","open","deleteEmployee","ManageJoblocationComponent","jobLocationService","getJobLocations","jobLocations","ManageJobtypeComponent","ngZone","reloadData","getAllJobTypeList","run","jobTypes","deleteJobType","ManageUserComponent","userService","getUsers","users","UpdateJobtypeComponent","getJobTypeId","updateJobType","update"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAAaA,O;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,e;AAIX,+BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA,CAAkB,CAHtC;;AACQ,aAAAC,kBAAA,GAAqB,2CAArB;AACA,aAAAC,SAAA,GAAU,2CAAV;AACiC;;;;wCACxBC,M,EAAc;AAE9B,iBAAO,KAAKH,IAAL,CAAUI,GAAV,CAAc,UAAG,KAAKH,kBAAR,IAA6B,UAA7B,GAAwCE,MAAtD,CAAP;AACA;;;sCACaE,E,EAAU;AACtB,iBAAO,KAAKL,IAAL,CAAUI,GAAV,WAAiB,KAAKF,SAAtB,cAAmCG,EAAnC,EAAP;AACD;;;;;;;uBAXUN,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVO,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACN5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,kB;AAEX,kCAAoBP,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAQ,GAAA,GAAM,iDAAN;AACiC;;;;wCACxBL,M,EAAc;AAE9B,iBAAO,KAAKH,IAAL,CAAUI,GAAV,CAAc,UAAG,KAAKI,GAAR,IAAc,UAAd,GAAyBL,MAAvC,CAAP;AACA;;;;;;;uBANUI,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVD,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaG,c;AAIX,8BAAoBT,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHZ,aAAAQ,GAAA,GAAM,gDAAN;AACA,aAAAN,SAAA,GAAU,gDAAV;AACA,aAAAQ,SAAA,GAAU,+CAAV;AACiC;;;;oCAC5BP,M,EAAc;AAE1B,iBAAO,KAAKH,IAAL,CAAUI,GAAV,CAAc,UAAG,KAAKI,GAAR,IAAc,UAAd,GAAyBL,MAAvC,CAAP;AACA;;;qCACYE,E,EAAU;AACrB,iBAAO,KAAKL,IAAL,CAAUI,GAAV,WAAiB,KAAKF,SAAtB,cAAmCG,EAAnC,EAAP;AACD;;;uCACcA,E,EAAU;AACvB,iBAAO,KAAKL,IAAL,qBAAoB,KAAKU,SAAzB,cAAsCL,EAAtC,GAA4C;AAAEM,wBAAY,EAAE;AAAhB,WAA5C,CAAP;AACD;;;;;;;uBAdUF,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVH,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACN3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaM,c;AAMX,8BAAoBZ,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AALZ,aAAAQ,GAAA,GAAM,gDAAN;AACA,aAAAE,SAAA,GAAU,+CAAV;AACA,aAAAG,SAAA,GAAU,+CAAV;AACA,aAAAC,SAAA,GAAU,+CAAV;AACA,aAAAC,UAAA,GAAW,4CAAX;AACiC;;;;4CACxB;AACf,iBAAO,KAAKf,IAAL,CAAUI,GAAV,WAAiB,KAAKI,GAAtB,EAAP;AACD;;;sCACaH,E,EAAU;AACtB,iBAAO,KAAKL,IAAL,qBAAoB,KAAKU,SAAzB,cAAsCL,EAAtC,GAA4C;AAAEM,wBAAY,EAAE;AAAhB,WAA5C,CAAP;AACD;;;sCACaK,O,EAAe;AAC3B,iBAAO,KAAKhB,IAAL,CAAUiB,IAAV,WAAkB,KAAKJ,SAAvB,GAAoCG,OAApC,CAAP;AACD;;;sCACaX,E,EAAYa,K,EAAU;AAClC,iBAAO,KAAKlB,IAAL,CAAUmB,GAAV,WAAiB,KAAKL,SAAtB,cAAmCT,EAAnC,GAAyCa,KAAzC,CAAP;AACD;;;qCACYb,E,EAAU;AACrB,iBAAO,KAAKL,IAAL,CAAUI,GAAV,WAAiB,KAAKW,UAAtB,cAAoCV,EAApC,EAAP;AACD;;;;;;;uBArBUO,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVN,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACN3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKac,iB;AAEX,iCAAoBpB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAQ,GAAA,GAAM,iCAAN;AACiC;;;;iCAC/BL,M,EAAc;AAEvB,iBAAO,KAAKH,IAAL,CAAUI,GAAV,CAAc,UAAG,KAAKI,GAAR,IAAc,UAAd,GAAyBL,MAAvC,CAAP;AACA;;;;;;;uBANUiB,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVd,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMe,MAAM,GAAW,CACrB;AAACC,UAAI,EAAE,EAAP;AACAC,eAAS,EAAE,+DADX;AAEAC,cAAQ,EAAE,CACR;AACEF,YAAI,EAAE,EADR;AAEEG,kBAAU,EAAE,MAFd;AAEsBC,iBAAS,EAAE;AAFjC,OADQ,EAKR;AACEJ,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE;AAFb,OALQ,EASR;AACED,YAAI,EAAE,SADR;AAEEC,iBAAS,EAAE;AAFb,OATQ,EAaR;AACED,YAAI,EAAE,WADR;AAEEC,iBAAS,EAAE;AAFb,OAbQ,EAiBR;AACED,YAAI,EAAE,UADR;AAEEC,iBAAS,EAAE;AAFb,OAjBQ,EAqBR;AACED,YAAI,EAAE,sBADR;AAEEC,iBAAS,EAAE;AAFb,OArBQ,EAyBR;AACED,YAAI,EAAE,qBADR;AAEEC,iBAAS,EAAE;AAFb,OAzBQ,EA6BR;AACED,YAAI,EAAE,SADR;AAEEC,iBAAS,EAAE;AAFb,OA7BQ,EAiCR;AACED,YAAI,EAAE,oBADR;AAEEC,iBAAS,EAAE;AAFb,OAjCQ,EAqCR;AACED,YAAI,EAAE,aADR;AAEEC,iBAAS,EAAE;AAFb,OArCQ,EAyCR;AACED,YAAI,EAAE,SADR;AAEEC,iBAAS,EAAE;AAFb,OAzCQ,EA6CR;AACED,YAAI,EAAE,eADR;AAEEC,iBAAS,EAAE;AAFb,OA7CQ,EAiDR;AACED,YAAI,EAAE,mBADR;AAEEC,iBAAS,EAAE;AAFb,OAjDQ;AAFV,KADqB,CAAvB;;QAgEaI,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,gBAHpB,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CAGoB,EAFnB,4DAEmB;;;;0HAAlBM,kB,EAAkB;AAAA;AAAA,kBAFnB,4DAEmB;AAAA,O;AAFP,K;;;;;sEAEXA,kB,EAAkB;cAJ9B,sDAI8B;eAJrB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERS,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIqB,Q;;;;;;;;;;;;;;;;;;AC/E/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIA;;AACI;;AACJ;;;;QDEaC,c;AAIX,8BAAoBC,MAApB,EAA4CC,mBAA5C,EAAsF;AAAA;;AAAlE,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,mBAAA,GAAAA,mBAAA;AAF5C,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,SAAA,GAAY,KAAZ;AACyF,O,CACzF;;;;;mCACQ;AACN,eAAKD,UAAL,GAAkB,CAAC,CAAC,KAAKD,mBAAL,CAAyBG,QAAzB,EAApB;;AAEA,cAAI,KAAKF,UAAT,EAAqB;AACnB,gBAAMG,IAAI,GAAG,KAAKJ,mBAAL,CAAyBK,OAAzB,EAAb;AACA,iBAAKC,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,iBAAKJ,SAAL,GAAiB,KAAKI,KAAL,CAAWC,QAAX,CAAoB,YAApB,CAAjB;AACD;;AACD,cAAI,KAAKL,SAAT,EAAoB;AAClB,iBAAKH,MAAL,CAAYS,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AACF;;;;;;;uBAjBUV,c,EAAc,uH,EAAA,2J;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,2B;AAAA;AAAA;ACJ3B;;AAGA;;AAAM;;AAA+B;;;;AAH7B;;;;;;;;;sEDIKA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTW,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AER3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uE,CAEA;AAaA;;;QAgCaC,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,iBAFX,CAAC,sFAAD,C;AAAgB,gBANlB,CACP,4DADO,EAEP,mEAAaC,OAAb,EAFO,EAGP,wEAHO,CAMkB;;;;0HAEhBD,W,EAAW;AAAA,uBAxBpB,+DAwBoB,EAvBpB,oGAuBoB,EAtBpB,+FAsBoB,EArBpB,qGAqBoB,EApBpB,sHAoBoB,EAnBpB,mGAmBoB,EAlBpB,mHAkBoB,EAjBpB,kGAiBoB,EAhBpB,gHAgBoB,EAfpB;AACA,oHAcoB,EAbpB,gGAaoB,EAZpB,gGAYoB,EAXpB,gGAWoB,EAVpB,uFAUoB;AAVD,kBAGnB,4DAHmB,EAGP,kEAHO,EAKnB,wEALmB;AAUC,O;AALF,K;;;;;sEAKTA,W,EAAW;cA1BvB,sDA0BuB;eA1Bd;AACRE,sBAAY,EAAE,CACZ,+DADY,EAEZ,oGAFY,EAGZ,+FAHY,EAIZ,qGAJY,EAKZ,sHALY,EAMZ,mGANY,EAOZ,mHAPY,EAQZ,kGARY,EASZ,gHATY,EAUZ;AACA,sHAXY,EAYZ,gGAZY,EAaZ,gGAbY,EAcZ,gGAdY,EAeZ,uFAfY,CADN;AAkBRlB,iBAAO,EAAE,CACP,4DADO,EAEP,mEAAaiB,OAAb,EAFO,EAGP,wEAHO,CAlBD;AAwBRE,mBAAS,EAAE,CAAC,sFAAD;AAxBH,S;AA0Bc,Q;;;;;;;;;;;;;;;;;;AC/CxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC4BM;;AAA+B;;AAAkC;;AAAa;;;;;;AAG9E;;AAAM;;AAAiC;;AAAoB;;;;QDlBpDC,sB;AAGX,sCAAoBC,cAApB,EACUlB,MADV,EAEEmB,MAFF,EAEkCC,YAFlC,EAGSC,YAHT,EAGmC;AAAA;;AAHf,aAAAH,cAAA,GAAAA,cAAA;AACV,aAAAlB,MAAA,GAAAA,MAAA;AACwB,aAAAoB,YAAA,GAAAA,YAAA;AACzB,aAAAC,YAAA,GAAAA,YAAA;AALT,aAAArC,OAAA,GAAmB,IAAI,uDAAJ,EAAnB;AACA,aAAAsC,SAAA,GAAY,KAAZ;AAKK;;;;mCAEG,CAEP;;;qCAES;AACR,eAAKA,SAAL,GAAiB,KAAjB;AACA,eAAKtC,OAAL,GAAe,IAAI,uDAAJ,EAAf;AACD;;;6BACIuC,S,EAAWC,U,EAAY;AAAA;;AAC1B,eAAKN,cAAL,CAAoBO,aAApB,CAAkC,KAAKzC,OAAvC,EACG0C,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,iBAAI,CAACN,YAAL,CAAkBS,IAAlB,CAAuBN,UAAvB,EAAmC;AAAEO,uBAAS,EAAE,wBAAb;AAAuCC,mBAAK,EAAE;AAA9C,aAAnC;AACD,WAJH,EAIK,UAAAC,KAAK,EAAI;AACVL,mBAAO,CAACC,GAAR,CAAYI,KAAZ;;AACA,iBAAI,CAACZ,YAAL,CAAkBS,IAAlB,CAAuBP,SAAvB,EAAkC;AAAEQ,uBAAS,EAAE,sBAAb;AAAqCC,mBAAK,EAAE;AAA5C,aAAlC;AACD,WAPH;AAQA,eAAKhD,OAAL,GAAe,IAAI,uDAAJ,EAAf;AACD,eAAKkD,QAAL;AAEA;;;iCACQX,S,EAAWC,U,EAAY;AAC9B,eAAKF,SAAL,GAAiB,IAAjB;AACA,eAAKa,IAAL,CAAUZ,SAAV,EAAqBC,UAArB;AACD;;;mCAEU;AACT,eAAKxB,MAAL,CAAYS,QAAZ,CAAqB,CAAC,eAAD,CAArB;AAED;;;;;;;uBAtCUQ,sB,EAAsB,gJ,EAAA,uH,EAAA,0I,EAAA,oI,EAAA,6I;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,kFAFtB,CAAC,yEAAD,EAAiB,mEAAjB,CAEsB,E;AAFI,e;AAAA,a;AAAA,81B;AAAA;AAAA;;;ACVrC;;AACE;;AACE;;AACE;;AACF;;AACA;;AACA;;AACE;;AAAM;AAAA;;AAAA;;AAAA;;AAAA,mBAAY,IAAAmB,QAAA,gBAAZ;AAA2C,WAA3C;;AACJ;;AACE;;AAAyB;;AAAa;;AACtC;;AAAkE;AAAA;AAAA;;AAAlE;;AAEF;;AACA;;AAEE;;AAA+C;;AAAM;;AACvD;;AACA;;AAAQ;AAAA,mBAAS,IAAAF,QAAA,EAAT;AAAmB,WAAnB;;AAA6C;;AAAiC;;AAAS;;AACjG;;AACF;;AAKF;;AACA;;AACA;;AAGF;;AAGA;;;;AA1BS;;AAAA;;AAImE;;AAAA;;;;;;;;;sEDEjEjB,sB,EAAsB;cANlC,uDAMkC;eANxB;AACTP,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD,CAHF;AAITI,mBAAS,EAAE,CAAC,yEAAD,EAAiB,mEAAjB;AAJF,S;AAMwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;QAQaqB,uB;AAEX,uCAAoBrC,MAApB,EAA2CC,mBAA3C,EAAqF;AAAA;;AAAjE,aAAAD,MAAA,GAAAA,MAAA;AAAuB,aAAAC,mBAAA,GAAAA,mBAAA;AAA6C,O,CACxF;;;;;mCACQ,CACP;;;iCACQ;AACP,eAAKA,mBAAL,CAAyBqC,OAAzB;AAEA,eAAKtC,MAAL,CAAYS,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC8B,IAAjC,CAAsC,YAAM;AAC1CC,kBAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,WAFD;AAID;;;;;;;uBAbUL,uB,EAAuB,uH,EAAA,2J;AAAA,K;;;YAAvBA,uB;AAAuB,2C;AAAA,e;AAAA,a;AAAA,4f;AAAA;AAAA;ACRpC;;AACI;;AAEI;;AACI;;AACI;;AACJ;;AACJ;;AAEA;;AACI;;AAKI;;AACI;;AACmB;;AAAQ;;AAAI;;AAAS;;AAA6B;;AACzE;;AAEA;;AACI;;AACmB;;AACX;;AAAS;;AAAS;;AAC9B;;AACA;;AACI;;AACmB;;AACX;;AAAQ;;AAAS;;AAC7B;;AAiBJ;;AAEA;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAoB;AAAA,mBAAS,IAAAM,MAAA,EAAT;AAAiB,WAAjB;;AAEhB;;AACJ;;AACJ;;AACJ;;AAEJ;;AAEJ;;AACJ;;;;AAjEuF;;AAAA;;AAGnD;;AAAA;;AAYb;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;sEDlBVN,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT3B,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;AERpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuCgB;;AACI;;;;AACJ;;;;;;AADmB;;AAAA;;;;;;AAEnB;;AACI;;AACI;;AACA;;AACJ;;AAEJ;;;;;;AACA;;AACI;;AACI;;AACA;;AACJ;;AAEJ;;;;;;AACA;;AACI;;AACI;;AAAO;;AAAqC;;AAAO;;AAAO;;AAClE;;;;;;AACA;;AACI;;AACI;;AAAO;;AAAgC;;AAAK;;AAAO;;AAG3D;;;;;;AAzCJ;;AAEI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AAEA;;AAGA;;AAOA;;AAOA;;AAIA;;AAMJ;;;;;;AAvCuB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGf;;AAAA;;AAGA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;AAWZ;;AACI;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACF;;AACJ;;;;;;;;AAH4D;;AAAA;;AACtD;;AAAA;;;;QD7DDgC,sB;AAIX,sCAAqBC,cAArB,EAAqD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAFd,aAAA1E,MAAA,GAAe,CAAf;AAIN;;;;gCACO2E,C,EAAGC,K,EAAS;AAClBA,eAAK,CAACC,cAAN;AACA,eAAK7E,MAAL,GAAc2E,CAAd;AACA,eAAKG,WAAL;AACD;;;mCACU;AACT;AACA,eAAKA,WAAL;AACD,S,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;sCACW;AAAA;;AACT,eAAKJ,cAAL,CAAoBI,WAApB,CAAgC,KAAK9E,MAArC,EAA6CuD,SAA7C,CACE,UAAAC,IAAI,EAAG;AACLC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAI,CAACuB,QAAL,GAAcvB,IAAI,CAAC,SAAD,CAAlB;AACA,kBAAI,CAACwB,KAAL,GAAY,IAAIC,KAAJ,CAAUzB,IAAI,CAAC,YAAD,CAAd,CAAZ;AACD,WALH,EAME,UAACM,KAAD,EAAU;AACRL,mBAAO,CAACC,GAAR,CAAYI,KAAK,CAACA,KAAN,CAAYoB,OAAxB;AACD,WARH;AAUD;;;;;;;uBAvCUT,sB,EAAsB,wI;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,g8B;AAAA;AAAA;ACZnC;;AACI;;AACI;;AACI;;AAA6B;;AAAc;;AAC/C;;AAIJ;;AAEA;;AACI;;AACI;;AAEI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAM;;AACtB;;AAAiB;;AAAM;;AAC3B;;AACJ;;AACA;;AACI;;AA2CJ;;AACJ;;AACA;;AACA;;AACI;;AAKJ;;AACJ;;;;AArDgB;;AAAA;;AA+Ca;;AAAA;;;;;;;;;;sED3DhBA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTlC,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;AEZnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQa0C,c;AAEX,8BAAoBtF,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAQ,GAAA,GAAM,gDAAN;AAEP,O,CAED;AACA;AAGA;;;;;oCACaL,M,EAAc;AAE3B,iBAAO,KAAKH,IAAL,CAAUI,GAAV,CAAc,UAAG,KAAKI,GAAR,IAAc,UAAd,GAAyBL,MAAvC,CAAP;AACA;;;mCAEW,CAEV;;;;;;;uBAjBUmF,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVhF,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGI;;AACI;;AACI;;AAEI;;AAGI;;AACI;;AACJ;;AAEA;;AACI;;AAAiD;;AAAa;;AAC9D;;AAEJ;;AAGA;;AACI;;AAAiD;;AAAO;;AACxD;;AAEJ;;AACA;;AACI;;AAAiD;;AAAS;;AAC1D;;;;AAEJ;;AACA;;AACI;;AAAiD;;AAAa;;AAC9D;;AAEJ;;AACA;;AACI;;AAAiD;;AAAa;;AAC9D;;AAEJ;;AACA;;AACI;;AAAiD;;AAAG;;AACpD;;AAEJ;;AACA;;AACI;;AAAiD;;AAAM;;AACvD;;AACJ;;AACJ;;AACJ;;AACA;;AAEI;;AAGI;;AACI;;AACJ;;AAEA;;AACI;;AAAiD;;AAAW;;AAC5D;;AAEJ;;AAGA;;AACI;;AAAiD;;AAAM;;AACvD;;AAEJ;;AACA;;AACI;;AAAiD;;AAAW;;AAC5D;;AAEJ;;AACA;;AACI;;AAAiD;;AAAU;;AAC3D;;AAEJ;;AACA;;AACI;;AAAqD;;AAAQ;;AAC7D;;AAAwB;;AAAyD;;AAGrF;;AAEJ;;AACJ;;AACJ;;AACR;;AAEQ;;AAAS;AAAA;;AAAA;;AAAA;AAAA;;AAAkD;;AAAI;;AAAS;;AAC5E;;;;;;AAhFqE;;AAAA;;AAOA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAeA;;AAAA;;AAOA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKzB;;AAAA;;;;QD3EnCiF,wB;AAIX,wCAAoBC,KAApB,EAAkDxD,MAAlD,EACUyD,gBADV,EAC8C;AAAA;;AAD1B,aAAAD,KAAA,GAAAA,KAAA;AAA8B,aAAAxD,MAAA,GAAAA,MAAA;AACxC,aAAAyD,gBAAA,GAAAA,gBAAA;AAJV,aAAAC,MAAA,GAAS,CAAT;AAIiD;;;;mCAEzC;AAAA;;AACN;AAEA,eAAKrF,EAAL,GAAU,KAAKmF,KAAL,CAAWG,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AAEA,eAAKH,gBAAL,CAAsBI,gBAAtB,CAAuC,KAAKxF,EAA5C,EACGqD,SADH,CACa,UAAAC,IAAI,EAAI;AACjB,kBAAI,CAACmC,SAAL,GAAiBnC,IAAjB;AACAC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,WAJH,EAIK,UAAAM,KAAK;AAAA,mBAAIL,OAAO,CAACC,GAAR,CAAYI,KAAZ,CAAJ;AAAA,WAJV;AAKD;;;wCACY;AACX,eAAKjC,MAAL,CAAYS,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD;;;;;;;uBApBU8C,wB,EAAwB,+H,EAAA,uH,EAAA,4I;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,c;AAAA,a;AAAA,snB;AAAA;AAAA;ACVrC;;AACI;;AAA0C;;AAAgB;;AAC1D;;AACA;;AAHJ;;;;AAGS;;AAAA;;;;;;;;;;sEDOIA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACT7C,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC8BY;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1C;;AAAO;;AAA6B;;AACxC;;AACJ;;AAEJ;;;;;;AAvBuB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;AAa3B;;AACI;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACF;;AACJ;;;;;;;;AAH4D;;AAAA;;AACtD;;AAAA;;;;QDnDDmD,wB;AAIX,wCAAoBN,gBAApB,EAAgEzD,MAAhE,EAAgF;AAAA;;AAA5D,aAAAyD,gBAAA,GAAAA,gBAAA;AAA4C,aAAAzD,MAAA,GAAAA,MAAA;AAFzD,aAAA7B,MAAA,GAAe,CAAf;AAE4E;;;;gCAC3E2E,C,EAAGC,K,EAAS;AAClBA,eAAK,CAACC,cAAN;AACA,eAAK7E,MAAL,GAAc2E,CAAd;AACA,eAAKkB,aAAL;AACD;;;mCACO;AACN,eAAKA,aAAL;AAED;;;wCACY;AAAA;;AACX,eAAKP,gBAAL,CAAsBO,aAAtB,CAAoC,KAAK7F,MAAzC,EACAuD,SADA,CAEE,UAAAC,IAAI,EAAG;AACLC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAI,CAACsC,UAAL,GAAgBtC,IAAI,CAAC,SAAD,CAApB;AACA,kBAAI,CAACwB,KAAL,GAAY,IAAIC,KAAJ,CAAUzB,IAAI,CAAC,YAAD,CAAd,CAAZ;AAED,WAPH,EAQE,UAACM,KAAD,EAAU;AACRL,mBAAO,CAACC,GAAR,CAAYI,KAAK,CAACA,KAAN,CAAYoB,OAAxB;AACD,WAVH;AAYD;;;yCACgBhF,E,EAAS;AACxB,eAAK2B,MAAL,CAAYS,QAAZ,CAAqB,CAAC,wBAAD,EAA2BpC,EAA3B,CAArB;AACD;;;;;;;uBA9BU0F,wB,EAAwB,4I,EAAA,uH;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,e;AAAA,a;AAAA,qhB;AAAA;AAAA;ACXrC;;AACI;;AACI;;AACI;;AAA6B;;AAAgB;;AACjD;;AAIJ;;AAEA;;AACI;;AACI;;AAEI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAM;;AAM1B;;AACJ;;AACA;;AAEI;;AA0BJ;;AACJ;;AACA;;AACA;;AACI;;AAKJ;;AACJ;;;;AApCgB;;AAAA;;AA8Ba;;AAAA;;;;;;;;;;sEDjDhBA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTrD,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMasD,gB;AAMX,gCAAoBlG,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA,CAAkB,CALtC;AACA;;AACQ,aAAAQ,GAAA,GAAM,4CAAN,CAG8B,CAFtC;;AACQ,aAAAN,SAAA,GAAU,wCAAV;AACiC;;;;sCAC1BC,M,EAAc;AAE5B,iBAAO,KAAKH,IAAL,CAAUI,GAAV,CAAc,UAAG,KAAKI,GAAR,IAAc,UAAd,GAAyBL,MAAvC,CAAP;AACA;;;yCAEgBE,E,EAAU;AACzB,iBAAO,KAAKL,IAAL,CAAUI,GAAV,WAAiB,KAAKF,SAAtB,cAAmCG,EAAnC,EAAP;AACD;;;;;;;uBAdU6F,gB,EAAgB,uH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACV5F,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;ACN7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGI;;AACI;;AACI;;AAEI;;AAGI;;AACI;;AACJ;;AAEA;;AACI;;AAAiD;;AAAY;;AAC7D;;AAEJ;;AAGA;;AACI;;AAAiD;;AAAa;;AAC9D;;AAEJ;;AACA;;AACI;;AAAiD;;AAAY;;AAC7D;;AAAwE;;AAAyB;;AAGrG;;AACA;;AACI;;AAAiD;;AAAgB;;AACjE;;;;AAEJ;;AACA;;AACI;;AAAiD;;AAAQ;;AACzD;;AAEJ;;AAEJ;;AACJ;;AACA;;AAEI;;AAGI;;AACI;;AACJ;;AAEA;;AACI;;AAAiD;;AAAW;;AAC5D;;AAEJ;;AAGA;;AACI;;AAAiD;;AAAM;;AACvD;;AACJ;;AACA;;AACI;;AAAiD;;AAAqB;;AACtE;;AAEJ;;AAEA;;AACI;;AAAqD;;AAAQ;;AAC7D;;AAAwB;;AAAwD;;AACpF;;AACJ;;AACJ;;AACJ;;AACA;;AAEA;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAiD;;AAAI;;AAAS;;AAC1E;;;;;;AAjEqE;;AAAA;;AAOA;;AAAA;;AAKuB;;AAAA;;AAMvB;;AAAA;;AAKA;;AAAA;;AAiBA;;AAAA;;AAOA;;AAAA;;AAK7C;;AAAA;;AAKoB;;AAAA;;;;QDhEnC6F,uB;AAGX,uCAAoBX,KAApB,EAAkDxD,MAAlD,EACUoE,eADV,EAC4C;AAAA;;AADxB,aAAAZ,KAAA,GAAAA,KAAA;AAA8B,aAAAxD,MAAA,GAAAA,MAAA;AACxC,aAAAoE,eAAA,GAAAA,eAAA;AAAqC;;;;mCAEvC;AAAA;;AAEN,eAAK/F,EAAL,GAAU,KAAKmF,KAAL,CAAWG,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AAEA,eAAKQ,eAAL,CAAqBC,aAArB,CAAmC,KAAKhG,EAAxC,EACGqD,SADH,CACa,UAAAC,IAAI,EAAI;AACjB,kBAAI,CAAC2C,QAAL,GAAgB3C,IAAhB;AACAC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,WAJH,EAIK,UAAAM,KAAK;AAAA,mBAAIL,OAAO,CAACC,GAAR,CAAYI,KAAZ,CAAJ;AAAA,WAJV;AAKD;;;uCACW;AACV,eAAKjC,MAAL,CAAYS,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;;;;;;;uBAlBU0D,uB,EAAuB,+H,EAAA,uH,EAAA,iJ;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,c;AAAA,a;AAAA,62B;AAAA;AAAA;ACTpC;;AACI;;AAA0C;;AAAe;;AACzD;;AACA;;AAHJ;;;;AAGS;;AAAA;;;;;;;;;;sEDMIA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTzD,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AETpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBY;;AACI;;AACC;;AACD;;AACA;;AACI;;AACJ;;AAcJ;;;;;;AAlBoB;;AAAA;;AAGG;;AAAA;;;;;;;;;;;;;;AAoB3B;;AACI;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACF;;AACJ;;;;;;;;AAH4D;;AAAA;;AACtD;;AAAA;;;;QDzCD2D,uB;AAIX,uCAAoBH,eAApB,EAA8DpE,MAA9D,EAA8E;AAAA;;AAA1D,aAAAoE,eAAA,GAAAA,eAAA;AAA0C,aAAApE,MAAA,GAAAA,MAAA;AAFvD,aAAA7B,MAAA,GAAe,CAAf;AAE0E;;;;gCACzE2E,C,EAAGC,K,EAAS;AAClBA,eAAK,CAACC,cAAN;AACA,eAAK7E,MAAL,GAAc2E,CAAd;AACA,eAAK0B,eAAL;AACD;;;mCACO;AACN,eAAKA,eAAL;AACD;;;0CACiB;AAAA;;AAChB,eAAKJ,eAAL,CAAqBK,eAArB,CAAqC,KAAKtG,MAA1C,EAAkDuD,SAAlD,CACE,UAAAC,IAAI,EAAI;AACNC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAI,CAAC+C,SAAL,GAAiB/C,IAAI,CAAC,SAAD,CAArB;AACA,kBAAI,CAACwB,KAAL,GAAa,IAAIC,KAAJ,CAAUzB,IAAI,CAAC,YAAD,CAAd,CAAb;AACD,WALH,EAME,UAACM,KAAD,EAAW;AACTL,mBAAO,CAACC,GAAR,CAAYI,KAAK,CAACA,KAAN,CAAYoB,OAAxB;AACD,WARH;AAUD;;;uCACchF,E,EAAS;AACtB,eAAK2B,MAAL,CAAYS,QAAZ,CAAqB,CAAC,uBAAD,EAA0BpC,EAA1B,CAArB;AACD;;;;;;;uBA3BUkG,uB,EAAuB,iJ,EAAA,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,a;AAAA,mc;AAAA;AAAA;ACVpC;;AACI;;AACI;;AACI;;AAA6B;;AAAe;;AAChD;;AAIJ;;AAEA;;AACI;;AACI;;AAEI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAgB;;AAChC;;AAAgB;;AAAW;;AAE/B;;AACJ;;AACA;;AAEI;;AAqBJ;;AACJ;;AACA;;AACA;;AACI;;AAKJ;;AACJ;;;;AA/BgB;;AAAA;;AAyBa;;AAAA;;;;;;;;;sEDvChBA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT7D,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGI;;AACI;;AAEI;;AAEI;;AAGI;;AACI;;AACJ;;AAEA;;AACI;;AAAiD;;AAAY;;AAC7D;;AAEJ;;AAGA;;AACI;;AAAiD;;AAAS;;AAC1D;;AAEJ;;AACA;;AACI;;AAAiD;;AAAa;;AAC9D;;;;AAGJ;;AACA;;AACI;;AAAiD;;AAAa;;AAC9D;;;;AAGJ;;AACA;;AACI;;AAAiD;;AAAO;;AACxD;;AAEJ;;AACA;;AACI;;AAAiD;;AAAY;;AAC7D;;AACa;;AAAoC;;AACrD;;AACJ;;AACJ;;AACA;;AAEI;;AAGI;;AACI;;AACJ;;AACA;;AACA;;AACI;;AAAgC;;AAAY;;AAC5C;;AACJ;;AACA;;AACA;;AACI;;AAAgC;;AAAe;;AAC/C;;AACJ;;AACA;;AACA;;AACI;;AAA+B;;AAAc;;AAC7C;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AAEA;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAgD;;AAAI;;AAAS;;AACzE;;;;;;AA/DqE;;AAAA;;AAOA;;AAAA;;AAM7C;;AAAA;;AAMA;;AAAA;;AAK6C;;AAAA;;AAMpC;;AAAA;;AAeoC;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;QD9D5D+D,sB;AAGX,sCAAoBnB,KAApB,EAAkDxD,MAAlD,EACU4E,cADV,EAC0C;AAAA;;AADtB,aAAApB,KAAA,GAAAA,KAAA;AAA8B,aAAAxD,MAAA,GAAAA,MAAA;AACxC,aAAA4E,cAAA,GAAAA,cAAA;AAAmC;;;;mCAErC;AAAA;;AAEN,eAAKvG,EAAL,GAAU,KAAKmF,KAAL,CAAWG,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AAEA,eAAKgB,cAAL,CAAoBC,YAApB,CAAiC,KAAKxG,EAAtC,EACGqD,SADH,CACa,UAAAC,IAAI,EAAI;AACjB,kBAAI,CAACmD,OAAL,GAAenD,IAAf;AACAC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,WAJH,EAIK,UAAAM,KAAK;AAAA,mBAAIL,OAAO,CAACC,GAAR,CAAYI,KAAZ,CAAJ;AAAA,WAJV;AAKD;;;sCACU;AACT,eAAKjC,MAAL,CAAYS,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;;;;;;;uBAlBUkE,sB,EAAsB,+H,EAAA,uH,EAAA,gJ;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,c;AAAA,a;AAAA,4zB;AAAA;AAAA;ACVnC;;AACI;;AAA0C;;AAAe;;AACzD;;AACA;;AAHJ;;;;AAGS;;AAAA;;;;;;;;;;sEDOIA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTjE,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0DoB;;AACE;;AAA+C;;AAAqC;;AAAa;;AACjG;;AAAuD;AAAA;AAAA,yBAAW,aAAX;AAAwB,SAAxB;;AACrD;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAAG;;AAA0E;;AAC/E;;AACA;;AACI;;AAAmE;AAAA;AAAA,yBAAW,aAAX;AAAwB,SAAxB;;AAA2B;;AAAM;;AACtG;;AAA6C;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,kBAAW,YAAX;AAAuB;AAAA,SAAvB;;AAAyE;;AAAI;;AAC5H;;;;;;;;AA/CR;;AAEI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC/C;;AAAO;;AAA6B;;AACxC;;AACJ;;AACA;;AACI;;AAA6C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzC;;AAAO;;AAA4B;;AACvC;;AACJ;;AACJ;;AAMJ;;AAEA;;AAeJ;;;;;;AA9CuB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;AA4C3B;;AACI;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AACJ;;AACJ;;;;;;;;AAH4D;;AAAA;;AACpD;;AAAA;;;;;;AAQb;;AAA+B;;AAAkC;;AAAa;;;;;;AAG7E;;AAAM;;AAAiC;;AAAoB;;;;QD/ElDmE,sB;AAKX,sCAAoBH,cAApB,EAA4D5E,MAA5D,EACEmB,MADF,EACkCC,YADlC,EAESC,YAFT,EAEmC;AAAA;;AAFf,aAAAuD,cAAA,GAAAA,cAAA;AAAwC,aAAA5E,MAAA,GAAAA,MAAA;AAC1B,aAAAoB,YAAA,GAAAA,YAAA;AACzB,aAAAC,YAAA,GAAAA,YAAA;AALF,aAAAlD,MAAA,GAAiB,CAAjB;AAOLgD,cAAM,CAAC6D,QAAP,GAAkB,QAAlB;AACA7D,cAAM,CAAC8D,QAAP,GAAkB,KAAlB;AACD;;;;gCAEOnC,C,EAAGC,K,EAAY;AACrBA,eAAK,CAACC,cAAN;AACA,eAAK7E,MAAL,GAAc2E,CAAd;AACA,eAAKoC,WAAL;AACD;;;mCACO;AACN,eAAKA,WAAL;AACD;;;sCACa;AAAA;;AACZ,eAAKN,cAAL,CAAoBM,WAApB,CAAgC,KAAK/G,MAArC,EAA6CuD,SAA7C,CACE,UAAAC,IAAI,EAAI;AACNC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAI,CAACwD,QAAL,GAAgBxD,IAAI,CAAC,SAAD,CAApB;AACA,kBAAI,CAACwB,KAAL,GAAa,IAAIC,KAAJ,CAAUzB,IAAI,CAAC,YAAD,CAAd,CAAb;AACD,WALH,EAME,UAACM,KAAD,EAAW;AACTL,mBAAO,CAACC,GAAR,CAAYI,KAAK,CAACA,KAAN,CAAYoB,OAAxB;AACD,WARH;AAUD;;;sCACahF,E,EAAY;AACxB,eAAK2B,MAAL,CAAYS,QAAZ,CAAqB,CAAC,sBAAD,EAAyBpC,EAAzB,CAArB;AACD;;;6BACI+G,O,EAAS;AACZ,eAAKhE,YAAL,CAAkBiE,IAAlB,CAAuBD,OAAvB;AACD;;;sCAEa/G,E,EAAWkD,S,EAAUC,U,EAAY;AAAA;;AAC7C,eAAKoD,cAAL,CAAoBU,cAApB,CAAmCjH,EAAnC,EACGqD,SADH,CAEI,UAAAC,IAAI,EAAI;AACNC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAI,CAACuD,WAAL,GAFM,CAGN;;;AACA,kBAAI,CAAC7D,YAAL,CAAkBS,IAAlB,CAAuBN,UAAvB,EAAmC;AAAEO,uBAAS,EAAE,wBAAb;AAAuCC,mBAAK,EAAE;AAA9C,aAAnC;AACD,WAPL,EAQI,UAAAC,KAAK,EAAI;AACPL,mBAAO,CAACC,GAAR,CAAYI,KAAZ,EADO,CAEP;;AACA,kBAAI,CAACZ,YAAL,CAAkBS,IAAlB,CAAuBP,SAAvB,EAAkC;AAAEQ,uBAAS,EAAE,sBAAb;AAAqCC,mBAAK,EAAE;AAA5C,aAAlC;AACD,WAZL;AAeD;;;;;;;uBAxDU+C,sB,EAAsB,gJ,EAAA,uH,EAAA,0I,EAAA,oI,EAAA,6I;AAAA,K;;;YAAtBA,sB;AAAsB,0C;AAAA,kFAFtB,CAAC,yEAAD,EAAiB,mEAAjB,CAEsB,E;AAFI,e;AAAA,a;AAAA,uoC;AAAA;AAAA;ACXvC;;AACI;;AACI;;AACI;;AAA6B;;AAAc;;AAC/C;;AAIJ;;AAEA;;AACI;;AACI;;AAEI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAM;;AAC1B;;AACJ;;AACA;;AAEI;;AAkDJ;;AACJ;;AACA;;AAEA;;AACA;;AACI;;AAKJ;;AAGJ;;AACA;;AAGE;;;;AApEc;;AAAA;;AAwDa;;AAAA;;;;;;;;;;sEDlEhBA,sB,EAAsB;cANlC,uDAMkC;eANxB;AACTrE,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD,CAHF;AAITI,mBAAS,EAAE,CAAC,yEAAD,EAAiB,mEAAjB;AAJF,S;AAMwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEbnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACsBY;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AAGJ;;;;;;AAVuB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;AAS3B;;AACI;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACF;;AACJ;;;;;;;;AAH4D;;AAAA;;AACtD;;AAAA;;;;QD/BDuE,0B;AAIX,0CAAoBC,kBAApB,EAAoExF,MAApE,EAAoF;AAAA;;AAAhE,aAAAwF,kBAAA,GAAAA,kBAAA;AAAgD,aAAAxF,MAAA,GAAAA,MAAA;AAF7D,aAAA7B,MAAA,GAAe,CAAf;AAEgF;;;;gCAC/E2E,C,EAAGC,K,EAAS;AAClBA,eAAK,CAACC,cAAN;AACA,eAAK7E,MAAL,GAAc2E,CAAd;AACA,eAAK2C,eAAL;AACD;;;mCACO;AACN,eAAKA,eAAL;AACD;;;0CACc;AAAA;;AACb,eAAKD,kBAAL,CAAwBC,eAAxB,CAAwC,KAAKtH,MAA7C,EAAqDuD,SAArD,CACE,UAAAC,IAAI,EAAG;AACLC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,mBAAI,CAAC+D,YAAL,GAAkB/D,IAAI,CAAC,SAAD,CAAtB;AACA,mBAAI,CAACwB,KAAL,GAAY,IAAIC,KAAJ,CAAUzB,IAAI,CAAC,YAAD,CAAd,CAAZ;AACD,WALH,EAME,UAACM,KAAD,EAAU;AACRL,mBAAO,CAACC,GAAR,CAAYI,KAAK,CAACA,KAAN,CAAYoB,OAAxB;AACD,WARH;AAUD;;;;;;;uBAxBUkC,0B,EAA0B,wJ,EAAA,uH;AAAA,K;;;YAA1BA,0B;AAA0B,6C;AAAA,e;AAAA,a;AAAA,mc;AAAA;AAAA;ACVvC;;AACI;;AACI;;AACI;;AAA6B;;AAAmB;;AACpD;;AAIJ;;AAEA;;AACI;;AACI;;AAEI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAc;;AAC9B;;AAAgB;;AAAa;;AAEjC;;AACJ;;AACA;;AAEI;;AAaJ;;AACJ;;AACA;;AACA;;AACI;;AAKJ;;AACJ;;;;AAvBgB;;AAAA;;AAiBa;;AAAA;;;;;;;;;sED7BhBA,0B,EAA0B;cALtC,uDAKsC;eAL5B;AACT7E,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,qCAAD;AAHF,S;AAK4B,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC2CoB;;AACI;;AAA+C;;AAAqC;;AAC3E;;AACT;;AAAuD;AAAA;AAAA,yBAAW,aAAX;AAAwB,SAAxB;;AACnD;;AAAyB;;AAAO;;AACpC;;AACJ;;AACA;;AACI;;AAAG;;AAA0E;;AACjF;;AACA;;AACI;;AACI;AAAA;AAAA,yBAAW,aAAX;AAAwB,SAAxB;;AAA2B;;AAAM;;AACrC;;AACI;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,kBAAW,YAAX;AAAuB;AAAA,SAAvB;;AAAyE;;AAAI;;AACrF;;;;;;;;AAnCR;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AAGA;;AAEI;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC/C;;AAAO;;AAA2B;;AACtC;;AAEA;;AAA6C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzC;;AAAO;;AAA4B;;AACvC;;AACJ;;AACA;;AAkBJ;;;;;;AAnCuB;;AAAA;;AAGA;;AAAA;;;;;;AA0C/B;;AAA+B;;AAAkC;;AAAa;;;;;;AAG9E;;AAAM;;AAAiC;;AAAoB;;MDlE/D;;;QAOa+E,sB;AAEX,sCAAoBzE,cAApB,EAA4DlB,MAA5D,EACEmB,MADF,EACkCC,YADlC,EAESC,YAFT,EAGUuE,MAHV,CAIE;AAJF,Q;;;AAAoB,aAAA1E,cAAA,GAAAA,cAAA;AAAwC,aAAAlB,MAAA,GAAAA,MAAA;AAC1B,aAAAoB,YAAA,GAAAA,YAAA;AACzB,aAAAC,YAAA,GAAAA,YAAA;AACC,aAAAuE,MAAA,GAAAA,MAAA;AAGRzE,cAAM,CAAC6D,QAAP,GAAkB,QAAlB;AACA7D,cAAM,CAAC8D,QAAP,GAAkB,KAAlB;AACD;;;;mCAEO;AACN,eAAKY,UAAL;AAED;;;qCACY;AAAA;;AACX,eAAK3E,cAAL,CAAoB4E,iBAApB,GACGpE,SADH,CAEI,UAAAC,IAAI,EAAI;AAAE,mBAAI,CAACiE,MAAL,CAAYG,GAAZ,CAAgB,YAAK;AAC7B,qBAAI,CAACC,QAAL,GAAgBrE,IAAhB;AACAC,qBAAO,CAACC,GAAR,CAAYF,IAAZ,EAF6B,CAG7B;AACD,aAJS;AAKT,WAPL,EAQI,UAAAM,KAAK,EAAI;AACPL,mBAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,WAVL;AAWD;;;6BAEImD,O,EAAS;AACZ,eAAKhE,YAAL,CAAkBiE,IAAlB,CAAuBD,OAAvB;AACD;;;sCACa/G,E,EAAWkD,S,EAAUC,U,EAAY;AAAA;;AAC7C,eAAKN,cAAL,CAAoB+E,aAApB,CAAkC5H,EAAlC,EACGqD,SADH,CAEI,UAAAC,IAAI,EAAI;AACNC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,mBAAI,CAACkE,UAAL;;AACA,mBAAI,CAACxE,YAAL,CAAkBS,IAAlB,CAAuBN,UAAvB,EAAmC;AAAEO,uBAAS,EAAE,wBAAb;AAAuCC,mBAAK,EAAE;AAA9C,aAAnC;AACD,WANL,EAOI,UAAAC,KAAK,EAAI;AACPL,mBAAO,CAACC,GAAR,CAAYI,KAAZ;;AACA,mBAAI,CAACZ,YAAL,CAAkBS,IAAlB,CAAuBP,SAAvB,EAAkC;AAAEQ,uBAAS,EAAE,sBAAb;AAAqCC,mBAAK,EAAE;AAA5C,aAAlC;AACD,WAVL;AAaD;;;wCACe;AACd,eAAKhC,MAAL,CAAYS,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD;;;sCACapC,E,EAAU;AAExB,eAAK2B,MAAL,CAAYS,QAAZ,CAAqB,CAAC,qBAAD,EAAuBpC,EAAvB,CAArB;AACA;;;;;;;uBAtDWsH,sB,EAAsB,gJ,EAAA,uH,EAAA,0I,EAAA,oI,EAAA,6I,EAAA,qH;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,kFAFtB,CAAC,yEAAD,EAAiB,mEAAjB,CAEsB,E;AAFI,e;AAAA,a;AAAA,miC;AAAA;AAAA;ACZvC;;AACI;;AACI;;AACI;;AAA6B;;AAAe;;AAChD;;AAIJ;;AAEA;;AACI;;AACI;;AAEI;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAa;;AAE7B;;AAAgB;;AAAM;;AAE1B;;AACJ;;AACA;;AAEI;;AAsCJ;;AACJ;;AACA;;AAA4D;AAAA,mBAAS,IAAAlE,aAAA,EAAT;AAAwB,WAAxB;;AACxD;;AAAM;;AAAgC;;AAAgB;;AAC1D;;AACA;;AAEJ;;AACA;;AAGA;;;;AAjDgB;;AAAA;;;;;;;;;sEDTHkE,sB,EAAsB;cANlC,uDAMkC;eANxB;AACTjF,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD,CAHF;AAITI,mBAAS,EAAE,CAAC,yEAAD,EAAiB,mEAAjB;AAJF,S;AAMwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqBY;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AAQJ;;;;;;AAZuB;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;AAc3B;;AACI;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AACF;;AACJ;;;;;;;;AAH4D;;AAAA;;AACtD;;AAAA;;;;QDhCDkF,mB;AAIX,mCACUC,WADV,EAEUnG,MAFV,EAEwB;AAAA;;AADd,aAAAmG,WAAA,GAAAA,WAAA;AACA,aAAAnG,MAAA,GAAAA,MAAA;AAJH,aAAA7B,MAAA,GAAe,CAAf;AAKF;;;;gCACG2E,C,EAAGC,K,EAAS;AAClBA,eAAK,CAACC,cAAN;AACA,eAAK7E,MAAL,GAAc2E,CAAd;AACA,eAAKsD,QAAL;AACD;;;mCAEO;AACN,eAAKA,QAAL;AACD;;;mCACO;AAAA;;AACN,eAAKD,WAAL,CAAiBC,QAAjB,CAA0B,KAAKjI,MAA/B,EACAuD,SADA,CAEE,UAAAC,IAAI,EAAG;AACLC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,mBAAI,CAAC0E,KAAL,GAAW1E,IAAI,CAAC,SAAD,CAAf;AACA,mBAAI,CAACwB,KAAL,GAAY,IAAIC,KAAJ,CAAUzB,IAAI,CAAC,YAAD,CAAd,CAAZ;AAED,WAPH,EAQE,UAACM,KAAD,EAAU;AACRL,mBAAO,CAACC,GAAR,CAAYI,KAAK,CAACA,KAAN,CAAYoB,OAAxB;AACD,WAVH;AAYD;;;;;;;uBA9BU6C,mB,EAAmB,sJ,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,mc;AAAA;AAAA;ACVhC;;AACI;;AACI;;AACI;;AAA6B;;AAAW;;AAC5C;;AAIJ;;AAEA;;AACI;;AACI;;AAEI;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAS;;AAE7B;;AACJ;;AACA;;AAEI;;AAeJ;;AACJ;;AACA;;AACA;;AACI;;AAKJ;;AACJ;;;;AAzBgB;;AAAA;;AAmBa;;AAAA;;;;;;;;;sED9BhBA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTxF,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBM;;AAA+B;;AAAkC;;AAAa;;;;;;AAG9E;;AAAM;;AAAiC;;AAAoB;;;;QDdpD0F,sB;AAIX,sCAAoB9C,KAApB,EAAmDxD,MAAnD,EACEmB,MADF,EACkCC,YADlC,EAESC,YAFT,EAGUH,cAHV,EAG0C;AAAA;;AAHtB,aAAAsC,KAAA,GAAAA,KAAA;AAA+B,aAAAxD,MAAA,GAAAA,MAAA;AACjB,aAAAoB,YAAA,GAAAA,YAAA;AACzB,aAAAC,YAAA,GAAAA,YAAA;AACC,aAAAH,cAAA,GAAAA,cAAA;AAJV,aAAAI,SAAA,GAAY,KAAZ;AAI6C;;;;mCAErC;AAAA;;AACL,eAAKtC,OAAL,GAAe,IAAI,uDAAJ,EAAf;AAEA,eAAKX,EAAL,GAAU,KAAKmF,KAAL,CAAWG,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AAED,eAAK1C,cAAL,CAAoBqF,YAApB,CAAiC,KAAKlI,EAAtC,EACGqD,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,mBAAI,CAAC3C,OAAL,GAAe2C,IAAf;AAED,WALH,EAKK,UAAAM,KAAK;AAAA,mBAAIL,OAAO,CAACC,GAAR,CAAYI,KAAZ,CAAJ;AAAA,WALV;AAMD;;;+BACMV,S,EAAWC,U,EAAY;AAAA;;AAC5B,eAAKN,cAAL,CAAoBsF,aAApB,CAAkC,KAAKxH,OAAL,CAAaX,EAA/C,EAAkD,KAAKW,OAAvD,EACG0C,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,mBAAI,CAACN,YAAL,CAAkBS,IAAlB,CAAuBN,UAAvB,EAAmC;AAAEO,uBAAS,EAAE,wBAAb;AAAuCC,mBAAK,EAAE;AAA9C,aAAnC;AACD,WAJH,EAIK,UAAAC,KAAK,EAAI;AACVL,mBAAO,CAACC,GAAR,CAAYI,KAAZ;;AACA,mBAAI,CAACZ,YAAL,CAAkBS,IAAlB,CAAuBP,SAAvB,EAAkC;AAAEQ,uBAAS,EAAE,sBAAb;AAAqCC,mBAAK,EAAE;AAA5C,aAAlC;AACD,WAPH;AASD,eAAKE,QAAL;AAEA;;;iCACQX,S,EAAWC,U,EAAY;AAC9B,eAAKF,SAAL,GAAiB,IAAjB;AACA,eAAKmF,MAAL,CAAYlF,SAAZ,EAAuBC,UAAvB;AACD;;;mCACU;AACT,eAAKxB,MAAL,CAAYS,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;;;;;;;uBAxCU6F,sB,EAAsB,+H,EAAA,uH,EAAA,0I,EAAA,oI,EAAA,6I,EAAA,gJ;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,kFAFtB,CAAC,yEAAD,EAAiB,mEAAjB,CAEsB,E;AAFI,e;AAAA,a;AAAA,20B;AAAA;AAAA;;;ACVrC;;AACE;;AACE;;AACE;;AACF;;AACA;;AACA;;AACE;;AAAM;AAAA;;AAAA;;AAAA;;AAAA,mBAAY,IAAAlE,QAAA,gBAAZ;AAA2C,WAA3C;;AACJ;;AACE;;AAAyB;;AAAa;;AACtC;;AAAkE;AAAA;AAAA;;AAAlE;;AAEF;;AACA;;AACE;;AAAQ;AAAA,mBAAS,IAAAF,QAAA,EAAT;AAAmB,WAAnB;;AAAoD;;AAAM;;AAAS;;AAC3E;;AAA+C;;AAAM;;AACvD;;AAEF;;AACF;;AACF;;AACA;;AACA;;AAGF;;AAGA;;;;AAtBS;;AAAA;;AAImE;;AAAA;;;;;;;;;sEDEjEoE,sB,EAAsB;cANlC,uDAMkC;eANxB;AACT5F,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD,CAHF;AAITI,mBAAS,EAAE,CAAC,yEAAD,EAAiB,mEAAjB;AAJF,S;AAMwB,Q","file":"components-admin-admin-module-es5.js","sourcesContent":["export class JobType {\r\n    id: number;\r\n    job_type_name: string;\r\n  \r\n  \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployerService {\r\n  // private url = 'http://localhost:8080/api/admin/getAllEmployers';\r\n  private gettAllEmployerURL = 'http://localhost:8080/api/users/employers';\r\n  private detailurl='http://localhost:8080/api/users/employers';\r\n  constructor(private http: HttpClient) { }\r\n  gettAllEmployer (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.gettAllEmployerURL}`+'?pageNo='+pageNo);  \r\n  }\r\n  getEmployerId(id: number): Observable<any> {\r\n    return this.http.get(`${this.detailurl}/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobLocationService {\r\n  private url = 'http://localhost:8080/api/admin/getAllLocations';\r\n  constructor(private http: HttpClient) { }\r\n  getJobLocations (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.url}`+'?pageNo='+pageNo);  \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs'\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobPostService {\r\n  private url = 'http://localhost:8080/api/admin/getAllJobPosts';\r\n  private detailurl='http://localhost:8080/api/admin/getJobLocation';\r\n  private deleteurl='http://localhost:8080/api/admin/deleteJobPost';\r\n  constructor(private http: HttpClient) { }\r\n  getJobPosts (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.url}`+'?pageNo='+pageNo);  \r\n  }\r\n  getJobPostId(id: number): Observable<any> {\r\n    return this.http.get(`${this.detailurl}/${id}`);\r\n  }\r\n  deleteEmployee(id: number): Observable<any> {\r\n    return this.http.delete(`${this.deleteurl}/${id}`, { responseType: 'text' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobTypeService  {\r\n  private url = 'http://localhost:8080/api/admin/getAllJobTypes';\r\n  private deleteurl='http://localhost:8080/api/admin/deleteJobType';\r\n  private createurl='http://localhost:8080/api/admin/createJobType';\r\n  private updateurl='http://localhost:8080/api/admin/updateJobType';\r\n  private getbyIdurl='http://localhost:8080/api/admin/getJobType';\r\n  constructor(private http: HttpClient) { }\r\n  getAllJobTypeList(): Observable<any> {\r\n    return this.http.get(`${this.url}`);\r\n  }\r\n  deleteJobType(id: number): Observable<any> {\r\n    return this.http.delete(`${this.deleteurl}/${id}`, { responseType: 'text' });\r\n  }\r\n  createJobType(jobType: Object): Observable<Object> {\r\n    return this.http.post(`${this.createurl}`, jobType);\r\n  }\r\n  updateJobType(id: number, value: any): Observable<Object> {\r\n    return this.http.put(`${this.updateurl}/${id}`, value);\r\n  }\r\n  getJobTypeId(id: number): Observable<any> {\r\n    return this.http.get(`${this.getbyIdurl}/${id}`);\r\n  }\r\n \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ManageUserService {\r\n  private url = 'http://localhost:8080/api/users';\r\n  constructor(private http: HttpClient) { }\r\n  getUsers (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.url}`+'?pageNo='+pageNo);  \r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {AdminComponent} from './admin.component';\r\nimport {ManageAccountComponent} from './manage-account/manage-account.component';\r\nimport {ManageCandidateComponent} from './manage-candidate/manage-candidate.component';\r\nimport {CandidateDetailComponent} from './manage-candidate/candidate-detail/candidate-detail.component';\r\nimport {ManageEmployerComponent} from './manage-employer/manage-employer.component';\r\nimport {EmployerDetailComponent} from './manage-employer/employer-detail/employer-detail.component';\r\nimport {ManageJobPostComponent} from './manage-job-post/manage-job-post.component';\r\nimport {JobpostDetailComponent} from './manage-job-post/jobpost-detail/jobpost-detail.component';\r\nimport {ManageJoblocationComponent} from './manage-joblocation/manage-joblocation.component';\r\nimport {ManageJobtypeComponent} from './manage-jobtype/manage-jobtype.component';\r\nimport {CreateJobtypeComponent} from './create-jobtype/create-jobtype.component';\r\nimport {UpdateJobtypeComponent} from './update-jobtype/update-jobtype.component';\r\nimport {ManageUserComponent} from './manage-user/manage-user.component';\r\nconst routes: Routes = [\r\n  {path: '',\r\n  component: AdminComponent,\r\n  children: [\r\n    {\r\n      path: '',\r\n      redirectTo: 'user', pathMatch: 'full' \r\n    },\r\n    {\r\n      path: 'user',\r\n      component: ManageUserComponent\r\n    },\r\n    {\r\n      path: 'account',\r\n      component: ManageAccountComponent\r\n    },\r\n    {\r\n      path: 'candidate',\r\n      component: ManageCandidateComponent\r\n    },\r\n    {\r\n      path: 'employer',\r\n      component: ManageEmployerComponent\r\n    },\r\n    {\r\n      path: 'candidate-detail/:id',\r\n      component: CandidateDetailComponent\r\n    },\r\n    {\r\n      path: 'employer-detail/:id',\r\n      component: EmployerDetailComponent\r\n    },\r\n    {\r\n      path: 'jobpost',\r\n      component: ManageJobPostComponent\r\n    },\r\n    {\r\n      path: 'jobpost-detail/:id',\r\n      component: JobpostDetailComponent\r\n    },\r\n    {\r\n      path: 'joblocation',\r\n      component: ManageJoblocationComponent\r\n    },\r\n    {\r\n      path: 'jobtype',\r\n      component: ManageJobtypeComponent\r\n    },\r\n    {\r\n      path: 'createjobtype',\r\n      component: CreateJobtypeComponent\r\n    },\r\n    {\r\n      path: 'updatejobtype/:id',\r\n      component: UpdateJobtypeComponent\r\n    },\r\n    \r\n  ]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorageService } from '../../shared/services/token-storage.service';\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  private roles: string[];\r\n  isLoggedIn = false;\r\n  showAdmin = false;\r\n  constructor(private router: Router, private tokenStorageService: TokenStorageService) { }\r\n  // constructor() { }\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n      this.showAdmin = this.roles.includes('ROLE_ADMIN');\r\n    }\r\n    if (this.showAdmin) {\r\n      this.router.navigate(['/admin']);\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- <header><app-header-for-admin></app-header-for-admin></header> -->\r\n<!-- <header *ngIf=\"isLoggedIn && showAdmin\">\r\n    <app-header-for-admin></app-header-for-admin>\r\n</header> -->\r\n<header *ngIf=\"isLoggedIn \">\r\n    <app-header-for-admin></app-header-for-admin>\r\n</header>\r\n<body><router-outlet></router-outlet></body>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n//import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { AdminComponent } from './admin.component';\r\nimport { HeaderForAdminComponent } from './header-for-admin/header-for-admin.component';\r\nimport { ManageAccountComponent } from './manage-account/manage-account.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AccountService } from './manage-account/service/account.service';\r\nimport { ManageCandidateComponent } from './manage-candidate/manage-candidate.component';\r\nimport { CandidateDetailComponent } from './manage-candidate/candidate-detail/candidate-detail.component';\r\nimport { ManageEmployerComponent } from './manage-employer/manage-employer.component';\r\nimport { EmployerDetailComponent } from './manage-employer/employer-detail/employer-detail.component';\r\nimport { ManageJobPostComponent } from './manage-job-post/manage-job-post.component';\r\nimport { JobpostDetailComponent } from './manage-job-post/jobpost-detail/jobpost-detail.component';\r\n//import { ToastComponent } from '../../components/toast/toast.component';\r\nimport { ManageJoblocationComponent } from './manage-joblocation/manage-joblocation.component';\r\nimport { ManageJobtypeComponent } from './manage-jobtype/manage-jobtype.component';\r\nimport { CreateJobtypeComponent } from './create-jobtype/create-jobtype.component';\r\nimport { UpdateJobtypeComponent } from './update-jobtype/update-jobtype.component';\r\nimport { ManageUserComponent } from './manage-user/manage-user.component';\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent,\r\n    HeaderForAdminComponent,\r\n    ManageAccountComponent,\r\n    ManageCandidateComponent,\r\n    CandidateDetailComponent,\r\n    ManageEmployerComponent,\r\n    EmployerDetailComponent,\r\n    ManageJobPostComponent,\r\n    JobpostDetailComponent,\r\n    //ToastComponent,\r\n    ManageJoblocationComponent,\r\n    ManageJobtypeComponent,\r\n    CreateJobtypeComponent,\r\n    UpdateJobtypeComponent,\r\n    ManageUserComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule.forRoot(),\r\n    AdminRoutingModule,\r\n    //NgbModule\r\n  ],\r\n  providers: [AccountService],\r\n})\r\nexport class AdminModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JobType } from '../../../_models/jobType';\r\nimport { JobTypeService } from '../../../_services/admin/job-type.service';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n\r\n@Component({\r\n  selector: 'app-create-jobtype',\r\n  templateUrl: './create-jobtype.component.html',\r\n  styleUrls: ['./create-jobtype.component.scss'],\r\n  providers: [NgbModalConfig, NgbModal]\r\n})\r\nexport class CreateJobtypeComponent implements OnInit {\r\n  jobType: JobType = new JobType();\r\n  submitted = false;\r\n  constructor(private jobTypeService: JobTypeService,\r\n    private router: Router,\r\n    config: NgbModalConfig, private modalService: NgbModal,\r\n    public toastService: ToastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n  }\r\n \r\n  newJobType(): void {\r\n    this.submitted = false;\r\n    this.jobType = new JobType();\r\n  }\r\n  save(dangerTpl, successTpl) {\r\n    this.jobTypeService.createJobType(this.jobType)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n      }, error => { \r\n        console.log(error) ;\r\n        this.toastService.show(dangerTpl, { classname: 'bg-danger text-light', delay: 6000 });\r\n      });\r\n    this.jobType = new JobType();\r\n   this.gotoList();\r\n   \r\n  }\r\n  onSubmit(dangerTpl, successTpl) {\r\n    this.submitted = true;\r\n    this.save(dangerTpl, successTpl);\r\n  }\r\n\r\n  gotoList() {\r\n    this.router.navigate(['admin/jobtype']);\r\n    \r\n  }\r\n\r\n\r\n}\r\n\r\n","\r\n  <div class=\"container mt-5 pt-3 pb-3 mb-5 d-flex justify-content-center\">\r\n    <form class=\"border border-grey pt-3 pl-3 pr-3 pb-3\" style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n      <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n        Create New Job Type\r\n      </p>\r\n      <hr/>\r\n      <div [hidden]=\"submitted\" style=\"width: 500px;\">\r\n        <form (ngSubmit)=\"onSubmit(dangerTpl, successTpl)\" >\r\n          <div class=\"form-group\">\r\n            <label for=\"jobTypeName\">Job Type Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"jobTypeName\" required [(ngModel)]=\"jobType.job_type_name\"\r\n              name=\"jobTypeName\">\r\n          </div>\r\n          <div class=\"d-flex justify-content-center\">\r\n\r\n            <button type=\"submit\" class=\"btn btn-success \">Submit</button>\r\n          </div>\r\n          <button (click)=\"gotoList()\" class=\"btn btn-primary\"><i class=\"fas fa-arrow-left\"></i></button><br>\r\n        </form>\r\n      </div>\r\n      <!-- <div [hidden]=\"!submitted\">\r\n        <h4>You submitted successfully!</h4>\r\n      </div>    -->\r\n\r\n    </form>\r\n    <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n    <ng-template #successTpl>\r\n      <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span>\r\n  </ng-template>\r\n  <ng-template #dangerTpl>\r\n      <span><i class=\"fas fa-check mr-5\"></i>There got some error</span>\r\n  </ng-template>\r\n  </div>\r\n  \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TokenStorageService } from '../../../shared/services/token-storage.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-header-for-admin',\r\n  templateUrl: './header-for-admin.component.html',\r\n  styleUrls: ['./header-for-admin.component.scss']\r\n})\r\nexport class HeaderForAdminComponent implements OnInit {\r\n\r\n  constructor(private router: Router,private tokenStorageService: TokenStorageService) { }\r\n  //constructor() { }\r\n  ngOnInit(): void {\r\n  } \r\n  logout() {\r\n    this.tokenStorageService.signOut();\r\n   \r\n    this.router.navigate(['/guest']).then(() => {\r\n      window.location.reload();\r\n    });\r\n   \r\n  }\r\n\r\n}\r\n","<header class=\"mb-5 pt-5\">\r\n    <mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark unique-color fixed-top\" [containerInside]=\"false\">\r\n        <!-- Navbar brand -->\r\n        <mdb-navbar-brand>\r\n            <a class=\"navbar-brand\" [routerLink]=\"['/admin']\">\r\n                <img src=\"../assets/images/logo.png\" height=\"30\" alt=\"\">\r\n            </a>\r\n        </mdb-navbar-brand>\r\n        <!-- Collapsible content -->\r\n        <links>\r\n            <ul class=\"navbar-nav mr-auto\">\r\n                <!-- <li class=\"nav-item\">\r\n                    <a [routerLink]=\"['/admin/account']\" class=\"nav-link waves-light text-light\"\r\n                        mdbWavesEffect><strong>Account</strong><span class=\"sr-only\"></span></a>\r\n                </li> -->\r\n                <li class=\"nav-item\">\r\n                    <a [routerLink]=\"['/admin/user']\" class=\"nav-link waves-light text-light\"\r\n                        mdbWavesEffect><strong>User</strong><span class=\"sr-only\"></span></a>\r\n                </li>\r\n\r\n                <li class=\"nav-item\">\r\n                    <a [routerLink]=\"['/admin/candidate']\" class=\"nav-link waves-light text-light\"\r\n                        mdbWavesEffect><strong>\r\n                            Candidate</strong></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a [routerLink]=\"['/admin/employer']\" class=\"nav-link waves-light text-light\"\r\n                        mdbWavesEffect><strong>\r\n                            Employer</strong></a>\r\n                </li>\r\n                <!-- <li class=\"nav-item\">\r\n                    <a [routerLink]=\"['/admin/jobpost']\" class=\"nav-link waves-light text-light\"\r\n                        mdbWavesEffect><strong>\r\n                            Job Post</strong></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a [routerLink]=\"['/admin/joblocation']\" class=\"nav-link waves-light text-light\"\r\n                        mdbWavesEffect><strong>\r\n                            Job Location</strong></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a [routerLink]=\"['/admin/jobtype']\" class=\"nav-link waves-light text-light\"\r\n                        mdbWavesEffect><strong>\r\n                            Job Type</strong></a>\r\n                </li> -->\r\n\r\n            </ul>\r\n            <!-- Links -->\r\n            <ul class=\"navbar-nav ml-auto\">\r\n                <li class=\"nav-item\">\r\n                    <!-- <a class=\"nav-link\" (click)=\"logout()\"> -->\r\n                    <label class=\"text-white pt-2\">\r\n                        Hello, admin!\r\n                    </label>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" (click)=\"logout()\">\r\n                    <!-- <a class=\"nav-link\"> -->\r\n                        <mdb-icon fas icon=\"sign-out-alt\"></mdb-icon>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <!-- Links -->\r\n        </links>\r\n        <!-- Collapsible content -->\r\n    </mdb-navbar>\r\n</header>","import { Component, PipeTransform, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from './service/account.service';\r\nimport {User_Account} from '../../../_models/user_account';\r\n\r\n@Component({\r\n  selector: 'app-manage-account',\r\n  templateUrl: './manage-account.component.html',\r\n  styleUrls: ['./manage-account.component.scss']\r\n})\r\nexport class ManageAccountComponent implements OnInit {\r\n  accounts: Observable<User_Account[]>;\r\n  public pageNo: number=0;\r\n  public pages: Array<number>;\r\n  constructor( private accountService: AccountService) {\r\n\r\n  }\r\n  setPage(i, event:any){\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.getAccounts();\r\n  }\r\n  ngOnInit() {\r\n    // this.reloadData();\r\n    this.getAccounts();\r\n  }\r\n \r\n  // reloadData() {\r\n  //   this.accountService.getAllAccountList()\r\n  //     .subscribe(\r\n  //       data => {\r\n  //         this.accounts = data;\r\n  //         console.log(data);\r\n  //       },\r\n  //       error => {\r\n  //         console.log(error);\r\n  //       });\r\n  // }\r\n  getAccounts(){\r\n    this.accountService.getAccounts(this.pageNo).subscribe(\r\n      data=> {\r\n        console.log(data);\r\n        this.accounts=data['content'];\r\n        this.pages= new Array(data['totalPages'])\r\n      },\r\n      (error)=> {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <form>\r\n        <div class=\"form-group form-inline d-flex justify-content-start text-primary\">\r\n            <h5 class=\"font-weight-bold\">Manage Account</h5>\r\n        </div>\r\n        <!-- <div class=\"form-group form-inline d-flex justify-content-start\">\r\n        Search: <input class=\"form-control ml-2\" type=\"text\" [formControl]=\"filter\"/>\r\n    </div> -->\r\n    </form>\r\n\r\n    <table class=\"table table-striped \">\r\n        <thead>\r\n            <tr >\r\n              \r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">First Name</th>\r\n                <th scope=\"col\">Last Name</th>\r\n                <th scope=\"col\">Role</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col \">Action</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let account of accounts ; \">\r\n              \r\n                <td>\r\n                    <ngb-highlight [result]=\"account.id \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"account.email\"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"account.firstname \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"account.lastname \"></ngb-highlight>\r\n                </td>\r\n\r\n                <td *ngFor=\"let role of account.roles\">\r\n                    <ngb-highlight [result]=\"role.name |lowercase \"></ngb-highlight>\r\n                </td>\r\n                <td *ngIf=\"!account.enabled\">\r\n                    <div class=\"custom-control custom-switch\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" disabled id=\"customSwitch1\">\r\n                        <label class=\"custom-control-label\" for=\"customSwitch1\"></label>\r\n                    </div>\r\n\r\n                </td>\r\n                <td *ngIf=\"account.enabled\">\r\n                    <div class=\"custom-control custom-switch\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" disabled checked id=\"customSwitch1\">\r\n                        <label class=\"custom-control-label\" for=\"customSwitch1\"></label>\r\n                    </div>\r\n\r\n                </td>\r\n                <td *ngIf=\"!account.enabled\">\r\n                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm\">\r\n                        <span> <i class=\"fas fa-lock-open pr-1\"></i></span>UnBlock</button>\r\n                </td>\r\n                <td *ngIf=\"account.enabled\">\r\n                    <button type=\"button\" class=\"btn btn-outline-dandger btn-sm\">\r\n                        <span> <i class=\"fas fa-lock pr-1\"></i>Block</span></button>\r\n\r\n\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <hr>\r\n    <ul class=\"nav nav-pills d-flex justify-content-center\">\r\n        <li class=\"nav-item\" *ngFor=\"let p of pages; let i=index\">\r\n            <a class=\"nav-link\" href=\"\" (click)=\"setPage(i,$event)\" [ngClass]=\"{'active':i==pageNo}\" >\r\n              {{i}}\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService implements OnInit {\r\n  private url = 'http://localhost:8080/api/admin/getAllAccounts';\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  // getAllAccountList(): Observable<any> {\r\n  //   return this.http.get(`${this.url}`);\r\n\r\n\r\n  // }\r\n  getAccounts (pageNo: number)\r\n {\r\n  return this.http.get(`${this.url}`+'?pageNo='+pageNo);  \r\n }\r\n  \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit ,Input} from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {CandidateService} from '../service/candidate.service';\r\nimport {Candidate} from '../../../../_models/candidate';\r\n\r\n@Component({\r\n  selector: 'app-candidate-detail',\r\n  templateUrl: './candidate-detail.component.html',\r\n  styleUrls: ['./candidate-detail.component.scss']\r\n})\r\nexport class CandidateDetailComponent implements OnInit {\r\n  active = 1;\r\n  id: number;\r\n  candidate: Candidate;\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private candidateService: CandidateService) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.candidate = new Candidate();\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n    \r\n    this.candidateService.getCandidatebyId(this.id)\r\n      .subscribe(data => {\r\n        this.candidate = data;\r\n        console.log(data);    \r\n      }, error => console.log(error));\r\n  }\r\n  candidateList(){\r\n    this.router.navigate(['admin/candidate']);\r\n  }\r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <h5 class=\"font-weight-bold text-primary\">Candidate Detail</h5>\r\n    <hr />\r\n    <div *ngIf=\"candidate\" >\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-6 col-sm-12 col-md-12\">\r\n\r\n                <form class=\"border border-grey pt-3 pl-3 pr-3 pb-3\"\r\n                    style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n\r\n                    <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n                        Candidate Profile\r\n                    </p>\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">ID Candidate:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.id}}\">\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Gender:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.gender}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Birthday:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.doB |date}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Phone Number:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.phone_number}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Home Address:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.homeaddress}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">CV:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.cV}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Image:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.image}}\">\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"col-lg-6 col-sm-12 col-md-12\">\r\n\r\n                <form class=\"border border-grey pt-3 pl-3 pr-3 pb-3\"\r\n                    style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n\r\n                    <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n                        Candidate Account\r\n                    </p>\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">ID Account:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.userAccount.id}}\">\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Email:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.userAccount.email}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">First Name:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.userAccount.firstname}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Last Name:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.userAccount.lastname}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold pr-3\">Status: </label>\r\n                        <b class=\"text-warning\">{{candidate.userAccount.enabled ? 'Active' : 'Inactive'}}</b>\r\n\r\n\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n<br/>\r\n\r\n        <button  (click)=\"candidateList()\" class=\"btn btn-primary\">Back</button><br>\r\n    </div>\r\n<!-- <div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\" *ngIf=\"candidate\">\r\n   \r\n\r\n    <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\r\n\r\n        <li [ngbNavItem]=\"1\">\r\n            <a ngbNavLink>Candidate Account</a>\r\n            <ng-template ngbNavContent>\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <div class=\"col-lg-8 col-sm-12 col-md-12 mt-3\">\r\n\r\n                        <form class=\"border border-grey pt-3 pl-3 pr-3 pb-3\"\r\n                            style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n\r\n                            <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n                                Candidate Account\r\n                            </p>\r\n                            <div class=\"col-lg-4\">\r\n                              \r\n                                <img *ngIf=\"!user_account.imageUrl\" class=\"test card-img-top border rounded-circle border-white\" src=\"./assets/images/candidate/ava.jpg\"\r\n                                  alt=\"Card image cap\">\r\n                                  <img *ngIf=\"user_account.imageUrl\" class=\"test card-img-top border rounded-circle border-white\" src=\"{{user_account.imageUrl}}\"\r\n                                  alt=\"Card image cap\">\r\n                                \r\n                              </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">ID Account:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.userAccount.id}}\">\r\n\r\n                            </div>\r\n\r\n\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Email:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly\r\n                                    value=\"{{candidate.userAccount.email}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Created Day:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.userAccount.id}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Lasted Login:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.userAccount.id}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Name:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly\r\n                                    value=\"{{candidate.userAccount.firstname}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Provider:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly\r\n                                    value=\"{{candidate.userAccount.lastname}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold pr-3\">Verified: </label>\r\n                                <b class=\"text-warning\">{{candidate.userAccount.enabled ? 'Active' : 'Inactive'}}</b>\r\n\r\n\r\n                            </div>\r\n\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n\r\n        </li>\r\n        <li [ngbNavItem]=\"2\">\r\n            <a ngbNavLink>Candidate Profile</a>\r\n            <ng-template ngbNavContent>\r\n                <div class=\"d-flex justify-content-center\">\r\n                    <div class=\"col-lg-8 col-sm-12 col-md-12 mt-3\">\r\n\r\n                        <form class=\"border border-grey pt-3 pl-3 pr-3 pb-3\"\r\n                            style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n\r\n                            <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n                                Candidate Profile\r\n                            </p>\r\n\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">ID Candidate:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.id}}\">\r\n\r\n                            </div>\r\n\r\n\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Gender:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.gender}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Birthday:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.doB |date}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Phone Number:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.phone_number}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Home Address:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.homeaddress}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">CV:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.cV}}\">\r\n\r\n                            </div>\r\n                            <div class=\"form-group \">\r\n                                <label class=\"dark-grey-text  font-weight-bold \">Image:</label>\r\n                                <input type=\"text\" class=\"form-control\" readonly value=\"{{candidate.image}}\">\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            </ng-template>\r\n\r\n        </li>\r\n        <li [ngbNavItem]=\"3\">\r\n            <a ngbNavLink>Education</a>\r\n            <ng-template ngbNavContent>\r\n                <p>Sed commodo, leo at suscipit dictum, quam est porttitor sapien, eget sodales nibh elit id diam. Nulla\r\n                    facilisi.\r\n                    Donec egestas ligula vitae odio interdum aliquet. Duis lectus turpis, luctus eget tincidunt eu,\r\n                    congue et odio.\r\n                    Duis pharetra et nisl at faucibus. Quisque luctus pulvinar arcu, et molestie lectus ultrices et. Sed\r\n                    diam urna,\r\n                    egestas ut ipsum vel, volutpat volutpat neque. Praesent fringilla tortor arcu. Vivamus faucibus nisl\r\n                    enim, nec\r\n                    tristique ipsum euismod facilisis. Morbi ut bibendum est, eu tincidunt odio. Orci varius natoque\r\n                    penatibus et\r\n                    magnis dis parturient montes, nascetur ridiculus mus. Mauris aliquet odio ac lorem aliquet ultricies\r\n                    in eget\r\n                    neque. Phasellus nec tortor vel tellus pulvinar feugiat.</p>\r\n            </ng-template>\r\n        </li>\r\n        <li [ngbNavItem]=\"4\">\r\n            <a ngbNavLink>Experiences</a>\r\n            <ng-template ngbNavContent>\r\n                <p>Sed commodo, leo at suscipit dictum, quam est porttitor sapien, eget sodales nibh elit id diam. Nulla\r\n                    facilisi.\r\n                    Donec egestas ligula vitae odio interdum aliquet. Duis lectus turpis, luctus eget tincidunt eu,\r\n                    congue et odio.\r\n                    Duis pharetra et nisl at faucibus. Quisque luctus pulvinar arcu, et molestie lectus ultrices et. Sed\r\n                    diam urna,\r\n                    egestas ut ipsum vel, volutpat volutpat neque. Praesent fringilla tortor arcu. Vivamus faucibus nisl\r\n                    enim, nec\r\n                    tristique ipsum euismod facilisis. Morbi ut bibendum est, eu tincidunt odio. Orci varius natoque\r\n                    penatibus et\r\n                    magnis dis parturient montes, nascetur ridiculus mus. Mauris aliquet odio ac lorem aliquet ultricies\r\n                    in eget\r\n                    neque. Phasellus nec tortor vel tellus pulvinar feugiat.</p>\r\n            </ng-template>\r\n        </li>\r\n    </ul>\r\n\r\n    <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n\r\n</div> -->","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {CandidateService} from './service/candidate.service';\r\nimport {Candidate} from '../../../_models/candidate';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-manage-candidate',\r\n  templateUrl: './manage-candidate.component.html',\r\n  styleUrls: ['./manage-candidate.component.scss']\r\n})\r\nexport class ManageCandidateComponent implements OnInit {\r\n  public candidates: Observable<Candidate[]> ;\r\n  public pageNo: number=0;\r\n  public pages: Array<number>;\r\n  constructor(private candidateService: CandidateService, private router: Router) { }\r\n  setPage(i, event:any){\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.getCandidates();\r\n  }\r\n  ngOnInit(): void {\r\n    this.getCandidates();\r\n     \r\n  }\r\n  getCandidates(){\r\n    this.candidateService.getCandidates(this.pageNo).\r\n    subscribe(\r\n      data=> {\r\n        console.log(data);\r\n        this.candidates=data['content'];\r\n        this.pages= new Array(data['totalPages']);\r\n      \r\n      },\r\n      (error)=> {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n  candidateDetails(id:number){\r\n    this.router.navigate(['admin/candidate-detail', id]);\r\n  }\r\n\r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <form>\r\n        <div class=\"form-group form-inline d-flex justify-content-start text-primary\">\r\n            <h5 class=\"font-weight-bold\">Manage Candidate</h5>\r\n        </div>\r\n        <!-- <div class=\"form-group form-inline d-flex justify-content-start\">\r\n        Search: <input class=\"form-control ml-2\" type=\"text\" [formControl]=\"filter\"/>\r\n    </div> -->\r\n    </form>\r\n\r\n    <table class=\"table table-striped \">\r\n        <thead>\r\n            <tr>\r\n\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Gender</th>\r\n                <th scope=\"col\">Birthday</th>\r\n                <th scope=\"col\">Lasted Login</th>\r\n                <th scope=\"col\">Action</th>\r\n                <!-- <th scope=\"col\">Phone Number</th>\r\n                <th scope=\"col\">Home Address</th> -->\r\n                <!-- <th scope=\"col\">CV</th>\r\n                <th scope=\"col\">Image</th>\r\n                <th scope=\"col\">Status</th> -->\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let cand of candidates  ; \">\r\n                <td>\r\n                    <ngb-highlight [result]=\"cand.id \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"cand.email \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"cand.name\"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"cand.candidate.gender\"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"cand.candidate.doB |date \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"cand.updatedAt\"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <button type=\"button\" class=\"btn btn-success\" (click)=\"candidateDetails(cand.candidate.id)\"> \r\n                        <span> <i class=\"fas fa-search\"></i></span>\r\n                    </button>\r\n                </td>\r\n\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <hr>\r\n    <ul class=\"nav nav-pills d-flex justify-content-center\">\r\n        <li class=\"nav-item\" *ngFor=\"let p of pages; let i=index\">\r\n            <a class=\"nav-link\" href=\"\" (click)=\"setPage(i,$event)\" [ngClass]=\"{'active':i==pageNo}\" >\r\n              {{i}}\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CandidateService {\r\n  //truoc kia\r\n  // private url = 'http://localhost:8080/api/admin/getAllCandidates';\r\n  private url = 'http://localhost:8080/api/users/candidates';\r\n  // private detailurl='http://localhost:8080/api/admin/getCandidate';\r\n  private detailurl='http://localhost:8080/api/getCandidate';\r\n  constructor(private http: HttpClient) { }\r\n  getCandidates (pageNo: number)\r\n  {\r\n   return this.http.get(`${this.url}`+'?pageNo='+pageNo);  \r\n  }\r\n \r\n  getCandidatebyId(id: number): Observable<any> {\r\n    return this.http.get(`${this.detailurl}/${id}`);\r\n  }\r\n\r\n \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {Employer} from '../../../../_models/employer';\r\nimport {EmployerService} from '../../../../_services/admin/employer.service';\r\n@Component({\r\n  selector: 'app-employer-detail',\r\n  templateUrl: './employer-detail.component.html',\r\n  styleUrls: ['./employer-detail.component.scss']\r\n})\r\nexport class EmployerDetailComponent implements OnInit {\r\n  id: number;\r\n  employer: Employer;\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private employerService: EmployerService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.id = this.route.snapshot.params['id'];\r\n    \r\n    this.employerService.getEmployerId(this.id)\r\n      .subscribe(data => {\r\n        this.employer = data;\r\n        console.log(data);    \r\n      }, error => console.log(error));\r\n  }\r\n  employerList(){\r\n    this.router.navigate(['admin/employer']);\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <h5 class=\"font-weight-bold text-primary\">Employer Detail</h5>\r\n    <hr />\r\n    <div *ngIf=\"employer\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-7 col-sm-12 col-md-12\">\r\n\r\n                <form class=\"border border-grey pt-3 pl-3 pr-3 pb-3\"\r\n                    style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n\r\n                    <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n                        Employer Profile\r\n                    </p>\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">ID Employer:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{employer.id}}\">\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Company Name:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{employer.companyname}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Description:</label>\r\n                        <textarea type=\"text\" class=\"form-control\" id=\"descriptionCom\" readonly>{{employer.description }}</textarea>\r\n                     \r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Established Day:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{employer.establishmentdate |date}} \">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Website:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{employer.websiteurl}}\">\r\n\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class=\"col-lg-5 col-sm-12 col-md-12\">\r\n\r\n                <form class=\"border border-grey rounded-lg pt-3 pl-3 pr-3 pb-3\"\r\n                style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n\r\n                    <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n                        Employer Account\r\n                    </p>\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">ID Account:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{employer.userAccount.id}}\">\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Email:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{employer.userAccount.email}}\">\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Legal Representative:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly\r\n                            value=\"{{employer.userAccount.firstname}} {{employer.userAccount.lastname}}\">\r\n                    </div>\r\n                   \r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold pr-3\">Status: </label>\r\n                        <b class=\"text-warning\">{{employer.userAccount.enabled ? 'Active' : 'Inactive'}}</b>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <br />\r\n\r\n        <button (click)=\"employerList()\" class=\"btn btn-primary\">Back</button><br>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {EmployerService} from '../../../_services/admin/employer.service';\r\nimport {Employer} from '../../../_models/employer';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-manage-employer',\r\n  templateUrl: './manage-employer.component.html',\r\n  styleUrls: ['./manage-employer.component.scss']\r\n})\r\nexport class ManageEmployerComponent implements OnInit {\r\n  employers: Observable<Employer[]>;\r\n  public pageNo: number=0;\r\n  public pages: Array<number>;\r\n  constructor(private employerService: EmployerService, private router: Router) { }\r\n  setPage(i, event:any){\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.getAllEmployers();\r\n  }\r\n  ngOnInit(): void {\r\n    this.getAllEmployers();\r\n  }\r\n  getAllEmployers() {\r\n    this.employerService.gettAllEmployer(this.pageNo).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.employers = data['content'];\r\n        this.pages = new Array(data['totalPages'])\r\n      },\r\n      (error) => {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n  employerDetail(id:number){\r\n    this.router.navigate(['admin/employer-detail', id]);\r\n  }\r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <form>\r\n        <div class=\"form-group form-inline d-flex justify-content-start text-primary\">\r\n            <h5 class=\"font-weight-bold\">Manage Employer</h5>\r\n        </div>\r\n        <!-- <div class=\"form-group form-inline d-flex justify-content-start\">\r\n        Search: <input class=\"form-control ml-2\" type=\"text\" [formControl]=\"filter\"/>\r\n    </div> -->\r\n    </form>\r\n\r\n    <table class=\"table table-striped \">\r\n        <thead>\r\n            <tr>\r\n\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Company Name</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Established Date</th>\r\n                <th scope=\"col\">Website URL</th>\r\n              \r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let emplo of employers ; \">\r\n                <td>\r\n                 <ngb-highlight [result]=\"emplo.email \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"emplo.name \"></ngb-highlight>\r\n                </td>\r\n                <!-- <td>\r\n                    <ngb-highlight [result]=\"employer.userAccount.email\"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"employer.establishmentdate |date\"></ngb-highlight>\r\n                </td> -->\r\n              \r\n                <!-- <td>\r\n                    <button type=\"button\" class=\"btn btn-success\"  (click)=\"employerDetail(employer.id)\" > \r\n                        <span> <i class=\"fas fa-search\"></i></span>\r\n                    </button>\r\n                </td> -->\r\n\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <hr>\r\n    <ul class=\"nav nav-pills d-flex justify-content-center\">\r\n        <li class=\"nav-item\" *ngFor=\"let p of pages; let i=index\">\r\n            <a class=\"nav-link\" href=\"\" (click)=\"setPage(i,$event)\" [ngClass]=\"{'active':i==pageNo}\" >\r\n              {{i}}\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {JobPostService} from '../../../../_services/admin/job-post.service';\r\nimport {JobPost } from '../../../../_models/jobPost';\r\nimport { JobLocation } from 'src/app/_models/jobLocation';\r\n@Component({\r\n  selector: 'app-jobpost-detail',\r\n  templateUrl: './jobpost-detail.component.html',\r\n  styleUrls: ['./jobpost-detail.component.scss']\r\n})\r\nexport class JobpostDetailComponent implements OnInit {\r\n  id: number;\r\n  jobPost: JobLocation;\r\n  constructor(private route: ActivatedRoute,private router: Router,\r\n    private jobPostService: JobPostService) { }\r\n\r\n  ngOnInit(): void {\r\n   \r\n    this.id = this.route.snapshot.params['id'];\r\n    \r\n    this.jobPostService.getJobPostId(this.id)\r\n      .subscribe(data => {\r\n        this.jobPost = data;\r\n        console.log(data);    \r\n      }, error => console.log(error));\r\n  }\r\n  jobpostList(){\r\n    this.router.navigate(['admin/jobpost']);\r\n  }\r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <h5 class=\"font-weight-bold text-primary\">Job Post Detail</h5>\r\n    <hr />\r\n    <div *ngIf=\"jobPost\">\r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-lg-7 col-sm-12 col-md-12\">\r\n\r\n                <form class=\"border border-grey pt-3 pl-3 pr-3 pb-3\"\r\n                    style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n\r\n                    <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n                        Job Post Information\r\n                    </p>\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Job Post ID:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{jobPost.jobpost.id}}\">\r\n\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Industry:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{jobPost.jobpost.industry}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Created Date:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly\r\n                            value=\"{{jobPost.jobpost.created_date | date:'medium' }}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Expired Date:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly\r\n                            value=\"{{jobPost.jobpost.expired_date | date:'medium'}} \">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Salary:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{jobPost.jobpost.salary}}\">\r\n\r\n                    </div>\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  font-weight-bold \">Description:</label>\r\n                        <textarea type=\"text\" class=\"form-control\" id=\"descriptionCom\"\r\n                            readonly>{{jobPost.jobpost.job_description }}</textarea>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"col-lg-5 col-sm-12 col-md-12\">\r\n\r\n                <form class=\"border border-grey rounded-lg pt-3 pl-3 pr-3 pb-3\"\r\n                    style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n\r\n                    <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n                        Job Location\r\n                    </p>\r\n                    <hr />\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  \">ID Location:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{jobPost.id}}\">\r\n                    </div>\r\n                    <hr />\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text  \">Street Address:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{jobPost.street_address}}\">\r\n                    </div>\r\n                    <hr />\r\n                    <div class=\"form-group \">\r\n                        <label class=\"dark-grey-text \">City Province:</label>\r\n                        <input type=\"text\" class=\"form-control\" readonly value=\"{{jobPost.city_province}}\">\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <br />\r\n\r\n        <button (click)=\"jobpostList()\" class=\"btn btn-primary\">Back</button><br>\r\n    </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { JobPostService } from '../../../_services/admin/job-post.service';\r\nimport { JobPost } from 'src/app/_models/jobPost';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n@Component({\r\n  selector: 'app-manage-job-post',\r\n  templateUrl: './manage-job-post.component.html',\r\n  styleUrls: ['./manage-job-post.component.scss'],\r\n  providers: [NgbModalConfig, NgbModal]\r\n})\r\nexport class ManageJobPostComponent implements OnInit {\r\n  jobPosts: Observable<JobPost[]>;\r\n  public pageNo: number = 0;\r\n  public pages: Array<number>;\r\n\r\n  constructor(private jobPostService: JobPostService, private router: Router,\r\n    config: NgbModalConfig, private modalService: NgbModal,\r\n    public toastService: ToastService\r\n  ) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n  setPage(i, event: any) {\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.getJobPosts();\r\n  }\r\n  ngOnInit(): void {\r\n    this.getJobPosts();\r\n  }\r\n  getJobPosts() {\r\n    this.jobPostService.getJobPosts(this.pageNo).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.jobPosts = data['content'];\r\n        this.pages = new Array(data['totalPages'])\r\n      },\r\n      (error) => {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n  jobPostDetail(id: number) {\r\n    this.router.navigate(['admin/jobpost-detail', id]);\r\n  }\r\n  open(content) {\r\n    this.modalService.open(content);\r\n  }\r\n  \r\n  deleteJobPost(id: number,dangerTpl,successTpl) {\r\n    this.jobPostService.deleteEmployee(id)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.getJobPosts();\r\n          // this.toastService.show('Congratulation! You have done successfully!', { classname: 'bg-success text-light', delay: 3000 });\r\n          this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          // this.toastService.show('Oh No! You have got some error!', { classname: 'bg-danger text-light', delay: 3000 });\r\n          this.toastService.show(dangerTpl, { classname: 'bg-danger text-light', delay: 6000 });\r\n        }\r\n      );\r\n\r\n  }\r\n \r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <form>\r\n        <div class=\"form-group form-inline d-flex justify-content-start text-primary\">\r\n            <h5 class=\"font-weight-bold\">Manage JobPost</h5>\r\n        </div>\r\n        <!-- <div class=\"form-group form-inline d-flex justify-content-start\">\r\n        Search: <input class=\"form-control ml-2\" type=\"text\" [formControl]=\"filter\"/>\r\n    </div> -->\r\n    </form>\r\n\r\n    <table class=\"table table-striped \">\r\n        <thead>\r\n            <tr>\r\n\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Job Title</th>\r\n                <th scope=\"col\">Industry</th>\r\n                <th scope=\"col\">Created Date</th>\r\n                <th scope=\"col\">Action</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let jobPost of jobPosts ;\">\r\n\r\n                <td>\r\n                    <ngb-highlight [result]=\"jobPost.id \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"jobPost.job_description \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"jobPost.industry\"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"jobPost.created_date | date:'medium'  \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-4\">\r\n                            <button type=\"button\" class=\"btn btn-success mr-3\" (click)=\"jobPostDetail(jobPost.id)\">\r\n                                <span> <i class=\"fas fa-search\"></i></span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <button type=\"button\" class=\"btn btn-danger\" (click)=\"open(content)\">\r\n                                <span> <i class=\"fas fa-trash\"></i></span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <!-- <button type=\"button\" class=\"btn btn-danger\"  (click)=\"deleteJobPost(jobPost.id)\" > \r\n                        <span> <i class=\"fas fa-trash\"></i></span>\r\n                    </button> -->\r\n                   \r\n                </td>\r\n                \r\n                <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n                    <div class=\"modal-header\">\r\n                      <h4 class=\"modal-title\" id=\"modal-basic-title\"><i class=\"fas fa-trash-alt pr-3\"></i>Are you sure?</h4>\r\n                      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                      </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <p>Do you really want to delete these records? This process cannot be undone.</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" aria-label=\"Close\" (click)=\"d('Cross click')\">Cancel</button>\r\n                      <button type=\"button\" class=\"btn btn-danger\" (click)=\"c('Save click');deleteJobPost(jobPost.id,dangerTpl,successTpl)\">Save</button>\r\n                    </div>\r\n                  </ng-template>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <hr>\r\n    \r\n    <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n    <ul class=\"nav nav-pills d-flex justify-content-center\">\r\n        <li class=\"nav-item\" *ngFor=\"let p of pages; let i=index\">\r\n            <a class=\"nav-link\" href=\"\" (click)=\"setPage(i,$event)\" [ngClass]=\"{'active':i==pageNo}\">\r\n                {{i}}\r\n            </a>\r\n        </li>\r\n    </ul>\r\n   \r\n     \r\n</div>\r\n<ng-template #successTpl>\r\n   <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span> \r\n  </ng-template>\r\n  <ng-template #dangerTpl>\r\n    <span><i class=\"fas fa-check mr-5\"></i>There got some error</span> \r\n   </ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport {JobLocation} from '../../../_models/jobLocation';\r\nimport {JobLocationService} from '../../../_services/admin/job-location.service';\r\n@Component({\r\n  selector: 'app-manage-joblocation',\r\n  templateUrl: './manage-joblocation.component.html',\r\n  styleUrls: ['./manage-joblocation.component.scss']\r\n})\r\nexport class ManageJoblocationComponent implements OnInit {\r\n  jobLocations: Observable<JobLocation[]>;\r\n  public pageNo: number=0;\r\n  public pages: Array<number>;\r\n  constructor(private jobLocationService: JobLocationService, private router: Router) { }\r\n  setPage(i, event:any){\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.getJobLocations();\r\n  }\r\n  ngOnInit(): void {\r\n    this.getJobLocations();\r\n  }\r\n  getJobLocations(){\r\n    this.jobLocationService.getJobLocations(this.pageNo).subscribe(\r\n      data=> {\r\n        console.log(data);\r\n        this.jobLocations=data['content'];\r\n        this.pages= new Array(data['totalPages'])\r\n      },\r\n      (error)=> {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <form>\r\n        <div class=\"form-group form-inline d-flex justify-content-start text-primary\">\r\n            <h5 class=\"font-weight-bold\">Manage Job Location</h5>\r\n        </div>\r\n        <!-- <div class=\"form-group form-inline d-flex justify-content-start\">\r\n        Search: <input class=\"form-control ml-2\" type=\"text\" [formControl]=\"filter\"/>\r\n    </div> -->\r\n    </form>\r\n\r\n    <table class=\"table table-striped \">\r\n        <thead>\r\n            <tr>\r\n\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Street Address</th>\r\n                <th scope=\"col\">City Province</th>\r\n              \r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let jobLocation of jobLocations ; \">\r\n                <td>\r\n                    <ngb-highlight [result]=\"jobLocation.id \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"jobLocation.street_address \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"jobLocation.city_province\"></ngb-highlight>\r\n                </td>\r\n               \r\n\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <hr>\r\n    <ul class=\"nav nav-pills d-flex justify-content-center\">\r\n        <li class=\"nav-item\" *ngFor=\"let p of pages; let i=index\">\r\n            <a class=\"nav-link\" href=\"\" (click)=\"setPage(i,$event)\" [ngClass]=\"{'active':i==pageNo}\" >\r\n              {{i}}\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { JobType } from '../../../_models/jobType';\r\nimport { JobTypeService } from '../../../_services/admin/job-type.service';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n// import {ChangeDetectorRef} from '@angular/core';\r\n@Component({\r\n  selector: 'app-manage-jobtype',\r\n  templateUrl: './manage-jobtype.component.html',\r\n  styleUrls: ['./manage-jobtype.component.scss'],\r\n  providers: [NgbModalConfig, NgbModal]\r\n})\r\nexport class ManageJobtypeComponent implements OnInit {\r\n  jobTypes: Observable<JobType[]>;\r\n  constructor(private jobTypeService: JobTypeService, private router: Router,\r\n    config: NgbModalConfig, private modalService: NgbModal,\r\n    public toastService: ToastService,\r\n    private ngZone: NgZone \r\n    // private ref: ChangeDetectorRef\r\n    ) {\r\n    config.backdrop = 'static';\r\n    config.keyboard = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.reloadData();\r\n   \r\n  }\r\n  reloadData() {\r\n    this.jobTypeService.getAllJobTypeList()\r\n      .subscribe(\r\n        data => { this.ngZone.run(() =>{\r\n          this.jobTypes = data;\r\n          console.log(data);\r\n          //  this.ref.detectChanges();\r\n        });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n \r\n  open(content) {\r\n    this.modalService.open(content);\r\n  }\r\n  deleteJobType(id: number,dangerTpl,successTpl) {\r\n    this.jobTypeService.deleteJobType(id)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          this.reloadData();\r\n          this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.toastService.show(dangerTpl, { classname: 'bg-danger text-light', delay: 6000 });\r\n        }\r\n      );\r\n\r\n  }\r\n  createJobType() {\r\n    this.router.navigate(['admin/createjobtype']);\r\n  }\r\n  updateJobType(id: number)\r\n {\r\n  this.router.navigate(['admin/updatejobtype',id]);\r\n } \r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <form>\r\n        <div class=\"form-group form-inline d-flex justify-content-start text-primary\">\r\n            <h5 class=\"font-weight-bold\">Manage Job Type</h5>\r\n        </div>\r\n        <!-- <div class=\"form-group form-inline d-flex justify-content-start\">\r\n        Search: <input class=\"form-control ml-2\" type=\"text\" [formControl]=\"filter\"/>\r\n    </div> -->\r\n    </form>\r\n\r\n    <table class=\"table table-striped \">\r\n        <thead>\r\n            <tr>\r\n\r\n                <th scope=\"col\">ID</th>\r\n                <th scope=\"col\">Job Type Name</th>\r\n\r\n                <th scope=\"col\">Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let jobType of jobTypes ;\">\r\n                <td>\r\n                    <ngb-highlight [result]=\"jobType.id \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"jobType.job_type_name \"></ngb-highlight>\r\n                </td>\r\n\r\n\r\n                <td>\r\n                  \r\n                    <button type=\"button\" class=\"btn btn-warning mr-3\" (click)=\"updateJobType(jobType.id)\">\r\n                        <span> <i class=\"fas fa-edit\"></i></span>\r\n                    </button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-danger\" (click)=\"open(content)\">\r\n                        <span> <i class=\"fas fa-trash\"></i></span>\r\n                    </button>\r\n                </td>\r\n                <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n                    <div class=\"modal-header\">\r\n                        <h4 class=\"modal-title\" id=\"modal-basic-title\"><i class=\"fas fa-trash-alt pr-3\"></i>Are you\r\n                            sure?</h4>\r\n                        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <p>Do you really want to delete these records? This process cannot be undone.</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" aria-label=\"Close\"\r\n                            (click)=\"d('Cross click')\">Cancel</button>\r\n                        <button type=\"button\" class=\"btn btn-danger\"\r\n                            (click)=\"c('Save click');deleteJobType(jobType.id,dangerTpl,successTpl)\">Save</button>\r\n                    </div>\r\n                </ng-template>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <button type=\"button\" class=\"btn btn-outline-primary mr-3\"  (click)=\"createJobType()\">\r\n        <span><i class=\"fas fa-plus pr-3\"></i>Add new job type</span>\r\n    </button>\r\n    <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n\r\n</div>\r\n<ng-template #successTpl>\r\n    <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span>\r\n</ng-template>\r\n<ng-template #dangerTpl>\r\n    <span><i class=\"fas fa-check mr-5\"></i>There got some error</span>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {ManageUserService} from '../../../_services/admin/manage-user.service';\r\nimport {User_Account} from '../../../_models/user_account';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-manage-user',\r\n  templateUrl: './manage-user.component.html',\r\n  styleUrls: ['./manage-user.component.scss']\r\n})\r\nexport class ManageUserComponent implements OnInit {\r\n  public users: Observable<User_Account[]> ;\r\n  public pageNo: number=0;\r\n  public pages: Array<number>;\r\n  constructor(\r\n    private userService: ManageUserService,\r\n    private router: Router\r\n  ) { }\r\n  setPage(i, event:any){\r\n    event.preventDefault();\r\n    this.pageNo = i;\r\n    this.getUsers();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsers();\r\n  }\r\n  getUsers(){\r\n    this.userService.getUsers(this.pageNo).\r\n    subscribe(\r\n      data=> {\r\n        console.log(data);\r\n        this.users=data['content'];\r\n        this.pages= new Array(data['totalPages']);\r\n      \r\n      },\r\n      (error)=> {\r\n        console.log(error.error.message)\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container bg-light mt-5 pt-3 pb-3 mb-5\">\r\n    <form>\r\n        <div class=\"form-group form-inline d-flex justify-content-start text-primary\">\r\n            <h5 class=\"font-weight-bold\">Manage User</h5>\r\n        </div>\r\n        <!-- <div class=\"form-group form-inline d-flex justify-content-start\">\r\n        Search: <input class=\"form-control ml-2\" type=\"text\" [formControl]=\"filter\"/>\r\n    </div> -->\r\n    </form>\r\n\r\n    <table class=\"table table-striped \">\r\n        <thead>\r\n            <tr>\r\n\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Joined At</th>\r\n                <!-- <th scope=\"col\">Action</th> -->\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let user of users  ; \">\r\n                <td>\r\n                    <ngb-highlight [result]=\"user.name \"></ngb-highlight>\r\n                </td>\r\n                <td>\r\n                    <ngb-highlight [result]=\"user.joinedAt \"></ngb-highlight>\r\n                </td>\r\n               \r\n                <!-- <td>\r\n                    <button type=\"button\" class=\"btn btn-success\" (click)=\"candidateDetails(candidate.id)\"> \r\n                        <span> <i class=\"fas fa-search\"></i></span>\r\n                    </button>\r\n                </td> -->\r\n\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <hr>\r\n    <ul class=\"nav nav-pills d-flex justify-content-center\">\r\n        <li class=\"nav-item\" *ngFor=\"let p of pages; let i=index\">\r\n            <a class=\"nav-link\" href=\"\" (click)=\"setPage(i,$event)\" [ngClass]=\"{'active':i==pageNo}\" >\r\n              {{i}}\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { JobType } from '../../../_models/jobType';\r\nimport { JobTypeService } from '../../../_services/admin/job-type.service';\r\nimport { NgbModalConfig, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n\r\n@Component({\r\n  selector: 'app-update-jobtype',\r\n  templateUrl: './update-jobtype.component.html',\r\n  styleUrls: ['./update-jobtype.component.scss'],\r\n  providers: [NgbModalConfig, NgbModal]\r\n})\r\nexport class UpdateJobtypeComponent implements OnInit {\r\n  id: number;\r\n  jobType: JobType;\r\n  submitted = false;\r\n  constructor(private route: ActivatedRoute, private router: Router,\r\n    config: NgbModalConfig, private modalService: NgbModal,\r\n    public toastService: ToastService,\r\n    private jobTypeService: JobTypeService) { }\r\n\r\n  ngOnInit(): void {\r\n     this.jobType = new JobType();\r\n\r\n     this.id = this.route.snapshot.params['id'];\r\n\r\n    this.jobTypeService.getJobTypeId(this.id)\r\n      .subscribe(data => {\r\n        console.log(data)\r\n        this.jobType = data;\r\n        \r\n      }, error => console.log(error));\r\n  }\r\n  update(dangerTpl, successTpl) {\r\n    this.jobTypeService.updateJobType(this.jobType.id,this.jobType)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.toastService.show(successTpl, { classname: 'bg-success text-light ', delay: 6000 });\r\n      }, error => { \r\n        console.log(error) ;\r\n        this.toastService.show(dangerTpl, { classname: 'bg-danger text-light', delay: 6000 });\r\n      });\r\n  \r\n   this.gotoList();\r\n   \r\n  }\r\n  onSubmit(dangerTpl, successTpl) {\r\n    this.submitted = true;\r\n    this.update(dangerTpl, successTpl);\r\n  }\r\n  gotoList() {\r\n    this.router.navigate(['admin/jobtype']);\r\n  }\r\n}\r\n","\r\n  <div class=\"container mt-5 pt-3 pb-3 mb-5 d-flex justify-content-center\">\r\n    <form class=\"border border-grey pt-3 pl-3 pr-3 pb-3\" style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n      <p class=\"dark-grey-text mb-2 h4 font-weight-light d-flex justify-content-center\">\r\n        Update Job Type\r\n      </p>\r\n      <hr/>\r\n      <div [hidden]=\"submitted\" style=\"width: 500px;\">\r\n        <form (ngSubmit)=\"onSubmit(dangerTpl, successTpl)\">\r\n          <div class=\"form-group\">\r\n            <label for=\"jobTypeName\">Job Type Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"jobTypeName\" required [(ngModel)]=\"jobType.job_type_name\"\r\n              name=\"jobTypeName\">\r\n          </div>\r\n          <div class=\"d-flex justify-content-center\">\r\n            <button (click)=\"gotoList()\" class=\"btn btn-secondary mr-3\">Cancel</button><br>\r\n            <button type=\"submit\" class=\"btn btn-success \">Submit</button>\r\n          </div>\r\n       \r\n        </form>\r\n      </div>\r\n    </form>\r\n    <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n    <ng-template #successTpl>\r\n      <span style=\"font-size: 21px;\"><i class=\"fas fa-check mr-3 \"></i>Successfully!</span>\r\n  </ng-template>\r\n  <ng-template #dangerTpl>\r\n      <span><i class=\"fas fa-check mr-5\"></i>There got some error</span>\r\n  </ng-template>\r\n  </div>\r\n  \r\n"]}