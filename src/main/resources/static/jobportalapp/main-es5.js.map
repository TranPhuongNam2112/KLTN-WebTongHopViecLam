{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.interceptor.ts","webpack:///src/app/_models/resetPassword.ts","webpack:///src/app/_models/socialusers.ts","webpack:///src/app/_models/user_account.ts","webpack:///src/app/_services/sociallogin.service.ts","webpack:///src/app/_services/toast-service.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/toast/toast.component.ts","webpack:///src/app/shared/components/change-pass/change-pass.component.ts","webpack:///src/app/shared/components/change-pass/change-pass.component.html","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/shared/components/forgot-pass/forgot-pass.component.ts","webpack:///src/app/shared/components/forgot-pass/forgot-pass.component.html","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/shared/components/notfound/notfound.component.ts","webpack:///src/app/shared/components/notfound/notfound.component.html","webpack:///src/app/shared/components/reset-password/reset-password.component.ts","webpack:///src/app/shared/components/reset-password/reset-password.component.html","webpack:///src/app/shared/components/search-job/search-job.component.ts","webpack:///src/app/shared/components/search-job/search-job.component.html","webpack:///src/app/shared/components/validate-acc/validate-acc.component.ts","webpack:///src/app/shared/components/validate-acc/validate-acc.component.html","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/forgor-password.service.ts","webpack:///src/app/shared/services/reset-password.service.ts","webpack:///src/app/shared/services/token-storage.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","webpackAsyncContextKeys","Object","module","exports","TOKEN_HEADER_KEY","AuthInterceptor","token","next","authReq","getToken","clone","headers","set","handle","authInterceptorProviders","provide","useClass","multi","ResetPassword","Socialusers","User_Account","SocialloginService","http","responce","url","post","providedIn","ToastService","toasts","textOrTpl","options","push","toast","filter","t","routes","path","redirectTo","pathMatch","component","loadChildren","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","router","tokenStorageService","title","isLoggedIn","showCandidate","showEmployer","showAdmin","showEguest","showGuest","errorMessage","error","getParameterByName","saveToken","console","log","navigate","navigationExtras","queryParams","name","replace","regex","RegExp","results","exec","location","href","decodeURIComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","toastService","ToastComponent","template","host","ChangePassComponent","FooterComponent","ForgotPassComponent","forgorPasswordService","user","submitted","isShown","responseMessage","dangerTpl","successTpl","forgotPassword","subscribe","data","toString","isSuccessful","show","classname","delay","setTimeout","save","onSubmit","LoginComponent","authService","tokenStorage","loginForm","isLoginFailed","roles","socialusers","getUser","login","warn","value","accessToken","saveUser","err","window","reload","NotfoundComponent","resetTOKEN_KEY","ResetPasswordComponent","resetPasswordService","route","resetPass","resetPasstoken","localStorage","setItem","getItem","resetPassword","response","SearchJobComponent","ValidateAccComponent","AUTH_API","httpOptions","_AuthService","credentials","email","password","companyname","industry","phonenumber","ForgorPasswordService","forgotpassUrl","responseType","params","ResetPasswordService","resetpassUrl","resetPasswordToken","TOKEN_KEY","USER_KEY","TokenStorageService","sessionStorage","clear","removeItem","JSON","stringify","parse","SharedModule","ngModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./components/admin/admin.module\": [\n\t\t\"./src/app/components/admin/admin.module.ts\",\n\t\t\"components-admin-admin-module\"\n\t],\n\t\"./components/candidate/candidate.module\": [\n\t\t\"./src/app/components/candidate/candidate.module.ts\",\n\t\t\"default~components-candidate-candidate-module~components-employer-employer-module\",\n\t\t\"common\",\n\t\t\"components-candidate-candidate-module\"\n\t],\n\t\"./components/eguest/eguest.module\": [\n\t\t\"./src/app/components/eguest/eguest.module.ts\",\n\t\t\"components-eguest-eguest-module\"\n\t],\n\t\"./components/employer/employer.module\": [\n\t\t\"./src/app/components/employer/employer.module.ts\",\n\t\t\"default~components-candidate-candidate-module~components-employer-employer-module\",\n\t\t\"components-employer-employer-module\"\n\t],\n\t\"./components/guest/guest.module\": [\n\t\t\"./src/app/components/guest/guest.module.ts\",\n\t\t\"common\",\n\t\t\"components-guest-guest-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest,  HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { TokenStorageService } from '../shared/services/token-storage.service';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private token: TokenStorageService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    let authReq = req;\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];","export class ResetPassword {\r\n    newpassword: string;\r\n    reenterednewpassword: string;  \r\n}","export class Socialusers {  \r\n    id: string;\r\n    name:string;\r\n    email:string;\r\n    photoUrl: string;\r\n    provider: string;\r\n    token?: string;\r\n}","import { Role } from './role';\r\nimport { Candidate } from './candidate';\r\n\r\nexport class User_Account {\r\n    id: number;\r\n    created_At: Date;\r\n    updatedAt: Date;\r\n    name: string;\r\n    firstname:string;\r\n    lastname: string;\r\n    email: string;\r\n    imageUrl: string;\r\n    image: string;\r\n    candidate: Candidate;\r\n    roles: Role;\r\n    enabled: boolean;\r\n    emailVerified: boolean;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocialloginService {\r\n  url;\r\n  constructor(private http: HttpClient) { }\r\n  loginGoogleCandidate(responce) {\r\n    this.url = 'http://localhost:8080/auth/loginGGForCandidate';\r\n    return this.http.post(this.url, responce);\r\n  }\r\n \r\n  loginGoogleEmployer(responce) {\r\n    this.url = 'http://localhost:8080/auth/loginGGForEmployer';\r\n    return this.http.post(this.url, responce);\r\n  }\r\n  loginFacebookCandidate(responce) {\r\n    this.url = 'http://localhost:8080/auth/loginFBForCandidate';\r\n    return this.http.post(this.url, responce);\r\n  }\r\n \r\n  loginFacebookEmployer(responce) {\r\n    this.url = 'http://localhost:8080/auth/loginFBForEmployer';\r\n    return this.http.post(this.url, responce);\r\n  }\r\n}\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastService {\r\n  toasts: any[] = [];\r\n\r\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.toasts.push({ textOrTpl, ...options });\r\n  }\r\n\r\n  remove(toast) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { GuestModule} from './components/guest/guest.module';\r\nimport { EguestModule} from './components/eguest/eguest.module';\r\nimport { CandidateModule} from './components/candidate/candidate.module';\r\nimport {EmployerModule} from './components/employer/employer.module';\r\nimport {AdminModule} from './components/admin/admin.module';\r\nimport {NotfoundComponent} from './shared/components/notfound/notfound.component';\r\nimport {ResetPasswordComponent} from './shared/components/reset-password/reset-password.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'guest', pathMatch: 'full' },\r\n  { path: 'notfound', component: NotfoundComponent },\r\n  { path: 'resetpassword', component: ResetPasswordComponent },\r\n\r\n  { //lazy loading\r\n    path: 'guest',\r\n    loadChildren: './components/guest/guest.module#GuestModule'\r\n},\r\n{ //lazy loading\r\n  path: 'eguest',\r\n  loadChildren: './components/eguest/eguest.module#EguestModule'\r\n},\r\n{ //lazy loading\r\n  path: 'candidate',\r\n  loadChildren: './components/candidate/candidate.module#CandidateModule'\r\n},\r\n{ //lazy loading\r\n  path: 'employer',\r\n  loadChildren: './components/employer/employer.module#EmployerModule'\r\n},\r\n{ //lazy loading\r\n  path: 'admin',\r\n  loadChildren: './components/admin/admin.module#AdminModule'\r\n},\r\n\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: \r\n  [RouterModule.forRoot(routes,{\r\n    preloadingStrategy: PreloadAllModules\r\n  }),\r\n    // GuestRoutingModule\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { TokenStorageService } from './shared/services/token-storage.service';\r\nimport { Role } from './_models/role';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'jobportalapp';\r\n  private roles: String[];\r\n  isLoggedIn = false;\r\n  showCandidate = false;\r\n  showEmployer = false;\r\n  showAdmin = false;\r\n  showEguest = false;\r\n  showGuest = true;\r\n  errorMessage = '';\r\n  error = '';\r\n\r\n  constructor(\r\n    private router: Router, private tokenStorageService: TokenStorageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    let token = this.getParameterByName(\"token\");\r\n    // let resetPasstoken = this.getParameterByName(\"reset_token\");\r\n    this.error = this.getParameterByName(\"error\");\r\n    if (token) {\r\n      this.isLoggedIn = true;\r\n      this.tokenStorageService.saveToken(token);\r\n      console.log(\"access_token\" + token);\r\n      this.router.navigate(['/candidate']);\r\n    }\r\n\r\n    let navigationExtras: NavigationExtras = {\r\n      queryParams: {\r\n        error: this.getParameterByName(\"error\")\r\n      }\r\n    }\r\n    if (this.error) { this.router.navigate(['/guest/login'], navigationExtras); }\r\n    // if (resetPasstoken) {\r\n    //   // this.isLoggedIn = true;\r\n    //   localStorage.setItem('resetPass_token',resetPasstoken);\r\n    //   console.log(\"resetPass_token\" + localStorage.getItem('resetPass_token'));\r\n    //   this.router.navigate(['/resetpassword']);\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    // if (this.isLoggedIn) {\r\n    //   const user = this.tokenStorageService.getUser();\r\n    //   this.roles = user.roles;\r\n    //   console.log(this.roles);\r\n    //   this.showCandidate = this.roles.includes('ROLE_CANDIDATE');\r\n    //   this.showEmployer = this.roles.includes('ROLE_EMPLOYER');\r\n    //   this.showAdmin= this.roles.includes ('ROLE_ADMIN');\r\n    //   // this.showCandidate = this.roles.some(i=>i.name.includes('ROLE_CANDIDATE'));\r\n    //   // this.showEmployer = this.roles.some(i=>i.name.includes('ROLE_EMPLOYER'));\r\n    //   // this.showAdmin = this.roles.some(i=>i.name.includes('ROLE_ADMIN'));\r\n    //   // console.log(\"canddiate\"+this.showCandidate);\r\n    //   // console.log(\"employer\"+this.showEmployer);\r\n    //   // console.log(\"admin\"+this.showAdmin);\r\n\r\n  }\r\n  //   if (this.showCandidate) {\r\n  //     this.router.navigate(['/candidate']);\r\n  //   }\r\n  //   else if (this.showEmployer) {\r\n  //     this.router.navigate(['/employer']);\r\n  //   }\r\n  //   else if (this.showAdmin){\r\n  //     this.router.navigate(['/admin']);\r\n  //   }\r\n  // }\r\n  public getParameterByName(name: string): string {\r\n    // if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\r\n    var results = regex.exec(location.href);\r\n    // results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n\r\n}\r\n","<!-- <app-c-register></app-c-register>\r\n<app-c-login></app-c-login> -->\r\n<!-- <app-e-register></app-e-register> -->\r\n<!-- <app-e-login></app-e-login> -->\r\n<!-- <router-outlet></router-outlet> -->\r\n<!-- <app-header-for-guest></app-header-for-guest> -->\r\n<!-- <app-header-for-candidate></app-header-for-candidate>\r\n<app-guest-dashboard></app-guest-dashboard> \r\n<app-footer></app-footer>   -->\r\n<!-- <app-validate-acc></app-validate-acc> -->\r\n<!-- <app-change-pass></app-change-pass> -->\r\n\r\n\r\n\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n //import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport {SharedModule} from './shared/shared.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { authInterceptorProviders } from './_helpers/auth.interceptor';\r\n\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';  \r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login'; \r\n\r\n//import {HeaderForEmployerComponent} from './shared/components/header-for-employer/header-for-employer.component';\r\n// import {HeaderForCandidateComponent} from './shared/components/header-for-candidate/header-for-candidate.component';\r\n// export function socialConfigs() {  \r\n//   const config = new AuthServiceConfig(  \r\n//     [  \r\n//       {  \r\n//         id: FacebookLoginProvider.PROVIDER_ID,  \r\n//         provider: new FacebookLoginProvider('2946602362090073')  \r\n//       },  \r\n//       {  \r\n//         id: GoogleLoginProvider.PROVIDER_ID,  \r\n//         provider: new GoogleLoginProvider('1067771668515-cl2e57cemvuvu2cl24do7n2d8gcv6err.apps.googleusercontent.com')  \r\n//       }  \r\n//     ]  \r\n//   );  \r\n//   return config;  \r\n// } \r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  \r\n    //HeaderForEmployerComponent,\r\n    // HeaderForCandidateComponent\r\n  ],\r\n  imports: [\r\n    SharedModule.forRoot(),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    // GuestModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n  \r\n\r\n   \r\n  ],\r\n  providers: [ \r\n    authInterceptorProviders,\r\n    // AuthService,  \r\n    // {  \r\n    //   provide: AuthServiceConfig,  \r\n    //   useFactory: socialConfigs  \r\n    // }\r\n  \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, TemplateRef } from '@angular/core';\r\nimport {ToastService} from '../../_services/toast-service.service';\r\n@Component({\r\n  selector: 'app-toasts ',\r\n  template: `\r\n  <ngb-toast\r\n    *ngFor=\"let toast of toastService.toasts\"\r\n    [class]=\"toast.classname\"\r\n    [autohide]=\"true\"\r\n    [delay]=\"toast.delay || 5000\"\r\n    (hide)=\"toastService.remove(toast)\"\r\n  >\r\n    <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\r\n      <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\r\n    </ng-template>\r\n\r\n    <ng-template #text>{{ toast.textOrTpl }}</ng-template>\r\n  </ngb-toast>\r\n`,\r\nhost: {'[class.ngb-toasts]': 'true'}\r\n})\r\nexport class ToastComponent {\r\n\r\n  constructor(public toastService: ToastService) { }\r\n\r\n  isTemplate(toast) { return toast.textOrTpl instanceof TemplateRef; }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-change-pass',\r\n  templateUrl: './change-pass.component.html',\r\n  styleUrls: ['./change-pass.component.scss']\r\n})\r\nexport class ChangePassComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"view heavy-rain-gradient\"> -->\r\n<!-- Default form login -->\r\n<!-- <div class=\"container mt-5 pt-5\"> -->\r\n<div class=\"view border rounded border-weight-white\">\r\n    <div class=\"custom pl-5 pr-5 \">\r\n        <form class=\" border border-grey p-5 cloudy-knoxville-gradient\">\r\n            <p class=\"text-center dark-grey-text h4 mb-5 \">Change password</p>\r\n            <label class=\"text-left text-primary h6 mb-3 \">New password*</label>\r\n            <input type=\"password\" id=\"defaultLoginFormPassword\" class=\"form-control mb-4\" placeholder=\"New Password\">\r\n            <label class=\"text-left text-primary h6 mb-3\">Confirm new password*</label>\r\n            <input type=\"confirm-password\" id=\"defaultLoginFormPassword\" class=\"form-control mb-4\"\r\n                placeholder=\"Confirm new password\">\r\n            <button class=\"btn btn-primary my-4\" type=\"submit\"><strong>Save</strong></button>\r\n        </form>\r\n    </div>\r\n    <!-- Default form login -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Footer -->\r\n<footer class=\"page-footer footer-expand-lg font-small unique-color-dark pt-4\">\r\n\r\n    <!-- Footer Links -->\r\n    <div class=\"container-fluid text-center text-md-left\">\r\n\r\n        <!-- Grid row -->\r\n        <div class=\"row\">\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-4 mt-md-0 mt-3 \">\r\n\r\n                <!-- Content -->\r\n                <h5 class=\"text-uppercase\">Contact</h5>\r\n                <ul class=\"list-unstyled mr-auto    \" >\r\n                    <li>\r\n                        01 Vo Van Ngan\r\n                    </li>\r\n                    <li>\r\n                        Phone: 0392799990\r\n                    </li>\r\n                    <li>\r\n                        Mail: tranntn269@gmail.com\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n            <!-- Grid column -->\r\n\r\n            <hr class=\"clearfix w-100 d-md-none pb-3\">\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-4 mb-md-0 mb-3\">\r\n\r\n                <!-- Links -->\r\n                <h5 class=\"text-uppercase\">Founder</h5>\r\n\r\n                <ul class=\"list-unstyled\">\r\n                    <li>\r\n                        <a href=\"#!\">Tran Phuong Nam</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"#!\">Nguyen Thi Ngoc Tran</a>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n            <!-- Grid column -->\r\n\r\n            <!-- Grid column -->\r\n            <div class=\"col-md-4 mb-md-0 mb-3\">\r\n\r\n                <!-- Links -->\r\n           \r\n                \r\n            </div>\r\n            <!-- Grid column -->\r\n        </div>\r\n        <!-- Grid row -->\r\n    </div>\r\n    <!-- Footer Links -->\r\n    <!-- Copyright -->\r\n    <div class=\"footer-copyright text-center py-3\">© 2020 Copyright\r\n    </div>\r\n    <!-- Copyright -->\r\n</footer>\r\n<!-- Footer -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User_Account } from '../../../_models/user_account';\r\nimport { ForgorPasswordService } from '../../services/forgor-password.service';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\n@Component({\r\n  selector: 'forgot-pass',\r\n  templateUrl: './forgot-pass.component.html',\r\n  styleUrls: ['./forgot-pass.component.scss']\r\n})\r\nexport class ForgotPassComponent implements OnInit {\r\n  user: User_Account = new User_Account();\r\n  submitted = false;\r\n  isSuccessful: boolean;\r\n  isShown: boolean = false;\r\n  responseMessage='';\r\n  constructor(\r\n    private forgorPasswordService: ForgorPasswordService,\r\n    private router: Router,\r\n    public toastService: ToastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  resetEmail(): void {\r\n    this.submitted = false;\r\n    this.user = new User_Account();\r\n  }\r\n  save(dangerTpl, successTpl) {\r\n    this.forgorPasswordService.forgotPassword(this.user)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.responseMessage=data.toString();\r\n        if(data===\"Please check your email for further instructions.\"){\r\n          this.isSuccessful=true;\r\n          this.toastService.show(successTpl, { classname: 'bg-success text-light mt-5 ', delay: 6000 });\r\n          console.log(this.isSuccessful);\r\n        } \r\n        else {\r\n          this.isSuccessful=false;\r\n          this.toastService.show(dangerTpl, { classname: 'bg-danger text-light mt-5', delay: 6000 });\r\n        }\r\n      });\r\n     this.user = new User_Account();\r\n   \r\n  }\r\n  toggleShow() {\r\n    this.isShown = true;\r\n    setTimeout(() => {\r\n      this.isShown = false;\r\n    }, 3000)\r\n  }\r\n  onSubmit(dangerTpl, successTpl) {\r\n    this.submitted = true;\r\n    this.save(dangerTpl, successTpl);\r\n  }\r\n\r\n}\r\n","<div class=\"view\">\r\n    <!-- Default form login -->\r\n    <div class=\"container mt-5 pt-5\">\r\n\r\n        <form  (ngSubmit)=\"onSubmit(dangerTpl, successTpl)\"\r\n            class=\"text-center border border-grey p-5\" style=\"background-color:rgba(158, 158, 158, 0.1) ;\">\r\n            <p class=\"dark-grey-text h4 mb-2\">Forgot your password?</p>\r\n            <p class=\"grey-text\">We'll send password reset instructions</p>\r\n            <input *ngIf=\"!isSuccessful\" id=\"resetEmail\" name=\"resetEmail\" type=\"email\" id=\"defaultLoginFormEmail\" class=\"form-control mb-4\"\r\n             required [(ngModel)]=\"user.email\"     placeholder=\"{{user.email}}\">\r\n                <div class=\"alert alert-success mt-3\" *ngIf=\"isSuccessful\">\r\n                    {{responseMessage}}\r\n                    <a [href]=\"'https://mail.google.com/mail/'\" target=\"_blank\"><strong>Go to\r\n                            gmail</strong></a>\r\n                </div>\r\n                <div  class=\"d-flex justify-content-center\" *ngIf=\" isShown\" >\r\n                    <img class=\"loader\" src=\"../assets/images/loader3.svg\">\r\n                </div>\r\n            <button\r\n             *ngIf=\"!isSuccessful\" mdbBtn color=\"danger\" class=\"my-4\" type=\"submit\"\r\n             (click)=\"toggleShow()\"\r\n             ><strong>Reset Password</strong></button>\r\n        </form>\r\n        <!-- <div class=\"container mt-5 pt-5\" style=\"height: 60vh;\" *ngIf=\"isSuccessful\"> -->\r\n           \r\n        <!-- </div> -->\r\n        <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n        <ng-template #successTpl>\r\n            <span style=\"font-size: 18px;\"><i class=\"fas fa-check mr-3 \"></i>Reset successful!</span>\r\n        </ng-template>\r\n        <ng-template #dangerTpl>\r\n            <span style=\"font-size: 18px;\"><i class=\"fas fa-exclamation-triangle mr-3\"></i>{{responseMessage}}</span>\r\n        </ng-template>\r\n    </div>\r\n    <!-- Default form login -->\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\n\r\nimport { _AuthService } from '../../services/auth.service';\r\nimport { TokenStorageService } from '../../services/token-storage.service';\r\n// import { GoogleLoginProvider, FacebookLoginProvider, AuthService } from 'angularx-social-login';\r\n// import { SocialLoginModule, AuthServiceConfig } from 'angularx-social-login';\r\nimport { Socialusers } from '../../../_models/socialusers'\r\nimport { SocialloginService } from '../../../_services/sociallogin.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  // loginForm:  FormGroup;\r\n  loginForm: any = {};\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n  //social login start\r\n  response;\r\n  socialusers = new Socialusers();\r\n  //social login end\r\n  constructor(\r\n    private authService: _AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    //  social login start\r\n    // public OAuth: AuthService,\r\n    private SocialloginService: SocialloginService,\r\n    private router: Router\r\n    //  social login end\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorage.getUser().roles;\r\n    }\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.authService.login(this.loginForm).subscribe(\r\n      data => {\r\n        console.warn(\"sdsdsd\" + this.loginForm.value);\r\n        this.tokenStorage.saveToken(data.accessToken);\r\n        this.tokenStorage.saveUser(data);\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorage.getUser().roles;\r\n        // this.reloadPage();\r\n        console.warn(\"sdsdsd\" + this.loginForm.value);\r\n      },\r\n      err => {\r\n        // this.errorMessage = err.error.message;\r\n           this.errorMessage = \"Error email or password\";\r\n        this.isLoginFailed = true;\r\n\r\n      }\r\n    );\r\n    console.warn(this.loginForm.value);\r\n  }\r\n  reloadPage() {\r\n    window.location.reload();\r\n  }\r\n  //social login start\r\n  // public socialSignIn(socialProvider: string) {\r\n  //   let socialPlatformProvider;\r\n  //   if (socialProvider === 'google') {\r\n  //     socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\r\n  //   }\r\n  //   this.OAuth.signIn(socialPlatformProvider).then(socialusers => {\r\n  //     console.log(socialProvider, socialusers);\r\n  //     console.log(socialusers);\r\n  //     this.Savesresponse(socialusers);\r\n  //   });\r\n  // }\r\n  // Savesresponse(socialusers: Socialusers) {\r\n  //   this.SocialloginService.loginGoogleCandidate(socialusers).subscribe((res: any) => {\r\n  //     debugger;\r\n  //     console.log(res);\r\n  //     this.socialusers = res;\r\n  //     this.response = res.userDetail;\r\n  //     localStorage.setItem('socialusers', JSON.stringify(this.socialusers));\r\n  //     console.log(localStorage.setItem('socialusers', JSON.stringify(this.socialusers)));\r\n  //     this.router.navigate(['/candidate']);\r\n  //   }, err => {\r\n  //     this.errorMessage = err.error.message;\r\n\r\n  //   }\r\n  //   )\r\n  // }\r\n  //social login end\r\n\r\n}\r\n","<!-- Full Page Login -->\r\n<div class=\"view\">\r\n    <!-- Mask & flexbox options-->\r\n    <div class=\"mask rgba-blue-grey-strong d-flex justify-content-center align-items-center\">\r\n        <!-- Content -->\r\n        <div class=\"container\">\r\n            <!--Grid row-->\r\n            <div class=\"row pt-lg-5 mt-lg-5\">\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 mb-5 mt-md-0 mt-5 white-text text-center text-md-left wow fadeInLeft\"\r\n                    data-wow-delay=\"0.3s\">\r\n                    <h1 class=\"display-4 font-weight-bold\">Helping Your Business Move Up</h1>\r\n                    <hr class=\"hr-light\">\r\n                    <h6 class=\"mb-3\">get your job matched with the right candidate .</h6>\r\n                    <!-- <a mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect [routerLink]=\"['../']\">Learn more</a> -->\r\n                    <a mdbBtn color=\"white\" outline=\"true\" mdbWavesEffect>Learn more</a>\r\n                </div>\r\n                <!--Grid column-->\r\n                <!--Grid column-->\r\n                <div class=\"col-md-6 col-xl-5 mb-4\">\r\n                    <!--Form-->\r\n                    <mdb-card class=\"wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                        <mdb-card-body class=\"z-depth-2\">\r\n                            <form *ngIf=\"!isLoggedIn\" name=\"loginForm\" (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n                                #f=\"ngForm\" novalidate>\r\n                                <div class=\"text-center\">\r\n                                    <h3 class=\"blue-text\">\r\n                                        <strong>Sign in</strong>\r\n                                    </h3>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <div class=\"row d-flex justify-content-center\">\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <!--Facebook-->\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" color=\"fb\" class=\"btn btn-indigo\"\r\n                                            mdbWavesEffect> <span>Facebook</span></button>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-xs-6 d-flex justify-content-center\">\r\n                                        <button type=\"button\" mdbBtn size=\"lg\" mdbBtn color=\"gplus\"\r\n                                            class=\"btn btn-danger\" mdbWavesEffect \r\n                                         \r\n                                            > Google\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    style=\"width: 100%; height: 20px; border-bottom: 1px ridge ; text-align: center; margin-bottom: 20px;\">\r\n                                    <span style=\"font-size: 14px; background-color: #ffffff; padding: 0 10px;\">\r\n                                        or\r\n                                    </span>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"email\">Email</label>\r\n                                    <input type=\"text\" class=\"form-control\" name=\"email\" [(ngModel)]=\"loginForm.email\"\r\n                                        required email #email=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && email.invalid\">\r\n                                        <div *ngIf=\"email.errors.required\">Email is required</div>\r\n                                        <div *ngIf=\"email.errors.email\">Email must be a valid email address</div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"password\">Password</label>\r\n                                    <input type=\"password\" class=\"form-control\" name=\"password\"\r\n                                        [(ngModel)]=\"loginForm.password\" required minlength=\"8\" #password=\"ngModel\" />\r\n                                    <div class=\"alert alert-danger\" role=\"alert\"\r\n                                        *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div *ngIf=\"password.errors.required\">Password is required</div>\r\n                                        <div *ngIf=\"password.errors.minlength\">\r\n                                            Password must be at least 8 characters\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"d-flex justify-content-end\">\r\n                                    <a class=\"text-primary\">Forgot password?</a>\r\n                                </div>\r\n                                <div class=\"text-center mt-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <button class=\"btn btn-primary btn-block\">\r\n                                            Sign in\r\n                                        </button>\r\n                                    </div>\r\n                                    <!-- Register -->\r\n                                    <!-- <p>Don't have an accout yet? -->\r\n                                    <!-- <a [routerLink]=\"['../register']\"><strong>Register now!</strong></a> -->\r\n                                    <!-- <a><strong>Register now!</strong></a>\r\n                                    </p> -->\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"f.submitted && isLoginFailed\">\r\n                                        Login failed: {{ errorMessage }}\r\n                                       \r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                            <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n                                <!-- Logged in as {{ roles }}. -->\r\n                                Login successful!\r\n                            </div>\r\n                        </mdb-card-body>\r\n                    </mdb-card>\r\n                    <!--/.Form-->\r\n                </div>\r\n                <!--Grid column-->\r\n            </div>\r\n            <!--Grid row-->\r\n        </div>\r\n        <!-- Content -->\r\n    </div>\r\n    <!-- Mask & flexbox options-->\r\n</div>\r\n<!-- Full Page Login -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1920 1080\">\r\n    <title>404</title>\r\n    <g id=\"Layer_12 yellow-back-fig\" data-name=\"Layer 12\">\r\n      <path class=\"cls-1\" d=\"M600.87,872H156a4,4,0,0,0-3.78,4.19h0a4,4,0,0,0,3.78,4.19H600.87a4,4,0,0,0,3.78-4.19h0A4,4,0,0,0,600.87,872Z\"/>\r\n      <rect class=\"cls-1\" x=\"680.91\" y=\"871.98\" width=\"513.38\" height=\"8.39\" rx=\"4.19\" ry=\"4.19\"/>\r\n      <path class=\"cls-1\" d=\"M1480,876.17h0c0,2.32,2.37,4.19,5.3,4.19h350.61c2.93,0,5.3-1.88,5.3-4.19h0c0-2.32-2.37-4.19-5.3-4.19H1485.26C1482.33,872,1480,873.86,1480,876.17Z\"/>\r\n      <rect class=\"cls-1\" x=\"492.21\" y=\"920.64\" width=\"249.8\" height=\"8.39\" rx=\"4.19\" ry=\"4.19\"/>\r\n      <path class=\"cls-1\" d=\"M1549.14,924.84h0a4.19,4.19,0,0,0-4.19-4.19H1067.46a14.66,14.66,0,0,1,.35,3.21v1A4.19,4.19,0,0,0,1072,929h472.94A4.19,4.19,0,0,0,1549.14,924.84Z\"/>\r\n      <path class=\"cls-1\" d=\"M865.5,924.84h0a4.19,4.19,0,0,0,4.19,4.19h82.37a12.28,12.28,0,0,1-.19-2v-2.17a4.19,4.19,0,0,0-4.19-4.19h-78A4.19,4.19,0,0,0,865.5,924.84Z\"/>\r\n      <rect class=\"cls-1\" x=\"915.6\" y=\"981.47\" width=\"54.72\" height=\"8.39\" rx=\"4.19\" ry=\"4.19\"/>\r\n      <path class=\"cls-1\" d=\"M730.33,985.67h0c0,2.32,4.23,4.19,9.44,4.19h104.3c5.22,0,9.44-1.88,9.44-4.19h0c0-2.32-4.23-4.19-9.44-4.19H739.78C734.56,981.47,730.33,983.35,730.33,985.67Z\"/>\r\n      <rect class=\"cls-1\" x=\"997.06\" y=\"981.47\" width=\"78.11\" height=\"8.39\" rx=\"4.19\" ry=\"4.19\"/>\r\n      \r\n     <g id=\"round-conf\">\r\n      <path class=\"cls-1 circle c1\" d=\"M536.41,155.14a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,536.41,155.14Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,536.41,183.81Z\"/>\r\n      <path class=\"cls-1 circle c2\" d=\"M1345.09,82.44a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,1345.09,82.44Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,1345.09,111.12Z\"/>\r\n      <path class=\"cls-1 circle c3\" d=\"M70.12,363A17.77,17.77,0,1,0,87.89,380.8,17.77,17.77,0,0,0,70.12,363Zm0,28.68A10.9,10.9,0,1,1,81,380.8,10.9,10.9,0,0,1,70.12,391.7Z\"/>\r\n      <path class=\"cls-1 circle c4\" d=\"M170.47,751.82a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,170.47,751.82Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,170.47,780.5Z\"/>\r\n      <path class=\"cls-1 circle c5\" d=\"M1457.34,762.73a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,1457.34,762.73Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,1457.34,791.4Z\"/>\r\n      <path class=\"cls-1 circle c6\" d=\"M1829.15,407.49a17.77,17.77,0,1,0,17.77,17.77A17.77,17.77,0,0,0,1829.15,407.49Zm0,28.68a10.9,10.9,0,1,1,10.9-10.9A10.9,10.9,0,0,1,1829.15,436.17Z\"/>\r\n      </g>\r\n    </g>\r\n    <g id=\"fortyfour\" data-name=\"Layer 2\">\r\n      <g class=\"four a\">\r\n        \r\n        <rect class=\"cls-2\" x=\"233.74\" y=\"391.14\" width=\"120.71\" height=\"466.29\" rx=\"57.1\" ry=\"57.1\" transform=\"translate(918.39 330.19) rotate(90)\"/>\r\n          \r\n        <rect class=\"cls-3\" x=\"333.83\" y=\"475.1\" width=\"120.71\" height=\"396.88\" rx=\"60.36\" ry=\"60.36\"/>\r\n       \r\n        <rect class=\"cls-3\" x=\"197.13\" y=\"122.89\" width=\"120.71\" height=\"604.75\" rx=\"60.36\" ry=\"60.36\" transform=\"translate(290.49 -70.78) rotate(35)\"/>\r\n    \r\n      </g>\r\n      <g class=\"four b\">\r\n  \r\n        <rect class=\"cls-2\" x=\"1558.84\" y=\"391.91\" width=\"120.71\" height=\"466.29\" rx=\"57.1\" ry=\"57.1\" transform=\"translate(2244.26 -994.14) rotate(90)\"/>\r\n    \r\n     \r\n        <rect class=\"cls-3\" x=\"1658.92\" y=\"475.87\" width=\"120.71\" height=\"396.88\" rx=\"60.36\" ry=\"60.36\"/>\r\n  \r\n        <rect class=\"cls-3\" x=\"1522.22\" y=\"123.66\" width=\"120.71\" height=\"604.75\" rx=\"60.36\" ry=\"60.36\" transform=\"translate(530.57 -830.68) rotate(35)\"/>\r\n   \r\n      </g>\r\n      <path class=\"cls-3\" id=\"ou\" d=\"M956.54,168.2c-194.34,0-351.89,157.55-351.89,351.89S762.19,872,956.54,872s351.89-157.55,351.89-351.89S1150.88,168.2,956.54,168.2Zm0,584.49c-128.46,0-232.6-104.14-232.6-232.6s104.14-232.6,232.6-232.6,232.6,104.14,232.6,232.6S1085,752.69,956.54,752.69Z\"/>\r\n    </g>\r\n    <g id=\"umbrella\" data-name=\"Layer 3\">\r\n      <g>\r\n        <circle class=\"cls-4\" cx=\"1187.53\" cy=\"240.3\" r=\"7.66\" transform=\"translate(236.36 990.8) rotate(-49.71)\"/>\r\n        <g>\r\n          <path class=\"cls-5\" d=\"M1219.56,359.67l55,100.52c32.7-48.48-6.87-142.43-91.75-214.38-84.41-71.55-183-95.33-225.81-56l114.21,44.14Z\"/>\r\n          <path class=\"cls-6\" d=\"M1182.79,245.81c-84.41-71.55-183-95.33-225.81-56l114.21,44.14Z\"/>\r\n          <polygon class=\"cls-7\" points=\"1182.79 245.81 1071.19 233.91 1219.56 359.67 1182.79 245.81\"/>\r\n        </g>\r\n        <polygon class=\"cls-8\" points=\"1180.91 409.02 1274.54 460.19 1219.56 359.67 1071.19 233.91 956.98 189.76 1021.95 274.29 1180.91 409.02\"/>\r\n        <g>\r\n          <rect class=\"cls-4\" x=\"997.45\" y=\"358.35\" width=\"175.58\" height=\"5.1\" transform=\"translate(108.21 955.38) rotate(-49.71)\"/>\r\n          <rect class=\"cls-4\" x=\"1028.09\" y=\"399.36\" width=\"21.46\" height=\"32.27\" rx=\"10.73\" ry=\"10.73\" transform=\"translate(515.04 -573.16) rotate(40.29)\"/>\r\n        </g>\r\n      </g>\r\n    </g>\r\n    <g id=\"pillow\" data-name=\"Layer 4\">\r\n      <path class=\"cls-1\" d=\"M754,627.07c7,.54,12.92-2.82,13.35-7.59s-4.95-9.24-12-9.87a18.55,18.55,0,0,0-2.17,0l-74.9-81.64c0-.1,0-.19,0-.29,0-7.09-4-12.83-8.8-12.81s-8.75,5.77-8.73,12.87c0,0,0,.09,0,.13l-50.21,46.07h-.09c-7.06-.63-13.14,2.77-13.57,7.59s4.87,9.16,11.85,9.84l76.08,82.92s0,0,0,.06c0,7.09,4,12.83,8.8,12.81s8.65-5.66,8.71-12.65Z\"/>\r\n      <path class=\"cls-9\" d=\"M669.46,514.82c-4.77-.83-8.75,5.77-8.73,12.87,0,0,0,.09,0,.13l-50.21,46.07h-.09c-7.06-.63-13.14,2.77-13.57,7.59s4.87,9.16,11.85,9.84l76.08,82.92s0,0,0,.06c0,7.09,4,12.83,8.8,12.81s8.65-5.66,8.71-12.65C570.55,573,702.07,520.47,669.46,514.82Z\"/>\r\n    </g>\r\n    <g id=\"cup\" data-name=\"Layer 7\">\r\n      <polygon class=\"cls-1\" points=\"1173.69 748.21 1140.52 715.42 1195.79 647.35 1241.13 692.16 1173.69 748.21\"/>\r\n      <polygon class=\"cls-8\" points=\"1173.69 748.21 1140.52 715.42 1143.93 711.27 1177.81 744.75 1173.69 748.21\"/>\r\n      <polygon class=\"cls-5\" points=\"1194.68 731.46 1157.04 694.24 1183.8 661.7 1226.91 704.32 1194.68 731.46\"/>\r\n      <g class=\"cls-10\">\r\n        <path class=\"cls-8\" d=\"M1176.32,667.78h0a4.19,4.19,0,0,1,4.19,4.19v33.54a0,0,0,0,1,0,0h-8.38a0,0,0,0,1,0,0V672a4.19,4.19,0,0,1,4.19-4.19Z\" transform=\"translate(822.53 -628.67) rotate(44.67)\"/>\r\n        <path class=\"cls-8\" d=\"M1172.73,709.7l23.58-23.85a4.19,4.19,0,0,1,5.92,0h0a4.19,4.19,0,0,1,0,5.92l-23.58,23.85Z\"/>\r\n        <path class=\"cls-8\" d=\"M1185.11,722.09l23.58-23.85a4.19,4.19,0,0,1,5.92,0h0a4.19,4.19,0,0,1,0,5.92L1191.06,728Z\"/>\r\n      </g>\r\n      <path class=\"cls-5\" d=\"M1197.85,660.5h45.69a5.7,5.7,0,0,1,5.7,5.7v8.32a0,0,0,0,1,0,0h-57.09a0,0,0,0,1,0,0v-8.32A5.7,5.7,0,0,1,1197.85,660.5Z\" transform=\"translate(829.53 -667.66) rotate(45)\"/>\r\n      <path class=\"cls-8\" d=\"M1191.49,664.74h53.94a5.25,5.25,0,0,1,5.25,5.25v4.79a0,0,0,0,1,0,0h-64.44a0,0,0,0,1,0,0V670a5.25,5.25,0,0,1,5.25-5.25Z\" transform=\"translate(822.83 -663.17) rotate(44.67)\"/>\r\n    </g>\r\n    <g id=\"clock\" data-name=\"Layer 8\">\r\n  \r\n      <circle class=\"cls-5\" cx=\"847.7\" cy=\"247.59\" r=\"74.66\" transform=\"translate(-32.91 314.05) rotate(-20.6)\"/>\r\n      <circle class=\"cls-1\" cx=\"847.7\" cy=\"247.59\" r=\"63.44\" transform=\"translate(-32.91 314.05) rotate(-20.6)\"/>\r\n      <rect class=\"cls-3 clock-hand-1\" x=\"845\" y=\"189.5\" width=\"6.04\" height=\"58\" rx=\"3.02\" ry=\"3.02\" />\r\n      <rect class=\"cls-3 clock-hand-2\" x=\"845\" y=\"209.5\" width=\"6.04\" height=\"38\" rx=\"3.02\" ry=\"3.02\" transform=\"translate(1611.22 -230.4) rotate(130.4)\"/>\r\n          <circle class=\"cls-3\" cx=\"847.7\" cy=\"247.59\" transform=\"translate(-32.91 314.05) rotate(-20.6)\" r=\"3\" />\r\n    </g>\r\n    <g id=\"box\" data-name=\"Layer 9\">\r\n      <g id=\"box-top\"><polygon class=\"cls-8\" points=\"569.71 382.28 653.74 329.39 747.13 320.1 679.2 369.85 569.71 382.28\"></polygon>    \r\n      <polygon class=\"cls-5\" points=\"691.95 367.2 570.87 392.34 565.32 383.35 687.8 357.45 691.95 367.2\"></polygon>\r\n  \r\n      \r\n      <polygon class=\"cls-5\" points=\"661.54 337.48 570.87 392.34 562.42 378.92 652.25 322.38 658.12 321.34 661.54 337.48\"></polygon><polygon class=\"cls-7\" points=\"661.54 337.48 570.87 392.34 562.42 378.92 652.25 322.38 658.12 321.34 661.54 337.48\"></polygon><polygon class=\"cls-5\" points=\"747.13 320.1 661.54 337.48 652.25 322.38 738.4 307.1 747.13 320.1\"></polygon>\r\n      </g>\r\n        <path class=\"cls-5\" d=\"M588.28,420.26s3.44,5.2,5.19,8l43.1,68.48,158.81-100-43.1-68.48q-2.63-4.17-5.47-8Z\"></path>\r\n        <path class=\"cls-7\" d=\"M588.28,420.26s3.44,5.2,5.19,8l43.1,68.48,158.81-100-43.1-68.48q-2.63-4.17-5.47-8Z\"></path>\r\n      <rect class=\"cls-5\" x=\"693.73\" y=\"335.51\" width=\"83.99\" height=\"90.58\" transform=\"translate(-89.78 450.43) rotate(-32.19)\"></rect>\r\n      \r\n      \r\n      \r\n    </g>\r\n    \r\n    <g id=\"rucksack\" data-name=\"Layer 6\">\r\n      <g id=\"stripe\"><path class=\"cls-12\" d=\"M1200.32,473.91h0a13.74,13.74,0,0,0-18.41,7.44l-55,129.86a14.82,14.82,0,0,0,7.13,19.21h0a13.74,13.74,0,0,0,18.41-7.44l55-129.86A14.82,14.82,0,0,0,1200.32,473.91Z\"/>\r\n      <path class=\"cls-13\" d=\"M1202.18,606.34h0a14,14,0,0,0-16.18-11.8l-48.83,9c-7.59,1.4-12.66,9-11.31,16.89h0a14,14,0,0,0,16.18,11.8l48.83-9C1198.46,621.82,1203.53,614.26,1202.18,606.34Z\"/>\r\n      </g>\r\n      <path class=\"cls-8\" d=\"M1300.86,603l-122.93,22.74-15.44-90.91c-5.75-33.86,15.89-66.17,48.34-72.18l11.58-2.08c32.45-6,57.26,17.66,63,51.51Z\"/>\r\n      <path class=\"cls-1\" d=\"M1307,601.91l-112.32,20.78-15.9-93.61c-5.5-32.36,15.19-63.25,46.2-69h0c31-5.74,60.62,15.85,66.12,48.21Z\"/>\r\n      <path class=\"cls-8\" d=\"M1296.76,603.8,1215,618.92l-4.89-28.77c-2.11-12.42,5.83-24.27,17.73-26.47l38.67-7.15c11.9-2.2,23.26,6.08,25.37,18.5Z\"/>\r\n      <path class=\"cls-5\" d=\"M1296.76,603.8l-73.41,13.58-4.92-29c-2-11.62,5.45-22.72,16.6-24.78l33.07-6.12c11.14-2.06,21.77,5.69,23.75,17.32Z\"/>\r\n      <path class=\"cls-4\" d=\"M1231.77,469.69l-13.42,2.48a10.25,10.25,0,0,0-8,11.92l2.38,14a9.9,9.9,0,0,0,11.42,8.33l13.42-2.48a10.25,10.25,0,0,0,8-11.92l-2.38-14A9.9,9.9,0,0,0,1231.77,469.69Zm7.17,20.84a6.39,6.39,0,0,1-5,7.43l-8.36,1.55a6.17,6.17,0,0,1-7.12-5.19l-1.48-8.73a6.39,6.39,0,0,1,5-7.43l8.36-1.55a6.17,6.17,0,0,1,7.12,5.19Z\"/>\r\n      <path class=\"cls-14\" d=\"M1233.74,471.13l-13.42,2.48a10.25,10.25,0,0,0-8,11.92l2.38,14a9.9,9.9,0,0,0,11.42,8.33l13.42-2.48a10.25,10.25,0,0,0,8-11.92l-2.38-14A9.9,9.9,0,0,0,1233.74,471.13Zm7.17,20.84a6.39,6.39,0,0,1-5,7.43l-8.36,1.55a6.17,6.17,0,0,1-7.12-5.19L1219,487a6.39,6.39,0,0,1,5-7.43l8.36-1.55a6.17,6.17,0,0,1,7.12,5.19Z\"/>\r\n    </g>\r\n    <g id=\"bike\" data-name=\"Layer 5\">\r\n      <path class=\"cls-8 wheel\" d=\"M1139.82,780.44a76.59,76.59,0,1,0-57.9,91.53A76.59,76.59,0,0,0,1139.82,780.44Zm-28.12,6.33a47.59,47.59,0,0,1,.83,15.8c-30.14-6.28-47.68-21.65-54.39-52.52A47.73,47.73,0,0,1,1111.69,786.77Zm-70.46-30.9c10.35,26.88,10.14,50.4-13.73,70.77a47.67,47.67,0,0,1,13.73-70.77Zm34.35,88a47.55,47.55,0,0,1-34.94-5.62c16.8-20.36,41.71-25.94,67.09-19.46A47.66,47.66,0,0,1,1075.58,843.85Z\"/>\r\n      <path class=\"cls-8 wheel\" d=\"M864.89,789.69a76.59,76.59,0,1,0-66.13,85.78A76.59,76.59,0,0,0,864.89,789.69Zm-28.59,3.7a47.59,47.59,0,0,1-.64,15.81c-29.43-9-45.47-26-49.3-57.33A47.73,47.73,0,0,1,836.3,793.39ZM769,756.1c7.82,27.72,5.43,51.12-20.22,69.2A47.67,47.67,0,0,1,769,756.1Zm26.06,90.78a47.55,47.55,0,0,1-34.27-8.83c18.61-18.72,43.93-22,68.6-13.16A47.66,47.66,0,0,1,795.06,846.88Z\"/>\r\n      <g>\r\n        <rect class=\"cls-1\" x=\"871.39\" y=\"693.37\" width=\"12.87\" height=\"53.21\" transform=\"translate(-165.97 273.38) rotate(-16.19)\"/>\r\n        <path class=\"cls-5\" d=\"M813.93,679.35c-3.72-5.2,2.24-18.5,9.16-16.13,33.43,11.46,73.85,10.45,73.85,10.45,8.84.15,14.44,10.34,7.27,15.48-14.36,8.79-33.13,17-56.35,9.76C830.17,693.41,819.83,687.6,813.93,679.35Z\"/>\r\n        <path class=\"cls-7\" d=\"M813.93,679.35c-3.72-5.2,2.24-18.5,9.16-16.13,33.43,11.46,73.85,10.45,73.85,10.45,8.84.15,14.44,10.34,7.27,15.48-14.36,8.79-33.13,17-56.35,9.76C830.17,693.41,819.83,687.6,813.93,679.35Z\"/>\r\n        <path class=\"cls-5\" d=\"M817.15,680.06c-3.59-5,1.69-16.51,8.37-14.22,32.3,11.09,71.41,7.83,71.41,7.83,8.54.14,17.45,9.94,7.43,15.88-13.87,8.51-32,16.44-54.44,9.44C832.84,693.67,822.85,688,817.15,680.06Z\"/>\r\n      </g>\r\n      <g>\r\n        <circle class=\"cls-9\" cx=\"1022.66\" cy=\"599.55\" r=\"11.57\" transform=\"translate(-4.86 8.38) rotate(-0.47)\"/>\r\n        <path class=\"cls-1\" d=\"M1069.76,792.37l-34.89-96.74,1.93-.8-1.71-4.15-1.74.72-13.26-36.76,1.27-.42-2.25-6.76,5.94-2-2.57-7.72-9.7,3.22c-11.55-22.55,2-36.33,15-41.86l-5.57-8.81c-23,10.29-29.61,28.75-19.53,54l-9.38,3.12,2.56,7.72,5.47-1.82,2.25,6.76,2.36-.78,13.62,37.76-2.35,1,1.71,4.15,2.16-.89,34.65,96.09a7.47,7.47,0,0,0,9.56,4.49h0A7.47,7.47,0,0,0,1069.76,792.37Z\"/>\r\n        <circle class=\"cls-11\" cx=\"1027.9\" cy=\"587.94\" r=\"12.99\" transform=\"translate(-4.77 8.42) rotate(-0.47)\"/>\r\n      </g>\r\n      <path class=\"cls-5\" d=\"M1021.29,654l-17.73,6.15,1.72,5.59-31.41,82.36c-19.35,32.53-66.3,36.72-75.56,16.68l-7.09-21.5L879,747.1l3.28,10.09-94.65,33.95c-11.49,2.29-11.85,15.79-2.61,17.84,0,0,39.11,3.66,103,9.5a92.75,92.75,0,0,0,40.89-5.29c44.32-16.56,57.73-50.67,57.73-50.67l26.82-67.26a1.37,1.37,0,0,1,2.53,0l1.42,3.33,17.75-7.62Z\"/>\r\n      <path class=\"cls-7\" d=\"M1021.29,654l-17.73,6.15,1.72,5.59-31.41,82.36c-19.35,32.53-66.3,36.72-75.56,16.68l-7.09-21.5L879,747.1l3.28,10.09-94.65,33.95c-11.49,2.29-11.85,15.79-2.61,17.84,0,0,39.11,3.66,103,9.5a92.75,92.75,0,0,0,40.89-5.29c44.32-16.56,57.73-50.67,57.73-50.67l26.82-67.26a1.37,1.37,0,0,1,2.53,0l1.42,3.33,17.75-7.62Z\"/>\r\n    </g>\r\n  </svg>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { ResetPasswordService } from '../../services/reset-password.service';\r\nimport { ResetPassword } from '../../../_models/resetPassword';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastService } from '../../../_services/toast-service.service';\r\nconst resetTOKEN_KEY = 'reset-token';\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  resetPass: ResetPassword = new ResetPassword();\r\n  submitted = false;\r\n  isSuccessful: boolean;\r\n  responseMessage='';\r\n  constructor(\r\n    private resetPasswordService: ResetPasswordService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public toastService: ToastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    let resetPasstoken = this.getParameterByName(\"reset_token\");\r\n    if (resetPasstoken) {\r\n      // this.isLoggedIn = true;\r\n      localStorage.setItem(resetTOKEN_KEY, resetPasstoken);\r\n      console.log(\"resetPass_token\" + localStorage.getItem(resetTOKEN_KEY));\r\n    }\r\n  }\r\n  resetPassword(dangerTpl, successTpl) {\r\n    this.resetPasswordService.resetPassword(localStorage.getItem(resetTOKEN_KEY), this.resetPass)\r\n      .subscribe(\r\n        response => {\r\n          console.log(response);\r\n        //  this.responseMessage=response.toString();\r\n          if(response ===\"Password updated successfully!\"){\r\n            this.isSuccessful=true;\r\n            this.toastService.show(successTpl, { classname: 'bg-success text-light mt-5 ', delay: 6000 });\r\n            console.log(this.isSuccessful);\r\n            this.responseMessage=response.toString();\r\n          } \r\n          else {\r\n            this.responseMessage=\"Incorrect confirm password!\";\r\n            this.isSuccessful=false;\r\n            this.toastService.show(dangerTpl, { classname: 'bg-danger text-light mt-5', delay: 6000 });\r\n          }\r\n        },\r\n        error => { \r\n          console.log(error) ;\r\n          this.responseMessage=\"Invalid request!\";\r\n          this.isSuccessful=false;\r\n          this.toastService.show(dangerTpl, { classname: 'bg-danger text-light', delay: 6000 });\r\n        });\r\n  }\r\n  onSubmit(dangerTpl, successTpl) {\r\n    this.submitted = true;\r\n    this.resetPassword(dangerTpl, successTpl);\r\n  }\r\n  getParameterByName(name: string): string {\r\n    // if (!url) url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\");\r\n    var results = regex.exec(location.href);\r\n    // results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"view\">\r\n    <div class=\"  pt-5 pb-5 \">\r\n\r\n        <!-- Default form login -->\r\n        <div class=\"container border border-light rounded mt-5\">\r\n            <form  (ngSubmit)=\"onSubmit(dangerTpl, successTpl)\" class=\"  p-5\">\r\n                <h3 class=\" text-center mb-5  text-primary font-weight-bolder \" style=\"letter-spacing: 1px;\"> Reset your\r\n                    password</h3>\r\n                <label *ngIf=\"!isSuccessful\" class=\"text-left text-primary h6 mb-3 \">New password*</label>\r\n                <input *ngIf=\"!isSuccessful\" type=\"password\" id=\"newpassword\" class=\"form-control mb-4\" placeholder=\"New Password\"\r\n                    [(ngModel)]=\"resetPass.newpassword\" name=\"newpassword\">\r\n                <label *ngIf=\"!isSuccessful\" class=\"text-left text-primary h6 mb-3\">Confirm new password*</label>\r\n                <input *ngIf=\"!isSuccessful\" type=\"password\" id=\"reenterednewpassword\" class=\"form-control mb-4\"\r\n                    placeholder=\"Confirm new password\" [(ngModel)]=\"resetPass.reenterednewpassword\"\r\n                    name=\"reenterednewpassword\">\r\n                    <div class=\"alert alert-success mt-3 text-center\" *ngIf=\"isSuccessful\">\r\n                        {{responseMessage}}\r\n                        <a [href]=\"'http://localhost:4200/guest/login'\"><strong>Sign in</strong></a>\r\n                    </div>\r\n                <button *ngIf=\"!isSuccessful\" class=\"btn btn-primary my-4\" type=\"submit\"\r\n                   ><strong>Save</strong></button>\r\n\r\n            </form>\r\n            <app-toasts aria-live=\"polite\" aria-atomic=\"true\"></app-toasts>\r\n            <ng-template #successTpl>\r\n                <span style=\"font-size: 18px;\"><i class=\"fas fa-check mr-3 \"></i>Change password successful!</span>\r\n            </ng-template>\r\n            <ng-template #dangerTpl>\r\n                <span style=\"font-size: 18px;\"><i\r\n                        class=\"fas fa-exclamation-triangle mr-3\"></i>{{responseMessage}}</span>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-job',\r\n  templateUrl: './search-job.component.html',\r\n  styleUrls: ['./search-job.component.scss']\r\n})\r\nexport class SearchJobComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"heavy-rain-gradient\r\n                rounded-lg pl-3 pr-3 rounded-lg\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-4 col-sm-12 col-md-12\">\r\n            <div class=\"input-group mt-4\">\r\n                <div class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\" id=\"basic-addon1\">\r\n                        <mdb-icon fas icon=\"search\"></mdb-icon>\r\n                    </span>\r\n                </div>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Find your expectation\" aria-label=\"expectation\"\r\n                    aria-describedby=\"basic-addon1\">\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n            <div class=\"dropdown\" mdbDropdown>\r\n                <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\" type=\"button\"\r\n                    mdbWavesEffect block=\"true\">\r\n                    <span class=\"text-button\">All Work Title</span>\r\n                </button>\r\n                <div class=\"dropdown-menu dropdown-primary\">\r\n                    <!-- job -->\r\n                    <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                    <!-- job    -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-3 col-sm-12 col-md-12 mt-4\">\r\n            <div class=\"dropdown\" mdbDropdown>\r\n                <button mdbDropdownToggle mdbBtn color=\"primary\" class=\"dropdown-toggle waves-light\" type=\"button\"\r\n                    mdbWavesEffect block=\"true\">\r\n                    <span class=\"text-button\">All Categories</span>\r\n\r\n                </button>\r\n                <div class=\"dropdown-menu dropdown-primary\">\r\n                    <!-- location -->\r\n                    <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n                    <!-- location    -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-lg-2 col-sm-12 col-md-12\">\r\n            <button mdbBtn color=\"success\" block=\"true\" class=\"my-4\" type=\"submit\"> <strong><span\r\n                        class=\"text-button\">Search</span></strong> </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'share-validate-acc',\r\n  templateUrl: './validate-acc.component.html',\r\n  styleUrls: ['./validate-acc.component.scss']\r\n})\r\nexport class ValidateAccComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>works</p>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:8080/auth/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class _AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  login(credentials): Observable<any> {\r\n    return this.http.post(AUTH_API + 'login', {\r\n      email: credentials.email,\r\n      password: credentials.password\r\n    }, httpOptions);\r\n  }\r\n  // register(user): Observable<any> {\r\n  //   return this.http.post(AUTH_API + 'signup', {\r\n  //     firstname: user.firstname,\r\n  //     lastname: user.lastname,\r\n  //     email: user.email,\r\n  //     password: user.password,\r\n  //     role: [user.role]\r\n  //   }, httpOptions);\r\n  // }\r\n  registerCandidate(user): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signupforcandidate', {\r\n      name: user.name,\r\n      email: user.email,\r\n      password: user.password\r\n    }, httpOptions);\r\n  }\r\n  registerEmployer(user): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signupforemployer', {\r\n      name: user.name,\r\n      email: user.email,\r\n      password: user.password,\r\n      companyname: user.companyname,\r\n      industry: user.industry,\r\n      phonenumber: user.phonenumber\r\n    }, httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ForgorPasswordService {\r\n  private forgotpassUrl='http://localhost:8080/auth/forgotpassword';\r\n  constructor(private http: HttpClient) { }\r\n  forgotPassword(email: Object): Observable<Object> {\r\n    return this.http.post(`${this.forgotpassUrl}`, email, {responseType: 'text'});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient , HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nlet params= localStorage.getItem('resetPass_token');\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResetPasswordService {\r\n  private resetpassUrl='http://localhost:8080/auth/resetpassword';\r\n  constructor(private http: HttpClient) { }\r\n  resetPassword(resetPasswordToken,resetPass: Object): Observable<Object> {\r\n    return this.http.post(`${this.resetpassUrl}?token=${resetPasswordToken}`,resetPass,{responseType: 'text'});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n//sessionStorage\r\n  constructor() { }\r\n  signOut() {\r\n    window.sessionStorage.clear();\r\n  }\r\n  public saveToken(token: string) {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user) {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser() {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InputsModule,InputUtilitiesModule, WavesModule, ButtonsModule, CollapseModule } from 'angular-bootstrap-md';\r\nimport { ToastComponent } from '../components/toast/toast.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\nimport { SearchJobComponent } from './components/search-job/search-job.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { ForgotPassComponent} from './components/forgot-pass/forgot-pass.component';\r\nimport { ChangePassComponent } from './components/change-pass/change-pass.component';\r\nimport { ValidateAccComponent } from './components/validate-acc/validate-acc.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NotfoundComponent } from './components/notfound/notfound.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\n//import {HeaderForEmployerComponent} from './components/header-for-employer/header-for-employer.component';\r\n@NgModule({\r\n  declarations: [\r\n    SearchJobComponent,\r\n    FooterComponent,\r\n    ForgotPassComponent,\r\n    ChangePassComponent,\r\n    ValidateAccComponent,\r\n  //  HeaderForEmployerComponent,\r\n    LoginComponent,\r\n  NotfoundComponent,\r\n   ToastComponent,\r\n   ResetPasswordComponent\r\n  \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InputsModule,\r\n    InputUtilitiesModule,\r\n    WavesModule,\r\n    ButtonsModule,\r\n    CollapseModule,\r\n    NgbModule\r\n  ],\r\n  exports: [\r\n    SearchJobComponent,\r\n    MDBBootstrapModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    InputsModule,\r\n    InputUtilitiesModule,\r\n    WavesModule,\r\n    ButtonsModule,\r\n    CollapseModule,\r\n    NgbModule,\r\n    ChangePassComponent,\r\n   // HeaderForEmployerComponent,\r\n    ValidateAccComponent,\r\n    FooterComponent,\r\n    ForgotPassComponent,\r\n    LoginComponent,\r\n    NotfoundComponent,\r\n     ToastComponent\r\n  ]\r\n})\r\nexport class SharedModule {\r\n  static forRoot(){\r\n    return {\r\n      ngModule: SharedModule,\r\n      providers: [\r\n        SearchJobComponent,\r\n       // HeaderForEmployerComponent,\r\n        ValidateAccComponent,\r\n        FooterComponent,\r\n        ForgotPassComponent,\r\n        ChangePassComponent,\r\n        LoginComponent,\r\n        NotfoundComponent,\r\n         ToastComponent\r\n      ]\r\n    }\r\n  }\r\n }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}